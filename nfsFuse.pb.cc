// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nfsFuse.proto

#include "nfsFuse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace nfsFuse {
class VoidMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VoidMessage> _instance;
} _VoidMessage_default_instance_;
class GetAttrRequestParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAttrRequestParams> _instance;
} _GetAttrRequestParams_default_instance_;
class GetAttrResponseParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAttrResponseParams> _instance;
} _GetAttrResponseParams_default_instance_;
class ReadDirRequestParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadDirRequestParams> _instance;
} _ReadDirRequestParams_default_instance_;
class ReadDirResponseParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadDirResponseParams> _instance;
} _ReadDirResponseParams_default_instance_;
class MkDirRequestParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MkDirRequestParams> _instance;
} _MkDirRequestParams_default_instance_;
class CreateRequestParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateRequestParams> _instance;
} _CreateRequestParams_default_instance_;
class DeleteRequestParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteRequestParams> _instance;
} _DeleteRequestParams_default_instance_;
class RmDirRequestParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RmDirRequestParams> _instance;
} _RmDirRequestParams_default_instance_;
class OpenRequestParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpenRequestParams> _instance;
} _OpenRequestParams_default_instance_;
class OpenResponseParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpenResponseParams> _instance;
} _OpenResponseParams_default_instance_;
class ReadRequestParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadRequestParams> _instance;
} _ReadRequestParams_default_instance_;
class ReadResponseParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadResponseParams> _instance;
} _ReadResponseParams_default_instance_;
class WriteRequestParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteRequestParams> _instance;
} _WriteRequestParams_default_instance_;
class LookupRequestParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LookupRequestParams> _instance;
} _LookupRequestParams_default_instance_;
class LookupResponseParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LookupResponseParams> _instance;
} _LookupResponseParams_default_instance_;
}  // namespace nfsFuse
static void InitDefaultsVoidMessage_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_VoidMessage_default_instance_;
    new (ptr) ::nfsFuse::VoidMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::VoidMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VoidMessage_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVoidMessage_nfsFuse_2eproto}, {}};

static void InitDefaultsGetAttrRequestParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_GetAttrRequestParams_default_instance_;
    new (ptr) ::nfsFuse::GetAttrRequestParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::GetAttrRequestParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetAttrRequestParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetAttrRequestParams_nfsFuse_2eproto}, {}};

static void InitDefaultsGetAttrResponseParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_GetAttrResponseParams_default_instance_;
    new (ptr) ::nfsFuse::GetAttrResponseParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::GetAttrResponseParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetAttrResponseParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetAttrResponseParams_nfsFuse_2eproto}, {}};

static void InitDefaultsReadDirRequestParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_ReadDirRequestParams_default_instance_;
    new (ptr) ::nfsFuse::ReadDirRequestParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::ReadDirRequestParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReadDirRequestParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReadDirRequestParams_nfsFuse_2eproto}, {}};

static void InitDefaultsReadDirResponseParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_ReadDirResponseParams_default_instance_;
    new (ptr) ::nfsFuse::ReadDirResponseParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::ReadDirResponseParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReadDirResponseParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReadDirResponseParams_nfsFuse_2eproto}, {}};

static void InitDefaultsMkDirRequestParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_MkDirRequestParams_default_instance_;
    new (ptr) ::nfsFuse::MkDirRequestParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::MkDirRequestParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MkDirRequestParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMkDirRequestParams_nfsFuse_2eproto}, {}};

static void InitDefaultsCreateRequestParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_CreateRequestParams_default_instance_;
    new (ptr) ::nfsFuse::CreateRequestParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::CreateRequestParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateRequestParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateRequestParams_nfsFuse_2eproto}, {}};

static void InitDefaultsDeleteRequestParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_DeleteRequestParams_default_instance_;
    new (ptr) ::nfsFuse::DeleteRequestParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::DeleteRequestParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteRequestParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteRequestParams_nfsFuse_2eproto}, {}};

static void InitDefaultsRmDirRequestParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_RmDirRequestParams_default_instance_;
    new (ptr) ::nfsFuse::RmDirRequestParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::RmDirRequestParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RmDirRequestParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRmDirRequestParams_nfsFuse_2eproto}, {}};

static void InitDefaultsOpenRequestParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_OpenRequestParams_default_instance_;
    new (ptr) ::nfsFuse::OpenRequestParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::OpenRequestParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OpenRequestParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOpenRequestParams_nfsFuse_2eproto}, {}};

static void InitDefaultsOpenResponseParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_OpenResponseParams_default_instance_;
    new (ptr) ::nfsFuse::OpenResponseParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::OpenResponseParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OpenResponseParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOpenResponseParams_nfsFuse_2eproto}, {}};

static void InitDefaultsReadRequestParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_ReadRequestParams_default_instance_;
    new (ptr) ::nfsFuse::ReadRequestParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::ReadRequestParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReadRequestParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReadRequestParams_nfsFuse_2eproto}, {}};

static void InitDefaultsReadResponseParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_ReadResponseParams_default_instance_;
    new (ptr) ::nfsFuse::ReadResponseParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::ReadResponseParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReadResponseParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReadResponseParams_nfsFuse_2eproto}, {}};

static void InitDefaultsWriteRequestParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_WriteRequestParams_default_instance_;
    new (ptr) ::nfsFuse::WriteRequestParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::WriteRequestParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WriteRequestParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWriteRequestParams_nfsFuse_2eproto}, {}};

static void InitDefaultsLookupRequestParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_LookupRequestParams_default_instance_;
    new (ptr) ::nfsFuse::LookupRequestParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::LookupRequestParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LookupRequestParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLookupRequestParams_nfsFuse_2eproto}, {}};

static void InitDefaultsLookupResponseParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_LookupResponseParams_default_instance_;
    new (ptr) ::nfsFuse::LookupResponseParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::LookupResponseParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LookupResponseParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLookupResponseParams_nfsFuse_2eproto}, {}};

void InitDefaults_nfsFuse_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_VoidMessage_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAttrRequestParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAttrResponseParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadDirRequestParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadDirResponseParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MkDirRequestParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateRequestParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteRequestParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RmDirRequestParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OpenRequestParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OpenResponseParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadRequestParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadResponseParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteRequestParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LookupRequestParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LookupResponseParams_nfsFuse_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_nfsFuse_2eproto[16];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_nfsFuse_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_nfsFuse_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_nfsFuse_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::VoidMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrRequestParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrRequestParams, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrResponseParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrResponseParams, mode_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrResponseParams, nlink_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrResponseParams, uid_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrResponseParams, guid_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrResponseParams, size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::ReadDirRequestParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::ReadDirRequestParams, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::ReadDirResponseParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::ReadDirResponseParams, filenames_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::MkDirRequestParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::MkDirRequestParams, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::CreateRequestParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::CreateRequestParams, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::DeleteRequestParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::DeleteRequestParams, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::RmDirRequestParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::RmDirRequestParams, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::OpenRequestParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::OpenRequestParams, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::OpenResponseParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::OpenResponseParams, filehandle_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::OpenResponseParams, uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::ReadRequestParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::ReadRequestParams, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::ReadResponseParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::ReadResponseParams, text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::WriteRequestParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::WriteRequestParams, bytes_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::WriteRequestParams, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::LookupRequestParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::LookupRequestParams, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::LookupResponseParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::LookupResponseParams, filehandle_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::LookupResponseParams, uid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::nfsFuse::VoidMessage)},
  { 5, -1, sizeof(::nfsFuse::GetAttrRequestParams)},
  { 11, -1, sizeof(::nfsFuse::GetAttrResponseParams)},
  { 21, -1, sizeof(::nfsFuse::ReadDirRequestParams)},
  { 27, -1, sizeof(::nfsFuse::ReadDirResponseParams)},
  { 33, -1, sizeof(::nfsFuse::MkDirRequestParams)},
  { 39, -1, sizeof(::nfsFuse::CreateRequestParams)},
  { 45, -1, sizeof(::nfsFuse::DeleteRequestParams)},
  { 51, -1, sizeof(::nfsFuse::RmDirRequestParams)},
  { 57, -1, sizeof(::nfsFuse::OpenRequestParams)},
  { 63, -1, sizeof(::nfsFuse::OpenResponseParams)},
  { 70, -1, sizeof(::nfsFuse::ReadRequestParams)},
  { 76, -1, sizeof(::nfsFuse::ReadResponseParams)},
  { 82, -1, sizeof(::nfsFuse::WriteRequestParams)},
  { 89, -1, sizeof(::nfsFuse::LookupRequestParams)},
  { 95, -1, sizeof(::nfsFuse::LookupResponseParams)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_VoidMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_GetAttrRequestParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_GetAttrResponseParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_ReadDirRequestParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_ReadDirResponseParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_MkDirRequestParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_CreateRequestParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_DeleteRequestParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_RmDirRequestParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_OpenRequestParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_OpenResponseParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_ReadRequestParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_ReadResponseParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_WriteRequestParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_LookupRequestParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_LookupResponseParams_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_nfsFuse_2eproto = {
  {}, AddDescriptors_nfsFuse_2eproto, "nfsFuse.proto", schemas,
  file_default_instances, TableStruct_nfsFuse_2eproto::offsets,
  file_level_metadata_nfsFuse_2eproto, 16, file_level_enum_descriptors_nfsFuse_2eproto, file_level_service_descriptors_nfsFuse_2eproto,
};

const char descriptor_table_protodef_nfsFuse_2eproto[] =
  "\n\rnfsFuse.proto\022\007nfsFuse\"\r\n\013VoidMessage\""
  "$\n\024GetAttrRequestParams\022\014\n\004path\030\001 \001(\t\"]\n"
  "\025GetAttrResponseParams\022\014\n\004mode\030\001 \001(\005\022\r\n\005"
  "nlink\030\002 \001(\005\022\013\n\003uid\030\003 \001(\005\022\014\n\004guid\030\004 \001(\005\022\014"
  "\n\004size\030\005 \001(\003\"$\n\024ReadDirRequestParams\022\014\n\004"
  "path\030\001 \001(\t\"*\n\025ReadDirResponseParams\022\021\n\tf"
  "ilenames\030\001 \003(\t\"\"\n\022MkDirRequestParams\022\014\n\004"
  "path\030\001 \001(\t\"#\n\023CreateRequestParams\022\014\n\004pat"
  "h\030\001 \001(\t\"#\n\023DeleteRequestParams\022\014\n\004path\030\001"
  " \001(\t\"\"\n\022RmDirRequestParams\022\014\n\004path\030\001 \001(\t"
  "\"!\n\021OpenRequestParams\022\014\n\004path\030\001 \001(\t\"5\n\022O"
  "penResponseParams\022\022\n\nfileHandle\030\001 \001(\005\022\013\n"
  "\003uid\030\002 \001(\005\"!\n\021ReadRequestParams\022\014\n\004path\030"
  "\001 \001(\t\"\"\n\022ReadResponseParams\022\014\n\004text\030\001 \001("
  "\t\"1\n\022WriteRequestParams\022\r\n\005bytes\030\001 \001(\t\022\014"
  "\n\004path\030\002 \001(\t\"#\n\023LookupRequestParams\022\014\n\004p"
  "ath\030\001 \001(\t\"7\n\024LookupResponseParams\022\022\n\nfil"
  "eHandle\030\001 \001(\005\022\013\n\003uid\030\002 \001(\0052\252\005\n\007NFSFuse\022J"
  "\n\007getattr\022\035.nfsFuse.GetAttrRequestParams"
  "\032\036.nfsFuse.GetAttrResponseParams\"\000\022J\n\007re"
  "addir\022\035.nfsFuse.ReadDirRequestParams\032\036.n"
  "fsFuse.ReadDirResponseParams\"\000\022<\n\005mkdir\022"
  "\033.nfsFuse.MkDirRequestParams\032\024.nfsFuse.V"
  "oidMessage\"\000\022<\n\005rmdir\022\033.nfsFuse.RmDirReq"
  "uestParams\032\024.nfsFuse.VoidMessage\"\000\022>\n\006cr"
  "eate\022\034.nfsFuse.CreateRequestParams\032\024.nfs"
  "Fuse.VoidMessage\"\000\022>\n\006remove\022\034.nfsFuse.D"
  "eleteRequestParams\032\024.nfsFuse.VoidMessage"
  "\"\000\022A\n\004open\022\032.nfsFuse.OpenRequestParams\032\033"
  ".nfsFuse.OpenResponseParams\"\000\022A\n\004read\022\032."
  "nfsFuse.ReadRequestParams\032\033.nfsFuse.Read"
  "ResponseParams\"\000\022<\n\005write\022\033.nfsFuse.Writ"
  "eRequestParams\032\024.nfsFuse.VoidMessage\"\000\022G"
  "\n\006lookup\022\034.nfsFuse.LookupRequestParams\032\035"
  ".nfsFuse.LookupResponseParams\"\000b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_nfsFuse_2eproto = {
  false, InitDefaults_nfsFuse_2eproto, 
  descriptor_table_protodef_nfsFuse_2eproto,
  "nfsFuse.proto", &assign_descriptors_table_nfsFuse_2eproto, 1399,
};

void AddDescriptors_nfsFuse_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_nfsFuse_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_nfsFuse_2eproto = []() { AddDescriptors_nfsFuse_2eproto(); return true; }();
namespace nfsFuse {

// ===================================================================

void VoidMessage::InitAsDefaultInstance() {
}
class VoidMessage::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VoidMessage::VoidMessage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.VoidMessage)
}
VoidMessage::VoidMessage(const VoidMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:nfsFuse.VoidMessage)
}

void VoidMessage::SharedCtor() {
}

VoidMessage::~VoidMessage() {
  // @@protoc_insertion_point(destructor:nfsFuse.VoidMessage)
  SharedDtor();
}

void VoidMessage::SharedDtor() {
}

void VoidMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VoidMessage& VoidMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_VoidMessage_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void VoidMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.VoidMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* VoidMessage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<VoidMessage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool VoidMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.VoidMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.VoidMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.VoidMessage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void VoidMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.VoidMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.VoidMessage)
}

::google::protobuf::uint8* VoidMessage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.VoidMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.VoidMessage)
  return target;
}

size_t VoidMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.VoidMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VoidMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.VoidMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const VoidMessage* source =
      ::google::protobuf::DynamicCastToGenerated<VoidMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.VoidMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.VoidMessage)
    MergeFrom(*source);
  }
}

void VoidMessage::MergeFrom(const VoidMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.VoidMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void VoidMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.VoidMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoidMessage::CopyFrom(const VoidMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.VoidMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoidMessage::IsInitialized() const {
  return true;
}

void VoidMessage::Swap(VoidMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VoidMessage::InternalSwap(VoidMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VoidMessage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetAttrRequestParams::InitAsDefaultInstance() {
}
class GetAttrRequestParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAttrRequestParams::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAttrRequestParams::GetAttrRequestParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.GetAttrRequestParams)
}
GetAttrRequestParams::GetAttrRequestParams(const GetAttrRequestParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:nfsFuse.GetAttrRequestParams)
}

void GetAttrRequestParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetAttrRequestParams_nfsFuse_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetAttrRequestParams::~GetAttrRequestParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.GetAttrRequestParams)
  SharedDtor();
}

void GetAttrRequestParams::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAttrRequestParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAttrRequestParams& GetAttrRequestParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetAttrRequestParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void GetAttrRequestParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.GetAttrRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetAttrRequestParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetAttrRequestParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("nfsFuse.GetAttrRequestParams.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetAttrRequestParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.GetAttrRequestParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.GetAttrRequestParams.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.GetAttrRequestParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.GetAttrRequestParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetAttrRequestParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.GetAttrRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.GetAttrRequestParams.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.GetAttrRequestParams)
}

::google::protobuf::uint8* GetAttrRequestParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.GetAttrRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.GetAttrRequestParams.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.GetAttrRequestParams)
  return target;
}

size_t GetAttrRequestParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.GetAttrRequestParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAttrRequestParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.GetAttrRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAttrRequestParams* source =
      ::google::protobuf::DynamicCastToGenerated<GetAttrRequestParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.GetAttrRequestParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.GetAttrRequestParams)
    MergeFrom(*source);
  }
}

void GetAttrRequestParams::MergeFrom(const GetAttrRequestParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.GetAttrRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void GetAttrRequestParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.GetAttrRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAttrRequestParams::CopyFrom(const GetAttrRequestParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.GetAttrRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAttrRequestParams::IsInitialized() const {
  return true;
}

void GetAttrRequestParams::Swap(GetAttrRequestParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAttrRequestParams::InternalSwap(GetAttrRequestParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetAttrRequestParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetAttrResponseParams::InitAsDefaultInstance() {
}
class GetAttrResponseParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAttrResponseParams::kModeFieldNumber;
const int GetAttrResponseParams::kNlinkFieldNumber;
const int GetAttrResponseParams::kUidFieldNumber;
const int GetAttrResponseParams::kGuidFieldNumber;
const int GetAttrResponseParams::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAttrResponseParams::GetAttrResponseParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.GetAttrResponseParams)
}
GetAttrResponseParams::GetAttrResponseParams(const GetAttrResponseParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mode_, &from.mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&mode_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:nfsFuse.GetAttrResponseParams)
}

void GetAttrResponseParams::SharedCtor() {
  ::memset(&mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&mode_)) + sizeof(size_));
}

GetAttrResponseParams::~GetAttrResponseParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.GetAttrResponseParams)
  SharedDtor();
}

void GetAttrResponseParams::SharedDtor() {
}

void GetAttrResponseParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAttrResponseParams& GetAttrResponseParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetAttrResponseParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void GetAttrResponseParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.GetAttrResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&mode_)) + sizeof(size_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetAttrResponseParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetAttrResponseParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 mode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_mode(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 nlink = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_nlink(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 uid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_uid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 guid = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 size = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetAttrResponseParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.GetAttrResponseParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 mode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nlink = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nlink_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 uid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.GetAttrResponseParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.GetAttrResponseParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetAttrResponseParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.GetAttrResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mode = 1;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mode(), output);
  }

  // int32 nlink = 2;
  if (this->nlink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nlink(), output);
  }

  // int32 uid = 3;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->uid(), output);
  }

  // int32 guid = 4;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->guid(), output);
  }

  // int64 size = 5;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.GetAttrResponseParams)
}

::google::protobuf::uint8* GetAttrResponseParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.GetAttrResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mode = 1;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mode(), target);
  }

  // int32 nlink = 2;
  if (this->nlink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nlink(), target);
  }

  // int32 uid = 3;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->uid(), target);
  }

  // int32 guid = 4;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->guid(), target);
  }

  // int64 size = 5;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.GetAttrResponseParams)
  return target;
}

size_t GetAttrResponseParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.GetAttrResponseParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 mode = 1;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mode());
  }

  // int32 nlink = 2;
  if (this->nlink() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nlink());
  }

  // int32 uid = 3;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  // int32 guid = 4;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guid());
  }

  // int64 size = 5;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAttrResponseParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.GetAttrResponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAttrResponseParams* source =
      ::google::protobuf::DynamicCastToGenerated<GetAttrResponseParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.GetAttrResponseParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.GetAttrResponseParams)
    MergeFrom(*source);
  }
}

void GetAttrResponseParams::MergeFrom(const GetAttrResponseParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.GetAttrResponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.nlink() != 0) {
    set_nlink(from.nlink());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void GetAttrResponseParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.GetAttrResponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAttrResponseParams::CopyFrom(const GetAttrResponseParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.GetAttrResponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAttrResponseParams::IsInitialized() const {
  return true;
}

void GetAttrResponseParams::Swap(GetAttrResponseParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAttrResponseParams::InternalSwap(GetAttrResponseParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(mode_, other->mode_);
  swap(nlink_, other->nlink_);
  swap(uid_, other->uid_);
  swap(guid_, other->guid_);
  swap(size_, other->size_);
}

::google::protobuf::Metadata GetAttrResponseParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReadDirRequestParams::InitAsDefaultInstance() {
}
class ReadDirRequestParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadDirRequestParams::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadDirRequestParams::ReadDirRequestParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.ReadDirRequestParams)
}
ReadDirRequestParams::ReadDirRequestParams(const ReadDirRequestParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:nfsFuse.ReadDirRequestParams)
}

void ReadDirRequestParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReadDirRequestParams_nfsFuse_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReadDirRequestParams::~ReadDirRequestParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.ReadDirRequestParams)
  SharedDtor();
}

void ReadDirRequestParams::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadDirRequestParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReadDirRequestParams& ReadDirRequestParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReadDirRequestParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void ReadDirRequestParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.ReadDirRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReadDirRequestParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReadDirRequestParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("nfsFuse.ReadDirRequestParams.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReadDirRequestParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.ReadDirRequestParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.ReadDirRequestParams.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.ReadDirRequestParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.ReadDirRequestParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReadDirRequestParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.ReadDirRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.ReadDirRequestParams.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.ReadDirRequestParams)
}

::google::protobuf::uint8* ReadDirRequestParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.ReadDirRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.ReadDirRequestParams.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.ReadDirRequestParams)
  return target;
}

size_t ReadDirRequestParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.ReadDirRequestParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadDirRequestParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.ReadDirRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadDirRequestParams* source =
      ::google::protobuf::DynamicCastToGenerated<ReadDirRequestParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.ReadDirRequestParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.ReadDirRequestParams)
    MergeFrom(*source);
  }
}

void ReadDirRequestParams::MergeFrom(const ReadDirRequestParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.ReadDirRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void ReadDirRequestParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.ReadDirRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadDirRequestParams::CopyFrom(const ReadDirRequestParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.ReadDirRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadDirRequestParams::IsInitialized() const {
  return true;
}

void ReadDirRequestParams::Swap(ReadDirRequestParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadDirRequestParams::InternalSwap(ReadDirRequestParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ReadDirRequestParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReadDirResponseParams::InitAsDefaultInstance() {
}
class ReadDirResponseParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadDirResponseParams::kFilenamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadDirResponseParams::ReadDirResponseParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.ReadDirResponseParams)
}
ReadDirResponseParams::ReadDirResponseParams(const ReadDirResponseParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      filenames_(from.filenames_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:nfsFuse.ReadDirResponseParams)
}

void ReadDirResponseParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReadDirResponseParams_nfsFuse_2eproto.base);
}

ReadDirResponseParams::~ReadDirResponseParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.ReadDirResponseParams)
  SharedDtor();
}

void ReadDirResponseParams::SharedDtor() {
}

void ReadDirResponseParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReadDirResponseParams& ReadDirResponseParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReadDirResponseParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void ReadDirResponseParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.ReadDirResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filenames_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReadDirResponseParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReadDirResponseParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string filenames = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("nfsFuse.ReadDirResponseParams.filenames");
          object = msg->add_filenames();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReadDirResponseParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.ReadDirResponseParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string filenames = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_filenames()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filenames(this->filenames_size() - 1).data(),
            static_cast<int>(this->filenames(this->filenames_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.ReadDirResponseParams.filenames"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.ReadDirResponseParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.ReadDirResponseParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReadDirResponseParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.ReadDirResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string filenames = 1;
  for (int i = 0, n = this->filenames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filenames(i).data(), static_cast<int>(this->filenames(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.ReadDirResponseParams.filenames");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->filenames(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.ReadDirResponseParams)
}

::google::protobuf::uint8* ReadDirResponseParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.ReadDirResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string filenames = 1;
  for (int i = 0, n = this->filenames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filenames(i).data(), static_cast<int>(this->filenames(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.ReadDirResponseParams.filenames");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->filenames(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.ReadDirResponseParams)
  return target;
}

size_t ReadDirResponseParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.ReadDirResponseParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string filenames = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->filenames_size());
  for (int i = 0, n = this->filenames_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->filenames(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadDirResponseParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.ReadDirResponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadDirResponseParams* source =
      ::google::protobuf::DynamicCastToGenerated<ReadDirResponseParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.ReadDirResponseParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.ReadDirResponseParams)
    MergeFrom(*source);
  }
}

void ReadDirResponseParams::MergeFrom(const ReadDirResponseParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.ReadDirResponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  filenames_.MergeFrom(from.filenames_);
}

void ReadDirResponseParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.ReadDirResponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadDirResponseParams::CopyFrom(const ReadDirResponseParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.ReadDirResponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadDirResponseParams::IsInitialized() const {
  return true;
}

void ReadDirResponseParams::Swap(ReadDirResponseParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadDirResponseParams::InternalSwap(ReadDirResponseParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  filenames_.InternalSwap(CastToBase(&other->filenames_));
}

::google::protobuf::Metadata ReadDirResponseParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MkDirRequestParams::InitAsDefaultInstance() {
}
class MkDirRequestParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MkDirRequestParams::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MkDirRequestParams::MkDirRequestParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.MkDirRequestParams)
}
MkDirRequestParams::MkDirRequestParams(const MkDirRequestParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:nfsFuse.MkDirRequestParams)
}

void MkDirRequestParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MkDirRequestParams_nfsFuse_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MkDirRequestParams::~MkDirRequestParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.MkDirRequestParams)
  SharedDtor();
}

void MkDirRequestParams::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MkDirRequestParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MkDirRequestParams& MkDirRequestParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MkDirRequestParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void MkDirRequestParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.MkDirRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MkDirRequestParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MkDirRequestParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("nfsFuse.MkDirRequestParams.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MkDirRequestParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.MkDirRequestParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.MkDirRequestParams.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.MkDirRequestParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.MkDirRequestParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MkDirRequestParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.MkDirRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.MkDirRequestParams.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.MkDirRequestParams)
}

::google::protobuf::uint8* MkDirRequestParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.MkDirRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.MkDirRequestParams.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.MkDirRequestParams)
  return target;
}

size_t MkDirRequestParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.MkDirRequestParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MkDirRequestParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.MkDirRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  const MkDirRequestParams* source =
      ::google::protobuf::DynamicCastToGenerated<MkDirRequestParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.MkDirRequestParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.MkDirRequestParams)
    MergeFrom(*source);
  }
}

void MkDirRequestParams::MergeFrom(const MkDirRequestParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.MkDirRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void MkDirRequestParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.MkDirRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MkDirRequestParams::CopyFrom(const MkDirRequestParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.MkDirRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MkDirRequestParams::IsInitialized() const {
  return true;
}

void MkDirRequestParams::Swap(MkDirRequestParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MkDirRequestParams::InternalSwap(MkDirRequestParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MkDirRequestParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateRequestParams::InitAsDefaultInstance() {
}
class CreateRequestParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRequestParams::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRequestParams::CreateRequestParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.CreateRequestParams)
}
CreateRequestParams::CreateRequestParams(const CreateRequestParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:nfsFuse.CreateRequestParams)
}

void CreateRequestParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateRequestParams_nfsFuse_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateRequestParams::~CreateRequestParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.CreateRequestParams)
  SharedDtor();
}

void CreateRequestParams::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateRequestParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateRequestParams& CreateRequestParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateRequestParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void CreateRequestParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.CreateRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateRequestParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateRequestParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("nfsFuse.CreateRequestParams.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateRequestParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.CreateRequestParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.CreateRequestParams.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.CreateRequestParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.CreateRequestParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateRequestParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.CreateRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.CreateRequestParams.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.CreateRequestParams)
}

::google::protobuf::uint8* CreateRequestParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.CreateRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.CreateRequestParams.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.CreateRequestParams)
  return target;
}

size_t CreateRequestParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.CreateRequestParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateRequestParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.CreateRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRequestParams* source =
      ::google::protobuf::DynamicCastToGenerated<CreateRequestParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.CreateRequestParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.CreateRequestParams)
    MergeFrom(*source);
  }
}

void CreateRequestParams::MergeFrom(const CreateRequestParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.CreateRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void CreateRequestParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.CreateRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRequestParams::CopyFrom(const CreateRequestParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.CreateRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRequestParams::IsInitialized() const {
  return true;
}

void CreateRequestParams::Swap(CreateRequestParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRequestParams::InternalSwap(CreateRequestParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CreateRequestParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DeleteRequestParams::InitAsDefaultInstance() {
}
class DeleteRequestParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteRequestParams::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteRequestParams::DeleteRequestParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.DeleteRequestParams)
}
DeleteRequestParams::DeleteRequestParams(const DeleteRequestParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:nfsFuse.DeleteRequestParams)
}

void DeleteRequestParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DeleteRequestParams_nfsFuse_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteRequestParams::~DeleteRequestParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.DeleteRequestParams)
  SharedDtor();
}

void DeleteRequestParams::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteRequestParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteRequestParams& DeleteRequestParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeleteRequestParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void DeleteRequestParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.DeleteRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteRequestParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeleteRequestParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("nfsFuse.DeleteRequestParams.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteRequestParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.DeleteRequestParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.DeleteRequestParams.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.DeleteRequestParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.DeleteRequestParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteRequestParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.DeleteRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.DeleteRequestParams.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.DeleteRequestParams)
}

::google::protobuf::uint8* DeleteRequestParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.DeleteRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.DeleteRequestParams.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.DeleteRequestParams)
  return target;
}

size_t DeleteRequestParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.DeleteRequestParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRequestParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.DeleteRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRequestParams* source =
      ::google::protobuf::DynamicCastToGenerated<DeleteRequestParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.DeleteRequestParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.DeleteRequestParams)
    MergeFrom(*source);
  }
}

void DeleteRequestParams::MergeFrom(const DeleteRequestParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.DeleteRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void DeleteRequestParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.DeleteRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRequestParams::CopyFrom(const DeleteRequestParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.DeleteRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRequestParams::IsInitialized() const {
  return true;
}

void DeleteRequestParams::Swap(DeleteRequestParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteRequestParams::InternalSwap(DeleteRequestParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DeleteRequestParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RmDirRequestParams::InitAsDefaultInstance() {
}
class RmDirRequestParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RmDirRequestParams::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RmDirRequestParams::RmDirRequestParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.RmDirRequestParams)
}
RmDirRequestParams::RmDirRequestParams(const RmDirRequestParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:nfsFuse.RmDirRequestParams)
}

void RmDirRequestParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RmDirRequestParams_nfsFuse_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RmDirRequestParams::~RmDirRequestParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.RmDirRequestParams)
  SharedDtor();
}

void RmDirRequestParams::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RmDirRequestParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RmDirRequestParams& RmDirRequestParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RmDirRequestParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void RmDirRequestParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.RmDirRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RmDirRequestParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RmDirRequestParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("nfsFuse.RmDirRequestParams.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RmDirRequestParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.RmDirRequestParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.RmDirRequestParams.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.RmDirRequestParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.RmDirRequestParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RmDirRequestParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.RmDirRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.RmDirRequestParams.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.RmDirRequestParams)
}

::google::protobuf::uint8* RmDirRequestParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.RmDirRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.RmDirRequestParams.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.RmDirRequestParams)
  return target;
}

size_t RmDirRequestParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.RmDirRequestParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RmDirRequestParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.RmDirRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  const RmDirRequestParams* source =
      ::google::protobuf::DynamicCastToGenerated<RmDirRequestParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.RmDirRequestParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.RmDirRequestParams)
    MergeFrom(*source);
  }
}

void RmDirRequestParams::MergeFrom(const RmDirRequestParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.RmDirRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void RmDirRequestParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.RmDirRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RmDirRequestParams::CopyFrom(const RmDirRequestParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.RmDirRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RmDirRequestParams::IsInitialized() const {
  return true;
}

void RmDirRequestParams::Swap(RmDirRequestParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RmDirRequestParams::InternalSwap(RmDirRequestParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata RmDirRequestParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void OpenRequestParams::InitAsDefaultInstance() {
}
class OpenRequestParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenRequestParams::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenRequestParams::OpenRequestParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.OpenRequestParams)
}
OpenRequestParams::OpenRequestParams(const OpenRequestParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:nfsFuse.OpenRequestParams)
}

void OpenRequestParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_OpenRequestParams_nfsFuse_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OpenRequestParams::~OpenRequestParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.OpenRequestParams)
  SharedDtor();
}

void OpenRequestParams::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpenRequestParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OpenRequestParams& OpenRequestParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_OpenRequestParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void OpenRequestParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.OpenRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OpenRequestParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<OpenRequestParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("nfsFuse.OpenRequestParams.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OpenRequestParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.OpenRequestParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.OpenRequestParams.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.OpenRequestParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.OpenRequestParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OpenRequestParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.OpenRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.OpenRequestParams.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.OpenRequestParams)
}

::google::protobuf::uint8* OpenRequestParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.OpenRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.OpenRequestParams.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.OpenRequestParams)
  return target;
}

size_t OpenRequestParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.OpenRequestParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpenRequestParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.OpenRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenRequestParams* source =
      ::google::protobuf::DynamicCastToGenerated<OpenRequestParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.OpenRequestParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.OpenRequestParams)
    MergeFrom(*source);
  }
}

void OpenRequestParams::MergeFrom(const OpenRequestParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.OpenRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void OpenRequestParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.OpenRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenRequestParams::CopyFrom(const OpenRequestParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.OpenRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenRequestParams::IsInitialized() const {
  return true;
}

void OpenRequestParams::Swap(OpenRequestParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenRequestParams::InternalSwap(OpenRequestParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata OpenRequestParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void OpenResponseParams::InitAsDefaultInstance() {
}
class OpenResponseParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenResponseParams::kFileHandleFieldNumber;
const int OpenResponseParams::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenResponseParams::OpenResponseParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.OpenResponseParams)
}
OpenResponseParams::OpenResponseParams(const OpenResponseParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&filehandle_, &from.filehandle_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&filehandle_)) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:nfsFuse.OpenResponseParams)
}

void OpenResponseParams::SharedCtor() {
  ::memset(&filehandle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&filehandle_)) + sizeof(uid_));
}

OpenResponseParams::~OpenResponseParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.OpenResponseParams)
  SharedDtor();
}

void OpenResponseParams::SharedDtor() {
}

void OpenResponseParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OpenResponseParams& OpenResponseParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_OpenResponseParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void OpenResponseParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.OpenResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&filehandle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&filehandle_)) + sizeof(uid_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OpenResponseParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<OpenResponseParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 fileHandle = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_filehandle(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 uid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_uid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OpenResponseParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.OpenResponseParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 fileHandle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &filehandle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.OpenResponseParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.OpenResponseParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OpenResponseParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.OpenResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 fileHandle = 1;
  if (this->filehandle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->filehandle(), output);
  }

  // int32 uid = 2;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.OpenResponseParams)
}

::google::protobuf::uint8* OpenResponseParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.OpenResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 fileHandle = 1;
  if (this->filehandle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->filehandle(), target);
  }

  // int32 uid = 2;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.OpenResponseParams)
  return target;
}

size_t OpenResponseParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.OpenResponseParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 fileHandle = 1;
  if (this->filehandle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->filehandle());
  }

  // int32 uid = 2;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpenResponseParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.OpenResponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenResponseParams* source =
      ::google::protobuf::DynamicCastToGenerated<OpenResponseParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.OpenResponseParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.OpenResponseParams)
    MergeFrom(*source);
  }
}

void OpenResponseParams::MergeFrom(const OpenResponseParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.OpenResponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filehandle() != 0) {
    set_filehandle(from.filehandle());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void OpenResponseParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.OpenResponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenResponseParams::CopyFrom(const OpenResponseParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.OpenResponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenResponseParams::IsInitialized() const {
  return true;
}

void OpenResponseParams::Swap(OpenResponseParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenResponseParams::InternalSwap(OpenResponseParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(filehandle_, other->filehandle_);
  swap(uid_, other->uid_);
}

::google::protobuf::Metadata OpenResponseParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReadRequestParams::InitAsDefaultInstance() {
}
class ReadRequestParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadRequestParams::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRequestParams::ReadRequestParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.ReadRequestParams)
}
ReadRequestParams::ReadRequestParams(const ReadRequestParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:nfsFuse.ReadRequestParams)
}

void ReadRequestParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReadRequestParams_nfsFuse_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReadRequestParams::~ReadRequestParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.ReadRequestParams)
  SharedDtor();
}

void ReadRequestParams::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadRequestParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReadRequestParams& ReadRequestParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReadRequestParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void ReadRequestParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.ReadRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReadRequestParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReadRequestParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("nfsFuse.ReadRequestParams.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReadRequestParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.ReadRequestParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.ReadRequestParams.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.ReadRequestParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.ReadRequestParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReadRequestParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.ReadRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.ReadRequestParams.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.ReadRequestParams)
}

::google::protobuf::uint8* ReadRequestParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.ReadRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.ReadRequestParams.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.ReadRequestParams)
  return target;
}

size_t ReadRequestParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.ReadRequestParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadRequestParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.ReadRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadRequestParams* source =
      ::google::protobuf::DynamicCastToGenerated<ReadRequestParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.ReadRequestParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.ReadRequestParams)
    MergeFrom(*source);
  }
}

void ReadRequestParams::MergeFrom(const ReadRequestParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.ReadRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void ReadRequestParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.ReadRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRequestParams::CopyFrom(const ReadRequestParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.ReadRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRequestParams::IsInitialized() const {
  return true;
}

void ReadRequestParams::Swap(ReadRequestParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRequestParams::InternalSwap(ReadRequestParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ReadRequestParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReadResponseParams::InitAsDefaultInstance() {
}
class ReadResponseParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadResponseParams::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadResponseParams::ReadResponseParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.ReadResponseParams)
}
ReadResponseParams::ReadResponseParams(const ReadResponseParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:nfsFuse.ReadResponseParams)
}

void ReadResponseParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReadResponseParams_nfsFuse_2eproto.base);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReadResponseParams::~ReadResponseParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.ReadResponseParams)
  SharedDtor();
}

void ReadResponseParams::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadResponseParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReadResponseParams& ReadResponseParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReadResponseParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void ReadResponseParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.ReadResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReadResponseParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReadResponseParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string text = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("nfsFuse.ReadResponseParams.text");
        object = msg->mutable_text();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReadResponseParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.ReadResponseParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.ReadResponseParams.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.ReadResponseParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.ReadResponseParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReadResponseParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.ReadResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.ReadResponseParams.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.ReadResponseParams)
}

::google::protobuf::uint8* ReadResponseParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.ReadResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.ReadResponseParams.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.ReadResponseParams)
  return target;
}

size_t ReadResponseParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.ReadResponseParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadResponseParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.ReadResponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadResponseParams* source =
      ::google::protobuf::DynamicCastToGenerated<ReadResponseParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.ReadResponseParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.ReadResponseParams)
    MergeFrom(*source);
  }
}

void ReadResponseParams::MergeFrom(const ReadResponseParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.ReadResponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
}

void ReadResponseParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.ReadResponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadResponseParams::CopyFrom(const ReadResponseParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.ReadResponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadResponseParams::IsInitialized() const {
  return true;
}

void ReadResponseParams::Swap(ReadResponseParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadResponseParams::InternalSwap(ReadResponseParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ReadResponseParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WriteRequestParams::InitAsDefaultInstance() {
}
class WriteRequestParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteRequestParams::kBytesFieldNumber;
const int WriteRequestParams::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteRequestParams::WriteRequestParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.WriteRequestParams)
}
WriteRequestParams::WriteRequestParams(const WriteRequestParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bytes().size() > 0) {
    bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:nfsFuse.WriteRequestParams)
}

void WriteRequestParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_WriteRequestParams_nfsFuse_2eproto.base);
  bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WriteRequestParams::~WriteRequestParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.WriteRequestParams)
  SharedDtor();
}

void WriteRequestParams::SharedDtor() {
  bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WriteRequestParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WriteRequestParams& WriteRequestParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WriteRequestParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void WriteRequestParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.WriteRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WriteRequestParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WriteRequestParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string bytes = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("nfsFuse.WriteRequestParams.bytes");
        object = msg->mutable_bytes();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string path = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("nfsFuse.WriteRequestParams.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WriteRequestParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.WriteRequestParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string bytes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bytes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bytes().data(), static_cast<int>(this->bytes().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.WriteRequestParams.bytes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.WriteRequestParams.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.WriteRequestParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.WriteRequestParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WriteRequestParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.WriteRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bytes = 1;
  if (this->bytes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bytes().data(), static_cast<int>(this->bytes().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.WriteRequestParams.bytes");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bytes(), output);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.WriteRequestParams.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.WriteRequestParams)
}

::google::protobuf::uint8* WriteRequestParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.WriteRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bytes = 1;
  if (this->bytes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bytes().data(), static_cast<int>(this->bytes().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.WriteRequestParams.bytes");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bytes(), target);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.WriteRequestParams.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.WriteRequestParams)
  return target;
}

size_t WriteRequestParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.WriteRequestParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string bytes = 1;
  if (this->bytes().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bytes());
  }

  // string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteRequestParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.WriteRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteRequestParams* source =
      ::google::protobuf::DynamicCastToGenerated<WriteRequestParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.WriteRequestParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.WriteRequestParams)
    MergeFrom(*source);
  }
}

void WriteRequestParams::MergeFrom(const WriteRequestParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.WriteRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bytes().size() > 0) {

    bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void WriteRequestParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.WriteRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteRequestParams::CopyFrom(const WriteRequestParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.WriteRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteRequestParams::IsInitialized() const {
  return true;
}

void WriteRequestParams::Swap(WriteRequestParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteRequestParams::InternalSwap(WriteRequestParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  bytes_.Swap(&other->bytes_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata WriteRequestParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LookupRequestParams::InitAsDefaultInstance() {
}
class LookupRequestParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LookupRequestParams::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LookupRequestParams::LookupRequestParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.LookupRequestParams)
}
LookupRequestParams::LookupRequestParams(const LookupRequestParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:nfsFuse.LookupRequestParams)
}

void LookupRequestParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LookupRequestParams_nfsFuse_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LookupRequestParams::~LookupRequestParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.LookupRequestParams)
  SharedDtor();
}

void LookupRequestParams::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LookupRequestParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LookupRequestParams& LookupRequestParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LookupRequestParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void LookupRequestParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.LookupRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LookupRequestParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LookupRequestParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("nfsFuse.LookupRequestParams.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LookupRequestParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.LookupRequestParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.LookupRequestParams.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.LookupRequestParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.LookupRequestParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LookupRequestParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.LookupRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.LookupRequestParams.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.LookupRequestParams)
}

::google::protobuf::uint8* LookupRequestParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.LookupRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.LookupRequestParams.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.LookupRequestParams)
  return target;
}

size_t LookupRequestParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.LookupRequestParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LookupRequestParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.LookupRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  const LookupRequestParams* source =
      ::google::protobuf::DynamicCastToGenerated<LookupRequestParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.LookupRequestParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.LookupRequestParams)
    MergeFrom(*source);
  }
}

void LookupRequestParams::MergeFrom(const LookupRequestParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.LookupRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void LookupRequestParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.LookupRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LookupRequestParams::CopyFrom(const LookupRequestParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.LookupRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LookupRequestParams::IsInitialized() const {
  return true;
}

void LookupRequestParams::Swap(LookupRequestParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LookupRequestParams::InternalSwap(LookupRequestParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata LookupRequestParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LookupResponseParams::InitAsDefaultInstance() {
}
class LookupResponseParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LookupResponseParams::kFileHandleFieldNumber;
const int LookupResponseParams::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LookupResponseParams::LookupResponseParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.LookupResponseParams)
}
LookupResponseParams::LookupResponseParams(const LookupResponseParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&filehandle_, &from.filehandle_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&filehandle_)) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:nfsFuse.LookupResponseParams)
}

void LookupResponseParams::SharedCtor() {
  ::memset(&filehandle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&filehandle_)) + sizeof(uid_));
}

LookupResponseParams::~LookupResponseParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.LookupResponseParams)
  SharedDtor();
}

void LookupResponseParams::SharedDtor() {
}

void LookupResponseParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LookupResponseParams& LookupResponseParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LookupResponseParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void LookupResponseParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.LookupResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&filehandle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&filehandle_)) + sizeof(uid_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LookupResponseParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LookupResponseParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 fileHandle = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_filehandle(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 uid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_uid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LookupResponseParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.LookupResponseParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 fileHandle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &filehandle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.LookupResponseParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.LookupResponseParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LookupResponseParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.LookupResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 fileHandle = 1;
  if (this->filehandle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->filehandle(), output);
  }

  // int32 uid = 2;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.LookupResponseParams)
}

::google::protobuf::uint8* LookupResponseParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.LookupResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 fileHandle = 1;
  if (this->filehandle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->filehandle(), target);
  }

  // int32 uid = 2;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.LookupResponseParams)
  return target;
}

size_t LookupResponseParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.LookupResponseParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 fileHandle = 1;
  if (this->filehandle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->filehandle());
  }

  // int32 uid = 2;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LookupResponseParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.LookupResponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  const LookupResponseParams* source =
      ::google::protobuf::DynamicCastToGenerated<LookupResponseParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.LookupResponseParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.LookupResponseParams)
    MergeFrom(*source);
  }
}

void LookupResponseParams::MergeFrom(const LookupResponseParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.LookupResponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filehandle() != 0) {
    set_filehandle(from.filehandle());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void LookupResponseParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.LookupResponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LookupResponseParams::CopyFrom(const LookupResponseParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.LookupResponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LookupResponseParams::IsInitialized() const {
  return true;
}

void LookupResponseParams::Swap(LookupResponseParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LookupResponseParams::InternalSwap(LookupResponseParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(filehandle_, other->filehandle_);
  swap(uid_, other->uid_);
}

::google::protobuf::Metadata LookupResponseParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace nfsFuse
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::nfsFuse::VoidMessage* Arena::CreateMaybeMessage< ::nfsFuse::VoidMessage >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::VoidMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::GetAttrRequestParams* Arena::CreateMaybeMessage< ::nfsFuse::GetAttrRequestParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::GetAttrRequestParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::GetAttrResponseParams* Arena::CreateMaybeMessage< ::nfsFuse::GetAttrResponseParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::GetAttrResponseParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::ReadDirRequestParams* Arena::CreateMaybeMessage< ::nfsFuse::ReadDirRequestParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::ReadDirRequestParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::ReadDirResponseParams* Arena::CreateMaybeMessage< ::nfsFuse::ReadDirResponseParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::ReadDirResponseParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::MkDirRequestParams* Arena::CreateMaybeMessage< ::nfsFuse::MkDirRequestParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::MkDirRequestParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::CreateRequestParams* Arena::CreateMaybeMessage< ::nfsFuse::CreateRequestParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::CreateRequestParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::DeleteRequestParams* Arena::CreateMaybeMessage< ::nfsFuse::DeleteRequestParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::DeleteRequestParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::RmDirRequestParams* Arena::CreateMaybeMessage< ::nfsFuse::RmDirRequestParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::RmDirRequestParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::OpenRequestParams* Arena::CreateMaybeMessage< ::nfsFuse::OpenRequestParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::OpenRequestParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::OpenResponseParams* Arena::CreateMaybeMessage< ::nfsFuse::OpenResponseParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::OpenResponseParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::ReadRequestParams* Arena::CreateMaybeMessage< ::nfsFuse::ReadRequestParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::ReadRequestParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::ReadResponseParams* Arena::CreateMaybeMessage< ::nfsFuse::ReadResponseParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::ReadResponseParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::WriteRequestParams* Arena::CreateMaybeMessage< ::nfsFuse::WriteRequestParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::WriteRequestParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::LookupRequestParams* Arena::CreateMaybeMessage< ::nfsFuse::LookupRequestParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::LookupRequestParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::LookupResponseParams* Arena::CreateMaybeMessage< ::nfsFuse::LookupResponseParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::LookupResponseParams >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
