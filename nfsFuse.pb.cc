// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nfsFuse.proto

#include "nfsFuse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace nfsFuse {
class VoidMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VoidMessage> _instance;
} _VoidMessage_default_instance_;
class GetAttrRequestParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAttrRequestParams> _instance;
} _GetAttrRequestParams_default_instance_;
class GetAttrResponseParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAttrResponseParams> _instance;
} _GetAttrResponseParams_default_instance_;
class ReadDirRequestParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadDirRequestParams> _instance;
} _ReadDirRequestParams_default_instance_;
class ReadDirResponseParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadDirResponseParams> _instance;
} _ReadDirResponseParams_default_instance_;
class MkDirRequestParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MkDirRequestParams> _instance;
} _MkDirRequestParams_default_instance_;
class CreateRequestParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateRequestParams> _instance;
} _CreateRequestParams_default_instance_;
class CreateResponseParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateResponseParams> _instance;
} _CreateResponseParams_default_instance_;
class RmDirRequestParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RmDirRequestParams> _instance;
} _RmDirRequestParams_default_instance_;
class OpenRequestParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpenRequestParams> _instance;
} _OpenRequestParams_default_instance_;
class OpenResponseParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpenResponseParams> _instance;
} _OpenResponseParams_default_instance_;
class ReadRequestParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadRequestParams> _instance;
} _ReadRequestParams_default_instance_;
class ReadResponseParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadResponseParams> _instance;
} _ReadResponseParams_default_instance_;
class WriteRequestParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteRequestParams> _instance;
} _WriteRequestParams_default_instance_;
class WriteReponseParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteReponseParams> _instance;
} _WriteReponseParams_default_instance_;
}  // namespace nfsFuse
static void InitDefaultsVoidMessage_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_VoidMessage_default_instance_;
    new (ptr) ::nfsFuse::VoidMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::VoidMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VoidMessage_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVoidMessage_nfsFuse_2eproto}, {}};

static void InitDefaultsGetAttrRequestParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_GetAttrRequestParams_default_instance_;
    new (ptr) ::nfsFuse::GetAttrRequestParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::GetAttrRequestParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetAttrRequestParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetAttrRequestParams_nfsFuse_2eproto}, {}};

static void InitDefaultsGetAttrResponseParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_GetAttrResponseParams_default_instance_;
    new (ptr) ::nfsFuse::GetAttrResponseParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::GetAttrResponseParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetAttrResponseParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetAttrResponseParams_nfsFuse_2eproto}, {}};

static void InitDefaultsReadDirRequestParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_ReadDirRequestParams_default_instance_;
    new (ptr) ::nfsFuse::ReadDirRequestParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::ReadDirRequestParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReadDirRequestParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReadDirRequestParams_nfsFuse_2eproto}, {}};

static void InitDefaultsReadDirResponseParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_ReadDirResponseParams_default_instance_;
    new (ptr) ::nfsFuse::ReadDirResponseParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::ReadDirResponseParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReadDirResponseParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReadDirResponseParams_nfsFuse_2eproto}, {}};

static void InitDefaultsMkDirRequestParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_MkDirRequestParams_default_instance_;
    new (ptr) ::nfsFuse::MkDirRequestParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::MkDirRequestParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MkDirRequestParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMkDirRequestParams_nfsFuse_2eproto}, {}};

static void InitDefaultsCreateRequestParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_CreateRequestParams_default_instance_;
    new (ptr) ::nfsFuse::CreateRequestParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::CreateRequestParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateRequestParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateRequestParams_nfsFuse_2eproto}, {}};

static void InitDefaultsCreateResponseParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_CreateResponseParams_default_instance_;
    new (ptr) ::nfsFuse::CreateResponseParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::CreateResponseParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateResponseParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateResponseParams_nfsFuse_2eproto}, {}};

static void InitDefaultsRmDirRequestParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_RmDirRequestParams_default_instance_;
    new (ptr) ::nfsFuse::RmDirRequestParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::RmDirRequestParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RmDirRequestParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRmDirRequestParams_nfsFuse_2eproto}, {}};

static void InitDefaultsOpenRequestParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_OpenRequestParams_default_instance_;
    new (ptr) ::nfsFuse::OpenRequestParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::OpenRequestParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OpenRequestParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOpenRequestParams_nfsFuse_2eproto}, {}};

static void InitDefaultsOpenResponseParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_OpenResponseParams_default_instance_;
    new (ptr) ::nfsFuse::OpenResponseParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::OpenResponseParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OpenResponseParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOpenResponseParams_nfsFuse_2eproto}, {}};

static void InitDefaultsReadRequestParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_ReadRequestParams_default_instance_;
    new (ptr) ::nfsFuse::ReadRequestParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::ReadRequestParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReadRequestParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReadRequestParams_nfsFuse_2eproto}, {}};

static void InitDefaultsReadResponseParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_ReadResponseParams_default_instance_;
    new (ptr) ::nfsFuse::ReadResponseParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::ReadResponseParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReadResponseParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReadResponseParams_nfsFuse_2eproto}, {}};

static void InitDefaultsWriteRequestParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_WriteRequestParams_default_instance_;
    new (ptr) ::nfsFuse::WriteRequestParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::WriteRequestParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WriteRequestParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWriteRequestParams_nfsFuse_2eproto}, {}};

static void InitDefaultsWriteReponseParams_nfsFuse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nfsFuse::_WriteReponseParams_default_instance_;
    new (ptr) ::nfsFuse::WriteReponseParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nfsFuse::WriteReponseParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WriteReponseParams_nfsFuse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWriteReponseParams_nfsFuse_2eproto}, {}};

void InitDefaults_nfsFuse_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_VoidMessage_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAttrRequestParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAttrResponseParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadDirRequestParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadDirResponseParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MkDirRequestParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateRequestParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateResponseParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RmDirRequestParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OpenRequestParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OpenResponseParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadRequestParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadResponseParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteRequestParams_nfsFuse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteReponseParams_nfsFuse_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_nfsFuse_2eproto[15];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_nfsFuse_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_nfsFuse_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_nfsFuse_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::VoidMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::VoidMessage, ret_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::VoidMessage, err_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrRequestParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrRequestParams, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrResponseParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrResponseParams, dev_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrResponseParams, inode_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrResponseParams, mode_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrResponseParams, nlink_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrResponseParams, uid_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrResponseParams, guid_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrResponseParams, size_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrResponseParams, blocksize_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrResponseParams, nblock_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrResponseParams, latime_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrResponseParams, mtime_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrResponseParams, ctime_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::GetAttrResponseParams, err_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::ReadDirRequestParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::ReadDirRequestParams, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::ReadDirResponseParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::ReadDirResponseParams, dinode_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::ReadDirResponseParams, dname_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::ReadDirResponseParams, dtype_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::ReadDirResponseParams, err_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::MkDirRequestParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::MkDirRequestParams, path_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::MkDirRequestParams, mode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::CreateRequestParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::CreateRequestParams, path_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::CreateRequestParams, mode_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::CreateRequestParams, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::CreateResponseParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::CreateResponseParams, flags_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::CreateResponseParams, fh_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::CreateResponseParams, oldfh_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::CreateResponseParams, lockowner_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::CreateResponseParams, pollevent_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::CreateResponseParams, err_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::RmDirRequestParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::RmDirRequestParams, path_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::RmDirRequestParams, mode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::OpenRequestParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::OpenRequestParams, path_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::OpenRequestParams, flags_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::OpenRequestParams, fh_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::OpenRequestParams, oldfh_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::OpenRequestParams, lockowner_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::OpenRequestParams, pollevent_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::OpenRequestParams, err_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::OpenResponseParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::OpenResponseParams, path_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::OpenResponseParams, flags_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::OpenResponseParams, fh_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::OpenResponseParams, oldfh_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::OpenResponseParams, lockowner_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::OpenResponseParams, pollevent_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::OpenResponseParams, err_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::ReadRequestParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::ReadRequestParams, path_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::ReadRequestParams, size_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::ReadRequestParams, offset_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::ReadResponseParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::ReadResponseParams, buffer_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::ReadResponseParams, bufferlength_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::ReadResponseParams, err_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::WriteRequestParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::WriteRequestParams, buffer_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::WriteRequestParams, path_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::WriteRequestParams, bufferlength_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::WriteRequestParams, offset_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::WriteReponseParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nfsFuse::WriteReponseParams, bufferlength_),
  PROTOBUF_FIELD_OFFSET(::nfsFuse::WriteReponseParams, err_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::nfsFuse::VoidMessage)},
  { 7, -1, sizeof(::nfsFuse::GetAttrRequestParams)},
  { 13, -1, sizeof(::nfsFuse::GetAttrResponseParams)},
  { 31, -1, sizeof(::nfsFuse::ReadDirRequestParams)},
  { 37, -1, sizeof(::nfsFuse::ReadDirResponseParams)},
  { 46, -1, sizeof(::nfsFuse::MkDirRequestParams)},
  { 53, -1, sizeof(::nfsFuse::CreateRequestParams)},
  { 61, -1, sizeof(::nfsFuse::CreateResponseParams)},
  { 72, -1, sizeof(::nfsFuse::RmDirRequestParams)},
  { 79, -1, sizeof(::nfsFuse::OpenRequestParams)},
  { 91, -1, sizeof(::nfsFuse::OpenResponseParams)},
  { 103, -1, sizeof(::nfsFuse::ReadRequestParams)},
  { 111, -1, sizeof(::nfsFuse::ReadResponseParams)},
  { 119, -1, sizeof(::nfsFuse::WriteRequestParams)},
  { 128, -1, sizeof(::nfsFuse::WriteReponseParams)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_VoidMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_GetAttrRequestParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_GetAttrResponseParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_ReadDirRequestParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_ReadDirResponseParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_MkDirRequestParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_CreateRequestParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_CreateResponseParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_RmDirRequestParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_OpenRequestParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_OpenResponseParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_ReadRequestParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_ReadResponseParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_WriteRequestParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nfsFuse::_WriteReponseParams_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_nfsFuse_2eproto = {
  {}, AddDescriptors_nfsFuse_2eproto, "nfsFuse.proto", schemas,
  file_default_instances, TableStruct_nfsFuse_2eproto::offsets,
  file_level_metadata_nfsFuse_2eproto, 15, file_level_enum_descriptors_nfsFuse_2eproto, file_level_service_descriptors_nfsFuse_2eproto,
};

const char descriptor_table_protodef_nfsFuse_2eproto[] =
  "\n\rnfsFuse.proto\022\007nfsFuse\"\'\n\013VoidMessage\022"
  "\013\n\003ret\030\001 \001(\t\022\013\n\003err\030\002 \001(\005\"$\n\024GetAttrRequ"
  "estParams\022\014\n\004path\030\001 \001(\t\"\327\001\n\025GetAttrRespo"
  "nseParams\022\013\n\003dev\030\001 \001(\r\022\r\n\005inode\030\002 \001(\r\022\014\n"
  "\004mode\030\003 \001(\005\022\r\n\005nlink\030\004 \001(\r\022\013\n\003uid\030\005 \001(\r\022"
  "\014\n\004guid\030\006 \001(\r\022\014\n\004size\030\007 \001(\022\022\021\n\tblocksize"
  "\030\010 \001(\022\022\016\n\006nblock\030\t \001(\022\022\016\n\006latime\030\n \001(\005\022\r"
  "\n\005mtime\030\013 \001(\005\022\r\n\005ctime\030\014 \001(\005\022\013\n\003err\030\r \001("
  "\005\"$\n\024ReadDirRequestParams\022\014\n\004path\030\001 \001(\t\""
  "R\n\025ReadDirResponseParams\022\016\n\006dinode\030\001 \001(\r"
  "\022\r\n\005dname\030\002 \001(\t\022\r\n\005dtype\030\003 \001(\r\022\013\n\003err\030\004 "
  "\001(\005\"0\n\022MkDirRequestParams\022\014\n\004path\030\001 \001(\t\022"
  "\014\n\004mode\030\002 \001(\005\"@\n\023CreateRequestParams\022\014\n\004"
  "path\030\001 \001(\t\022\014\n\004mode\030\002 \001(\005\022\r\n\005flags\030\003 \001(\005\""
  "s\n\024CreateResponseParams\022\r\n\005flags\030\001 \001(\005\022\n"
  "\n\002fh\030\002 \001(\005\022\r\n\005oldfh\030\003 \001(\r\022\021\n\tlockowner\030\004"
  " \001(\004\022\021\n\tpollevent\030\005 \001(\r\022\013\n\003err\030\006 \001(\005\"0\n\022"
  "RmDirRequestParams\022\014\n\004path\030\001 \001(\t\022\014\n\004mode"
  "\030\002 \001(\005\"~\n\021OpenRequestParams\022\014\n\004path\030\001 \001("
  "\t\022\r\n\005flags\030\002 \001(\005\022\n\n\002fh\030\003 \001(\005\022\r\n\005oldfh\030\004 "
  "\001(\r\022\021\n\tlockowner\030\005 \001(\004\022\021\n\tpollevent\030\006 \001("
  "\r\022\013\n\003err\030\007 \001(\005\"\177\n\022OpenResponseParams\022\014\n\004"
  "path\030\001 \001(\t\022\r\n\005flags\030\002 \001(\005\022\n\n\002fh\030\003 \001(\005\022\r\n"
  "\005oldfh\030\004 \001(\r\022\021\n\tlockowner\030\005 \001(\004\022\021\n\tpolle"
  "vent\030\006 \001(\r\022\013\n\003err\030\007 \001(\005\"\?\n\021ReadRequestPa"
  "rams\022\014\n\004path\030\001 \001(\t\022\014\n\004size\030\002 \001(\r\022\016\n\006offs"
  "et\030\003 \001(\003\"G\n\022ReadResponseParams\022\016\n\006buffer"
  "\030\001 \001(\014\022\024\n\014bufferlength\030\002 \001(\005\022\013\n\003err\030\003 \001("
  "\005\"X\n\022WriteRequestParams\022\016\n\006buffer\030\001 \001(\014\022"
  "\014\n\004path\030\002 \001(\t\022\024\n\014bufferlength\030\003 \001(\r\022\016\n\006o"
  "ffset\030\004 \001(\005\"7\n\022WriteReponseParams\022\024\n\014buf"
  "ferlength\030\001 \001(\005\022\013\n\003err\030\002 \001(\0052\263\004\n\007NFSFuse"
  "\022J\n\007getattr\022\035.nfsFuse.GetAttrRequestPara"
  "ms\032\036.nfsFuse.GetAttrResponseParams\"\000\022L\n\007"
  "readdir\022\035.nfsFuse.ReadDirRequestParams\032\036"
  ".nfsFuse.ReadDirResponseParams\"\0000\001\022<\n\005mk"
  "dir\022\033.nfsFuse.MkDirRequestParams\032\024.nfsFu"
  "se.VoidMessage\"\000\022<\n\005rmdir\022\033.nfsFuse.RmDi"
  "rRequestParams\032\024.nfsFuse.VoidMessage\"\000\022G"
  "\n\006create\022\034.nfsFuse.CreateRequestParams\032\035"
  ".nfsFuse.CreateResponseParams\"\000\022A\n\004open\022"
  "\032.nfsFuse.OpenRequestParams\032\033.nfsFuse.Op"
  "enResponseParams\"\000\022A\n\004read\022\032.nfsFuse.Rea"
  "dRequestParams\032\033.nfsFuse.ReadResponsePar"
  "ams\"\000\022C\n\005write\022\033.nfsFuse.WriteRequestPar"
  "ams\032\033.nfsFuse.WriteReponseParams\"\000b\006prot"
  "o3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_nfsFuse_2eproto = {
  false, InitDefaults_nfsFuse_2eproto, 
  descriptor_table_protodef_nfsFuse_2eproto,
  "nfsFuse.proto", &assign_descriptors_table_nfsFuse_2eproto, 1842,
};

void AddDescriptors_nfsFuse_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_nfsFuse_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_nfsFuse_2eproto = []() { AddDescriptors_nfsFuse_2eproto(); return true; }();
namespace nfsFuse {

// ===================================================================

void VoidMessage::InitAsDefaultInstance() {
}
class VoidMessage::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VoidMessage::kRetFieldNumber;
const int VoidMessage::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VoidMessage::VoidMessage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.VoidMessage)
}
VoidMessage::VoidMessage(const VoidMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ret().size() > 0) {
    ret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ret_);
  }
  err_ = from.err_;
  // @@protoc_insertion_point(copy_constructor:nfsFuse.VoidMessage)
}

void VoidMessage::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_VoidMessage_nfsFuse_2eproto.base);
  ret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  err_ = 0;
}

VoidMessage::~VoidMessage() {
  // @@protoc_insertion_point(destructor:nfsFuse.VoidMessage)
  SharedDtor();
}

void VoidMessage::SharedDtor() {
  ret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VoidMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VoidMessage& VoidMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_VoidMessage_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void VoidMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.VoidMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  err_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* VoidMessage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<VoidMessage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string ret = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("nfsFuse.VoidMessage.ret");
        object = msg->mutable_ret();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 err = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_err(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool VoidMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.VoidMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ret()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ret().data(), static_cast<int>(this->ret().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.VoidMessage.ret"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 err = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.VoidMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.VoidMessage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void VoidMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.VoidMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ret = 1;
  if (this->ret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ret().data(), static_cast<int>(this->ret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.VoidMessage.ret");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ret(), output);
  }

  // int32 err = 2;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.VoidMessage)
}

::google::protobuf::uint8* VoidMessage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.VoidMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ret = 1;
  if (this->ret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ret().data(), static_cast<int>(this->ret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.VoidMessage.ret");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ret(), target);
  }

  // int32 err = 2;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.VoidMessage)
  return target;
}

size_t VoidMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.VoidMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ret = 1;
  if (this->ret().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ret());
  }

  // int32 err = 2;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VoidMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.VoidMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const VoidMessage* source =
      ::google::protobuf::DynamicCastToGenerated<VoidMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.VoidMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.VoidMessage)
    MergeFrom(*source);
  }
}

void VoidMessage::MergeFrom(const VoidMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.VoidMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ret().size() > 0) {

    ret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ret_);
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
}

void VoidMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.VoidMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoidMessage::CopyFrom(const VoidMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.VoidMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoidMessage::IsInitialized() const {
  return true;
}

void VoidMessage::Swap(VoidMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VoidMessage::InternalSwap(VoidMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  ret_.Swap(&other->ret_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(err_, other->err_);
}

::google::protobuf::Metadata VoidMessage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetAttrRequestParams::InitAsDefaultInstance() {
}
class GetAttrRequestParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAttrRequestParams::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAttrRequestParams::GetAttrRequestParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.GetAttrRequestParams)
}
GetAttrRequestParams::GetAttrRequestParams(const GetAttrRequestParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:nfsFuse.GetAttrRequestParams)
}

void GetAttrRequestParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetAttrRequestParams_nfsFuse_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetAttrRequestParams::~GetAttrRequestParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.GetAttrRequestParams)
  SharedDtor();
}

void GetAttrRequestParams::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAttrRequestParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAttrRequestParams& GetAttrRequestParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetAttrRequestParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void GetAttrRequestParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.GetAttrRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetAttrRequestParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetAttrRequestParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("nfsFuse.GetAttrRequestParams.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetAttrRequestParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.GetAttrRequestParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.GetAttrRequestParams.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.GetAttrRequestParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.GetAttrRequestParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetAttrRequestParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.GetAttrRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.GetAttrRequestParams.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.GetAttrRequestParams)
}

::google::protobuf::uint8* GetAttrRequestParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.GetAttrRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.GetAttrRequestParams.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.GetAttrRequestParams)
  return target;
}

size_t GetAttrRequestParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.GetAttrRequestParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAttrRequestParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.GetAttrRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAttrRequestParams* source =
      ::google::protobuf::DynamicCastToGenerated<GetAttrRequestParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.GetAttrRequestParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.GetAttrRequestParams)
    MergeFrom(*source);
  }
}

void GetAttrRequestParams::MergeFrom(const GetAttrRequestParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.GetAttrRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void GetAttrRequestParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.GetAttrRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAttrRequestParams::CopyFrom(const GetAttrRequestParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.GetAttrRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAttrRequestParams::IsInitialized() const {
  return true;
}

void GetAttrRequestParams::Swap(GetAttrRequestParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAttrRequestParams::InternalSwap(GetAttrRequestParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetAttrRequestParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetAttrResponseParams::InitAsDefaultInstance() {
}
class GetAttrResponseParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAttrResponseParams::kDevFieldNumber;
const int GetAttrResponseParams::kInodeFieldNumber;
const int GetAttrResponseParams::kModeFieldNumber;
const int GetAttrResponseParams::kNlinkFieldNumber;
const int GetAttrResponseParams::kUidFieldNumber;
const int GetAttrResponseParams::kGuidFieldNumber;
const int GetAttrResponseParams::kSizeFieldNumber;
const int GetAttrResponseParams::kBlocksizeFieldNumber;
const int GetAttrResponseParams::kNblockFieldNumber;
const int GetAttrResponseParams::kLatimeFieldNumber;
const int GetAttrResponseParams::kMtimeFieldNumber;
const int GetAttrResponseParams::kCtimeFieldNumber;
const int GetAttrResponseParams::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAttrResponseParams::GetAttrResponseParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.GetAttrResponseParams)
}
GetAttrResponseParams::GetAttrResponseParams(const GetAttrResponseParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dev_, &from.dev_,
    static_cast<size_t>(reinterpret_cast<char*>(&err_) -
    reinterpret_cast<char*>(&dev_)) + sizeof(err_));
  // @@protoc_insertion_point(copy_constructor:nfsFuse.GetAttrResponseParams)
}

void GetAttrResponseParams::SharedCtor() {
  ::memset(&dev_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_) -
      reinterpret_cast<char*>(&dev_)) + sizeof(err_));
}

GetAttrResponseParams::~GetAttrResponseParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.GetAttrResponseParams)
  SharedDtor();
}

void GetAttrResponseParams::SharedDtor() {
}

void GetAttrResponseParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAttrResponseParams& GetAttrResponseParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetAttrResponseParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void GetAttrResponseParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.GetAttrResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&dev_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_) -
      reinterpret_cast<char*>(&dev_)) + sizeof(err_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetAttrResponseParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetAttrResponseParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 dev = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_dev(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 inode = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_inode(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 mode = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_mode(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 nlink = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_nlink(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 uid = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_uid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 guid = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // sint64 size = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_size(::google::protobuf::internal::ReadVarintZigZag64(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // sint64 blocksize = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_blocksize(::google::protobuf::internal::ReadVarintZigZag64(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // sint64 nblock = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_nblock(::google::protobuf::internal::ReadVarintZigZag64(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 latime = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_latime(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 mtime = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 88) goto handle_unusual;
        msg->set_mtime(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 ctime = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 96) goto handle_unusual;
        msg->set_ctime(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 err = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 104) goto handle_unusual;
        msg->set_err(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetAttrResponseParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.GetAttrResponseParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 dev = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dev_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 inode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &inode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nlink = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nlink_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 guid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 size = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 blocksize = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &blocksize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 nblock = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &nblock_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 latime = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &latime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mtime = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (88 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ctime = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (96 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ctime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 err = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (104 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.GetAttrResponseParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.GetAttrResponseParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetAttrResponseParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.GetAttrResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dev = 1;
  if (this->dev() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dev(), output);
  }

  // uint32 inode = 2;
  if (this->inode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->inode(), output);
  }

  // int32 mode = 3;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mode(), output);
  }

  // uint32 nlink = 4;
  if (this->nlink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->nlink(), output);
  }

  // uint32 uid = 5;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->uid(), output);
  }

  // uint32 guid = 6;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->guid(), output);
  }

  // sint64 size = 7;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(7, this->size(), output);
  }

  // sint64 blocksize = 8;
  if (this->blocksize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(8, this->blocksize(), output);
  }

  // sint64 nblock = 9;
  if (this->nblock() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(9, this->nblock(), output);
  }

  // int32 latime = 10;
  if (this->latime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->latime(), output);
  }

  // int32 mtime = 11;
  if (this->mtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->mtime(), output);
  }

  // int32 ctime = 12;
  if (this->ctime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->ctime(), output);
  }

  // int32 err = 13;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.GetAttrResponseParams)
}

::google::protobuf::uint8* GetAttrResponseParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.GetAttrResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dev = 1;
  if (this->dev() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dev(), target);
  }

  // uint32 inode = 2;
  if (this->inode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->inode(), target);
  }

  // int32 mode = 3;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mode(), target);
  }

  // uint32 nlink = 4;
  if (this->nlink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->nlink(), target);
  }

  // uint32 uid = 5;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->uid(), target);
  }

  // uint32 guid = 6;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->guid(), target);
  }

  // sint64 size = 7;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(7, this->size(), target);
  }

  // sint64 blocksize = 8;
  if (this->blocksize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(8, this->blocksize(), target);
  }

  // sint64 nblock = 9;
  if (this->nblock() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(9, this->nblock(), target);
  }

  // int32 latime = 10;
  if (this->latime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->latime(), target);
  }

  // int32 mtime = 11;
  if (this->mtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->mtime(), target);
  }

  // int32 ctime = 12;
  if (this->ctime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->ctime(), target);
  }

  // int32 err = 13;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.GetAttrResponseParams)
  return target;
}

size_t GetAttrResponseParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.GetAttrResponseParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 dev = 1;
  if (this->dev() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dev());
  }

  // uint32 inode = 2;
  if (this->inode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->inode());
  }

  // int32 mode = 3;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mode());
  }

  // uint32 nlink = 4;
  if (this->nlink() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nlink());
  }

  // uint32 uid = 5;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 guid = 6;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->guid());
  }

  // sint64 size = 7;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->size());
  }

  // sint64 blocksize = 8;
  if (this->blocksize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->blocksize());
  }

  // sint64 nblock = 9;
  if (this->nblock() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->nblock());
  }

  // int32 latime = 10;
  if (this->latime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->latime());
  }

  // int32 mtime = 11;
  if (this->mtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mtime());
  }

  // int32 ctime = 12;
  if (this->ctime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ctime());
  }

  // int32 err = 13;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAttrResponseParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.GetAttrResponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAttrResponseParams* source =
      ::google::protobuf::DynamicCastToGenerated<GetAttrResponseParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.GetAttrResponseParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.GetAttrResponseParams)
    MergeFrom(*source);
  }
}

void GetAttrResponseParams::MergeFrom(const GetAttrResponseParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.GetAttrResponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dev() != 0) {
    set_dev(from.dev());
  }
  if (from.inode() != 0) {
    set_inode(from.inode());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.nlink() != 0) {
    set_nlink(from.nlink());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.blocksize() != 0) {
    set_blocksize(from.blocksize());
  }
  if (from.nblock() != 0) {
    set_nblock(from.nblock());
  }
  if (from.latime() != 0) {
    set_latime(from.latime());
  }
  if (from.mtime() != 0) {
    set_mtime(from.mtime());
  }
  if (from.ctime() != 0) {
    set_ctime(from.ctime());
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
}

void GetAttrResponseParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.GetAttrResponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAttrResponseParams::CopyFrom(const GetAttrResponseParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.GetAttrResponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAttrResponseParams::IsInitialized() const {
  return true;
}

void GetAttrResponseParams::Swap(GetAttrResponseParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAttrResponseParams::InternalSwap(GetAttrResponseParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(dev_, other->dev_);
  swap(inode_, other->inode_);
  swap(mode_, other->mode_);
  swap(nlink_, other->nlink_);
  swap(uid_, other->uid_);
  swap(guid_, other->guid_);
  swap(size_, other->size_);
  swap(blocksize_, other->blocksize_);
  swap(nblock_, other->nblock_);
  swap(latime_, other->latime_);
  swap(mtime_, other->mtime_);
  swap(ctime_, other->ctime_);
  swap(err_, other->err_);
}

::google::protobuf::Metadata GetAttrResponseParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReadDirRequestParams::InitAsDefaultInstance() {
}
class ReadDirRequestParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadDirRequestParams::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadDirRequestParams::ReadDirRequestParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.ReadDirRequestParams)
}
ReadDirRequestParams::ReadDirRequestParams(const ReadDirRequestParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:nfsFuse.ReadDirRequestParams)
}

void ReadDirRequestParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReadDirRequestParams_nfsFuse_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReadDirRequestParams::~ReadDirRequestParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.ReadDirRequestParams)
  SharedDtor();
}

void ReadDirRequestParams::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadDirRequestParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReadDirRequestParams& ReadDirRequestParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReadDirRequestParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void ReadDirRequestParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.ReadDirRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReadDirRequestParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReadDirRequestParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("nfsFuse.ReadDirRequestParams.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReadDirRequestParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.ReadDirRequestParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.ReadDirRequestParams.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.ReadDirRequestParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.ReadDirRequestParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReadDirRequestParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.ReadDirRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.ReadDirRequestParams.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.ReadDirRequestParams)
}

::google::protobuf::uint8* ReadDirRequestParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.ReadDirRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.ReadDirRequestParams.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.ReadDirRequestParams)
  return target;
}

size_t ReadDirRequestParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.ReadDirRequestParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadDirRequestParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.ReadDirRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadDirRequestParams* source =
      ::google::protobuf::DynamicCastToGenerated<ReadDirRequestParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.ReadDirRequestParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.ReadDirRequestParams)
    MergeFrom(*source);
  }
}

void ReadDirRequestParams::MergeFrom(const ReadDirRequestParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.ReadDirRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void ReadDirRequestParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.ReadDirRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadDirRequestParams::CopyFrom(const ReadDirRequestParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.ReadDirRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadDirRequestParams::IsInitialized() const {
  return true;
}

void ReadDirRequestParams::Swap(ReadDirRequestParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadDirRequestParams::InternalSwap(ReadDirRequestParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ReadDirRequestParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReadDirResponseParams::InitAsDefaultInstance() {
}
class ReadDirResponseParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadDirResponseParams::kDinodeFieldNumber;
const int ReadDirResponseParams::kDnameFieldNumber;
const int ReadDirResponseParams::kDtypeFieldNumber;
const int ReadDirResponseParams::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadDirResponseParams::ReadDirResponseParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.ReadDirResponseParams)
}
ReadDirResponseParams::ReadDirResponseParams(const ReadDirResponseParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dname().size() > 0) {
    dname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dname_);
  }
  ::memcpy(&dinode_, &from.dinode_,
    static_cast<size_t>(reinterpret_cast<char*>(&err_) -
    reinterpret_cast<char*>(&dinode_)) + sizeof(err_));
  // @@protoc_insertion_point(copy_constructor:nfsFuse.ReadDirResponseParams)
}

void ReadDirResponseParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReadDirResponseParams_nfsFuse_2eproto.base);
  dname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&dinode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_) -
      reinterpret_cast<char*>(&dinode_)) + sizeof(err_));
}

ReadDirResponseParams::~ReadDirResponseParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.ReadDirResponseParams)
  SharedDtor();
}

void ReadDirResponseParams::SharedDtor() {
  dname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadDirResponseParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReadDirResponseParams& ReadDirResponseParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReadDirResponseParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void ReadDirResponseParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.ReadDirResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&dinode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_) -
      reinterpret_cast<char*>(&dinode_)) + sizeof(err_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReadDirResponseParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReadDirResponseParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 dinode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_dinode(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string dname = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("nfsFuse.ReadDirResponseParams.dname");
        object = msg->mutable_dname();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 dtype = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_dtype(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 err = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_err(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReadDirResponseParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.ReadDirResponseParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 dinode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dinode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dname().data(), static_cast<int>(this->dname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.ReadDirResponseParams.dname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dtype = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 err = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.ReadDirResponseParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.ReadDirResponseParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReadDirResponseParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.ReadDirResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dinode = 1;
  if (this->dinode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dinode(), output);
  }

  // string dname = 2;
  if (this->dname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dname().data(), static_cast<int>(this->dname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.ReadDirResponseParams.dname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dname(), output);
  }

  // uint32 dtype = 3;
  if (this->dtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dtype(), output);
  }

  // int32 err = 4;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.ReadDirResponseParams)
}

::google::protobuf::uint8* ReadDirResponseParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.ReadDirResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dinode = 1;
  if (this->dinode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dinode(), target);
  }

  // string dname = 2;
  if (this->dname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dname().data(), static_cast<int>(this->dname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.ReadDirResponseParams.dname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dname(), target);
  }

  // uint32 dtype = 3;
  if (this->dtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dtype(), target);
  }

  // int32 err = 4;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.ReadDirResponseParams)
  return target;
}

size_t ReadDirResponseParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.ReadDirResponseParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dname = 2;
  if (this->dname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dname());
  }

  // uint32 dinode = 1;
  if (this->dinode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dinode());
  }

  // uint32 dtype = 3;
  if (this->dtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dtype());
  }

  // int32 err = 4;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadDirResponseParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.ReadDirResponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadDirResponseParams* source =
      ::google::protobuf::DynamicCastToGenerated<ReadDirResponseParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.ReadDirResponseParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.ReadDirResponseParams)
    MergeFrom(*source);
  }
}

void ReadDirResponseParams::MergeFrom(const ReadDirResponseParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.ReadDirResponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dname().size() > 0) {

    dname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dname_);
  }
  if (from.dinode() != 0) {
    set_dinode(from.dinode());
  }
  if (from.dtype() != 0) {
    set_dtype(from.dtype());
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
}

void ReadDirResponseParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.ReadDirResponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadDirResponseParams::CopyFrom(const ReadDirResponseParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.ReadDirResponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadDirResponseParams::IsInitialized() const {
  return true;
}

void ReadDirResponseParams::Swap(ReadDirResponseParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadDirResponseParams::InternalSwap(ReadDirResponseParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  dname_.Swap(&other->dname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(dinode_, other->dinode_);
  swap(dtype_, other->dtype_);
  swap(err_, other->err_);
}

::google::protobuf::Metadata ReadDirResponseParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MkDirRequestParams::InitAsDefaultInstance() {
}
class MkDirRequestParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MkDirRequestParams::kPathFieldNumber;
const int MkDirRequestParams::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MkDirRequestParams::MkDirRequestParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.MkDirRequestParams)
}
MkDirRequestParams::MkDirRequestParams(const MkDirRequestParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  mode_ = from.mode_;
  // @@protoc_insertion_point(copy_constructor:nfsFuse.MkDirRequestParams)
}

void MkDirRequestParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MkDirRequestParams_nfsFuse_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mode_ = 0;
}

MkDirRequestParams::~MkDirRequestParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.MkDirRequestParams)
  SharedDtor();
}

void MkDirRequestParams::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MkDirRequestParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MkDirRequestParams& MkDirRequestParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MkDirRequestParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void MkDirRequestParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.MkDirRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mode_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MkDirRequestParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MkDirRequestParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("nfsFuse.MkDirRequestParams.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 mode = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_mode(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MkDirRequestParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.MkDirRequestParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.MkDirRequestParams.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.MkDirRequestParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.MkDirRequestParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MkDirRequestParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.MkDirRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.MkDirRequestParams.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // int32 mode = 2;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.MkDirRequestParams)
}

::google::protobuf::uint8* MkDirRequestParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.MkDirRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.MkDirRequestParams.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // int32 mode = 2;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.MkDirRequestParams)
  return target;
}

size_t MkDirRequestParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.MkDirRequestParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // int32 mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MkDirRequestParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.MkDirRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  const MkDirRequestParams* source =
      ::google::protobuf::DynamicCastToGenerated<MkDirRequestParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.MkDirRequestParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.MkDirRequestParams)
    MergeFrom(*source);
  }
}

void MkDirRequestParams::MergeFrom(const MkDirRequestParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.MkDirRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
}

void MkDirRequestParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.MkDirRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MkDirRequestParams::CopyFrom(const MkDirRequestParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.MkDirRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MkDirRequestParams::IsInitialized() const {
  return true;
}

void MkDirRequestParams::Swap(MkDirRequestParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MkDirRequestParams::InternalSwap(MkDirRequestParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mode_, other->mode_);
}

::google::protobuf::Metadata MkDirRequestParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateRequestParams::InitAsDefaultInstance() {
}
class CreateRequestParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRequestParams::kPathFieldNumber;
const int CreateRequestParams::kModeFieldNumber;
const int CreateRequestParams::kFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRequestParams::CreateRequestParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.CreateRequestParams)
}
CreateRequestParams::CreateRequestParams(const CreateRequestParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  ::memcpy(&mode_, &from.mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&mode_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:nfsFuse.CreateRequestParams)
}

void CreateRequestParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateRequestParams_nfsFuse_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&mode_)) + sizeof(flags_));
}

CreateRequestParams::~CreateRequestParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.CreateRequestParams)
  SharedDtor();
}

void CreateRequestParams::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateRequestParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateRequestParams& CreateRequestParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateRequestParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void CreateRequestParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.CreateRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&mode_)) + sizeof(flags_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateRequestParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateRequestParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("nfsFuse.CreateRequestParams.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 mode = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_mode(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 flags = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_flags(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateRequestParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.CreateRequestParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.CreateRequestParams.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 flags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.CreateRequestParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.CreateRequestParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateRequestParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.CreateRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.CreateRequestParams.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // int32 mode = 2;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mode(), output);
  }

  // int32 flags = 3;
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->flags(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.CreateRequestParams)
}

::google::protobuf::uint8* CreateRequestParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.CreateRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.CreateRequestParams.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // int32 mode = 2;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mode(), target);
  }

  // int32 flags = 3;
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->flags(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.CreateRequestParams)
  return target;
}

size_t CreateRequestParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.CreateRequestParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // int32 mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mode());
  }

  // int32 flags = 3;
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flags());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateRequestParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.CreateRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRequestParams* source =
      ::google::protobuf::DynamicCastToGenerated<CreateRequestParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.CreateRequestParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.CreateRequestParams)
    MergeFrom(*source);
  }
}

void CreateRequestParams::MergeFrom(const CreateRequestParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.CreateRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.flags() != 0) {
    set_flags(from.flags());
  }
}

void CreateRequestParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.CreateRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRequestParams::CopyFrom(const CreateRequestParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.CreateRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRequestParams::IsInitialized() const {
  return true;
}

void CreateRequestParams::Swap(CreateRequestParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRequestParams::InternalSwap(CreateRequestParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mode_, other->mode_);
  swap(flags_, other->flags_);
}

::google::protobuf::Metadata CreateRequestParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateResponseParams::InitAsDefaultInstance() {
}
class CreateResponseParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateResponseParams::kFlagsFieldNumber;
const int CreateResponseParams::kFhFieldNumber;
const int CreateResponseParams::kOldfhFieldNumber;
const int CreateResponseParams::kLockownerFieldNumber;
const int CreateResponseParams::kPolleventFieldNumber;
const int CreateResponseParams::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateResponseParams::CreateResponseParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.CreateResponseParams)
}
CreateResponseParams::CreateResponseParams(const CreateResponseParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&flags_, &from.flags_,
    static_cast<size_t>(reinterpret_cast<char*>(&err_) -
    reinterpret_cast<char*>(&flags_)) + sizeof(err_));
  // @@protoc_insertion_point(copy_constructor:nfsFuse.CreateResponseParams)
}

void CreateResponseParams::SharedCtor() {
  ::memset(&flags_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_) -
      reinterpret_cast<char*>(&flags_)) + sizeof(err_));
}

CreateResponseParams::~CreateResponseParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.CreateResponseParams)
  SharedDtor();
}

void CreateResponseParams::SharedDtor() {
}

void CreateResponseParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateResponseParams& CreateResponseParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateResponseParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void CreateResponseParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.CreateResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&flags_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_) -
      reinterpret_cast<char*>(&flags_)) + sizeof(err_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateResponseParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateResponseParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 flags = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_flags(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 fh = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_fh(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 oldfh = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_oldfh(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint64 lockowner = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_lockowner(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 pollevent = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_pollevent(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 err = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_err(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateResponseParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.CreateResponseParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 flags = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fh = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fh_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 oldfh = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &oldfh_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 lockowner = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lockowner_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pollevent = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pollevent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 err = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.CreateResponseParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.CreateResponseParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateResponseParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.CreateResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 flags = 1;
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flags(), output);
  }

  // int32 fh = 2;
  if (this->fh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fh(), output);
  }

  // uint32 oldfh = 3;
  if (this->oldfh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->oldfh(), output);
  }

  // uint64 lockowner = 4;
  if (this->lockowner() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->lockowner(), output);
  }

  // uint32 pollevent = 5;
  if (this->pollevent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pollevent(), output);
  }

  // int32 err = 6;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.CreateResponseParams)
}

::google::protobuf::uint8* CreateResponseParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.CreateResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 flags = 1;
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flags(), target);
  }

  // int32 fh = 2;
  if (this->fh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fh(), target);
  }

  // uint32 oldfh = 3;
  if (this->oldfh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->oldfh(), target);
  }

  // uint64 lockowner = 4;
  if (this->lockowner() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->lockowner(), target);
  }

  // uint32 pollevent = 5;
  if (this->pollevent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pollevent(), target);
  }

  // int32 err = 6;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.CreateResponseParams)
  return target;
}

size_t CreateResponseParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.CreateResponseParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 flags = 1;
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flags());
  }

  // int32 fh = 2;
  if (this->fh() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fh());
  }

  // uint64 lockowner = 4;
  if (this->lockowner() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lockowner());
  }

  // uint32 oldfh = 3;
  if (this->oldfh() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->oldfh());
  }

  // uint32 pollevent = 5;
  if (this->pollevent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pollevent());
  }

  // int32 err = 6;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateResponseParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.CreateResponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateResponseParams* source =
      ::google::protobuf::DynamicCastToGenerated<CreateResponseParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.CreateResponseParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.CreateResponseParams)
    MergeFrom(*source);
  }
}

void CreateResponseParams::MergeFrom(const CreateResponseParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.CreateResponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.flags() != 0) {
    set_flags(from.flags());
  }
  if (from.fh() != 0) {
    set_fh(from.fh());
  }
  if (from.lockowner() != 0) {
    set_lockowner(from.lockowner());
  }
  if (from.oldfh() != 0) {
    set_oldfh(from.oldfh());
  }
  if (from.pollevent() != 0) {
    set_pollevent(from.pollevent());
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
}

void CreateResponseParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.CreateResponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateResponseParams::CopyFrom(const CreateResponseParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.CreateResponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateResponseParams::IsInitialized() const {
  return true;
}

void CreateResponseParams::Swap(CreateResponseParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateResponseParams::InternalSwap(CreateResponseParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(flags_, other->flags_);
  swap(fh_, other->fh_);
  swap(lockowner_, other->lockowner_);
  swap(oldfh_, other->oldfh_);
  swap(pollevent_, other->pollevent_);
  swap(err_, other->err_);
}

::google::protobuf::Metadata CreateResponseParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RmDirRequestParams::InitAsDefaultInstance() {
}
class RmDirRequestParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RmDirRequestParams::kPathFieldNumber;
const int RmDirRequestParams::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RmDirRequestParams::RmDirRequestParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.RmDirRequestParams)
}
RmDirRequestParams::RmDirRequestParams(const RmDirRequestParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  mode_ = from.mode_;
  // @@protoc_insertion_point(copy_constructor:nfsFuse.RmDirRequestParams)
}

void RmDirRequestParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RmDirRequestParams_nfsFuse_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mode_ = 0;
}

RmDirRequestParams::~RmDirRequestParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.RmDirRequestParams)
  SharedDtor();
}

void RmDirRequestParams::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RmDirRequestParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RmDirRequestParams& RmDirRequestParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RmDirRequestParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void RmDirRequestParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.RmDirRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mode_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RmDirRequestParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RmDirRequestParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("nfsFuse.RmDirRequestParams.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 mode = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_mode(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RmDirRequestParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.RmDirRequestParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.RmDirRequestParams.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.RmDirRequestParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.RmDirRequestParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RmDirRequestParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.RmDirRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.RmDirRequestParams.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // int32 mode = 2;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.RmDirRequestParams)
}

::google::protobuf::uint8* RmDirRequestParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.RmDirRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.RmDirRequestParams.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // int32 mode = 2;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.RmDirRequestParams)
  return target;
}

size_t RmDirRequestParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.RmDirRequestParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // int32 mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RmDirRequestParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.RmDirRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  const RmDirRequestParams* source =
      ::google::protobuf::DynamicCastToGenerated<RmDirRequestParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.RmDirRequestParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.RmDirRequestParams)
    MergeFrom(*source);
  }
}

void RmDirRequestParams::MergeFrom(const RmDirRequestParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.RmDirRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
}

void RmDirRequestParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.RmDirRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RmDirRequestParams::CopyFrom(const RmDirRequestParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.RmDirRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RmDirRequestParams::IsInitialized() const {
  return true;
}

void RmDirRequestParams::Swap(RmDirRequestParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RmDirRequestParams::InternalSwap(RmDirRequestParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mode_, other->mode_);
}

::google::protobuf::Metadata RmDirRequestParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void OpenRequestParams::InitAsDefaultInstance() {
}
class OpenRequestParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenRequestParams::kPathFieldNumber;
const int OpenRequestParams::kFlagsFieldNumber;
const int OpenRequestParams::kFhFieldNumber;
const int OpenRequestParams::kOldfhFieldNumber;
const int OpenRequestParams::kLockownerFieldNumber;
const int OpenRequestParams::kPolleventFieldNumber;
const int OpenRequestParams::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenRequestParams::OpenRequestParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.OpenRequestParams)
}
OpenRequestParams::OpenRequestParams(const OpenRequestParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  ::memcpy(&flags_, &from.flags_,
    static_cast<size_t>(reinterpret_cast<char*>(&err_) -
    reinterpret_cast<char*>(&flags_)) + sizeof(err_));
  // @@protoc_insertion_point(copy_constructor:nfsFuse.OpenRequestParams)
}

void OpenRequestParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_OpenRequestParams_nfsFuse_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&flags_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_) -
      reinterpret_cast<char*>(&flags_)) + sizeof(err_));
}

OpenRequestParams::~OpenRequestParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.OpenRequestParams)
  SharedDtor();
}

void OpenRequestParams::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpenRequestParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OpenRequestParams& OpenRequestParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_OpenRequestParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void OpenRequestParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.OpenRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&flags_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_) -
      reinterpret_cast<char*>(&flags_)) + sizeof(err_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OpenRequestParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<OpenRequestParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("nfsFuse.OpenRequestParams.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 flags = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_flags(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 fh = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_fh(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 oldfh = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_oldfh(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint64 lockowner = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_lockowner(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 pollevent = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_pollevent(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 err = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_err(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OpenRequestParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.OpenRequestParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.OpenRequestParams.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 flags = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fh = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fh_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 oldfh = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &oldfh_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 lockowner = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lockowner_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pollevent = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pollevent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 err = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.OpenRequestParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.OpenRequestParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OpenRequestParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.OpenRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.OpenRequestParams.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // int32 flags = 2;
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->flags(), output);
  }

  // int32 fh = 3;
  if (this->fh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fh(), output);
  }

  // uint32 oldfh = 4;
  if (this->oldfh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->oldfh(), output);
  }

  // uint64 lockowner = 5;
  if (this->lockowner() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->lockowner(), output);
  }

  // uint32 pollevent = 6;
  if (this->pollevent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->pollevent(), output);
  }

  // int32 err = 7;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.OpenRequestParams)
}

::google::protobuf::uint8* OpenRequestParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.OpenRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.OpenRequestParams.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // int32 flags = 2;
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->flags(), target);
  }

  // int32 fh = 3;
  if (this->fh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fh(), target);
  }

  // uint32 oldfh = 4;
  if (this->oldfh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->oldfh(), target);
  }

  // uint64 lockowner = 5;
  if (this->lockowner() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->lockowner(), target);
  }

  // uint32 pollevent = 6;
  if (this->pollevent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->pollevent(), target);
  }

  // int32 err = 7;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.OpenRequestParams)
  return target;
}

size_t OpenRequestParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.OpenRequestParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // int32 flags = 2;
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flags());
  }

  // int32 fh = 3;
  if (this->fh() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fh());
  }

  // uint64 lockowner = 5;
  if (this->lockowner() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lockowner());
  }

  // uint32 oldfh = 4;
  if (this->oldfh() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->oldfh());
  }

  // uint32 pollevent = 6;
  if (this->pollevent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pollevent());
  }

  // int32 err = 7;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpenRequestParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.OpenRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenRequestParams* source =
      ::google::protobuf::DynamicCastToGenerated<OpenRequestParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.OpenRequestParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.OpenRequestParams)
    MergeFrom(*source);
  }
}

void OpenRequestParams::MergeFrom(const OpenRequestParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.OpenRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.flags() != 0) {
    set_flags(from.flags());
  }
  if (from.fh() != 0) {
    set_fh(from.fh());
  }
  if (from.lockowner() != 0) {
    set_lockowner(from.lockowner());
  }
  if (from.oldfh() != 0) {
    set_oldfh(from.oldfh());
  }
  if (from.pollevent() != 0) {
    set_pollevent(from.pollevent());
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
}

void OpenRequestParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.OpenRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenRequestParams::CopyFrom(const OpenRequestParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.OpenRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenRequestParams::IsInitialized() const {
  return true;
}

void OpenRequestParams::Swap(OpenRequestParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenRequestParams::InternalSwap(OpenRequestParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(flags_, other->flags_);
  swap(fh_, other->fh_);
  swap(lockowner_, other->lockowner_);
  swap(oldfh_, other->oldfh_);
  swap(pollevent_, other->pollevent_);
  swap(err_, other->err_);
}

::google::protobuf::Metadata OpenRequestParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void OpenResponseParams::InitAsDefaultInstance() {
}
class OpenResponseParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenResponseParams::kPathFieldNumber;
const int OpenResponseParams::kFlagsFieldNumber;
const int OpenResponseParams::kFhFieldNumber;
const int OpenResponseParams::kOldfhFieldNumber;
const int OpenResponseParams::kLockownerFieldNumber;
const int OpenResponseParams::kPolleventFieldNumber;
const int OpenResponseParams::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenResponseParams::OpenResponseParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.OpenResponseParams)
}
OpenResponseParams::OpenResponseParams(const OpenResponseParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  ::memcpy(&flags_, &from.flags_,
    static_cast<size_t>(reinterpret_cast<char*>(&err_) -
    reinterpret_cast<char*>(&flags_)) + sizeof(err_));
  // @@protoc_insertion_point(copy_constructor:nfsFuse.OpenResponseParams)
}

void OpenResponseParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_OpenResponseParams_nfsFuse_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&flags_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_) -
      reinterpret_cast<char*>(&flags_)) + sizeof(err_));
}

OpenResponseParams::~OpenResponseParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.OpenResponseParams)
  SharedDtor();
}

void OpenResponseParams::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpenResponseParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OpenResponseParams& OpenResponseParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_OpenResponseParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void OpenResponseParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.OpenResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&flags_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_) -
      reinterpret_cast<char*>(&flags_)) + sizeof(err_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OpenResponseParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<OpenResponseParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("nfsFuse.OpenResponseParams.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 flags = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_flags(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 fh = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_fh(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 oldfh = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_oldfh(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint64 lockowner = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_lockowner(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 pollevent = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_pollevent(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 err = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_err(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OpenResponseParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.OpenResponseParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.OpenResponseParams.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 flags = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fh = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fh_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 oldfh = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &oldfh_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 lockowner = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lockowner_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pollevent = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pollevent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 err = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.OpenResponseParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.OpenResponseParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OpenResponseParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.OpenResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.OpenResponseParams.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // int32 flags = 2;
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->flags(), output);
  }

  // int32 fh = 3;
  if (this->fh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fh(), output);
  }

  // uint32 oldfh = 4;
  if (this->oldfh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->oldfh(), output);
  }

  // uint64 lockowner = 5;
  if (this->lockowner() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->lockowner(), output);
  }

  // uint32 pollevent = 6;
  if (this->pollevent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->pollevent(), output);
  }

  // int32 err = 7;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.OpenResponseParams)
}

::google::protobuf::uint8* OpenResponseParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.OpenResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.OpenResponseParams.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // int32 flags = 2;
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->flags(), target);
  }

  // int32 fh = 3;
  if (this->fh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fh(), target);
  }

  // uint32 oldfh = 4;
  if (this->oldfh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->oldfh(), target);
  }

  // uint64 lockowner = 5;
  if (this->lockowner() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->lockowner(), target);
  }

  // uint32 pollevent = 6;
  if (this->pollevent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->pollevent(), target);
  }

  // int32 err = 7;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.OpenResponseParams)
  return target;
}

size_t OpenResponseParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.OpenResponseParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // int32 flags = 2;
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flags());
  }

  // int32 fh = 3;
  if (this->fh() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fh());
  }

  // uint64 lockowner = 5;
  if (this->lockowner() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lockowner());
  }

  // uint32 oldfh = 4;
  if (this->oldfh() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->oldfh());
  }

  // uint32 pollevent = 6;
  if (this->pollevent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pollevent());
  }

  // int32 err = 7;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpenResponseParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.OpenResponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenResponseParams* source =
      ::google::protobuf::DynamicCastToGenerated<OpenResponseParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.OpenResponseParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.OpenResponseParams)
    MergeFrom(*source);
  }
}

void OpenResponseParams::MergeFrom(const OpenResponseParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.OpenResponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.flags() != 0) {
    set_flags(from.flags());
  }
  if (from.fh() != 0) {
    set_fh(from.fh());
  }
  if (from.lockowner() != 0) {
    set_lockowner(from.lockowner());
  }
  if (from.oldfh() != 0) {
    set_oldfh(from.oldfh());
  }
  if (from.pollevent() != 0) {
    set_pollevent(from.pollevent());
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
}

void OpenResponseParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.OpenResponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenResponseParams::CopyFrom(const OpenResponseParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.OpenResponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenResponseParams::IsInitialized() const {
  return true;
}

void OpenResponseParams::Swap(OpenResponseParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenResponseParams::InternalSwap(OpenResponseParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(flags_, other->flags_);
  swap(fh_, other->fh_);
  swap(lockowner_, other->lockowner_);
  swap(oldfh_, other->oldfh_);
  swap(pollevent_, other->pollevent_);
  swap(err_, other->err_);
}

::google::protobuf::Metadata OpenResponseParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReadRequestParams::InitAsDefaultInstance() {
}
class ReadRequestParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadRequestParams::kPathFieldNumber;
const int ReadRequestParams::kSizeFieldNumber;
const int ReadRequestParams::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRequestParams::ReadRequestParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.ReadRequestParams)
}
ReadRequestParams::ReadRequestParams(const ReadRequestParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:nfsFuse.ReadRequestParams)
}

void ReadRequestParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReadRequestParams_nfsFuse_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(size_));
}

ReadRequestParams::~ReadRequestParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.ReadRequestParams)
  SharedDtor();
}

void ReadRequestParams::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadRequestParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReadRequestParams& ReadRequestParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReadRequestParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void ReadRequestParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.ReadRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(size_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReadRequestParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReadRequestParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("nfsFuse.ReadRequestParams.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 size = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 offset = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_offset(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReadRequestParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.ReadRequestParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.ReadRequestParams.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.ReadRequestParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.ReadRequestParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReadRequestParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.ReadRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.ReadRequestParams.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // uint32 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->size(), output);
  }

  // int64 offset = 3;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.ReadRequestParams)
}

::google::protobuf::uint8* ReadRequestParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.ReadRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.ReadRequestParams.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // uint32 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->size(), target);
  }

  // int64 offset = 3;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->offset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.ReadRequestParams)
  return target;
}

size_t ReadRequestParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.ReadRequestParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // int64 offset = 3;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->offset());
  }

  // uint32 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadRequestParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.ReadRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadRequestParams* source =
      ::google::protobuf::DynamicCastToGenerated<ReadRequestParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.ReadRequestParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.ReadRequestParams)
    MergeFrom(*source);
  }
}

void ReadRequestParams::MergeFrom(const ReadRequestParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.ReadRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void ReadRequestParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.ReadRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRequestParams::CopyFrom(const ReadRequestParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.ReadRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRequestParams::IsInitialized() const {
  return true;
}

void ReadRequestParams::Swap(ReadRequestParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRequestParams::InternalSwap(ReadRequestParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_, other->offset_);
  swap(size_, other->size_);
}

::google::protobuf::Metadata ReadRequestParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReadResponseParams::InitAsDefaultInstance() {
}
class ReadResponseParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadResponseParams::kBufferFieldNumber;
const int ReadResponseParams::kBufferlengthFieldNumber;
const int ReadResponseParams::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadResponseParams::ReadResponseParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.ReadResponseParams)
}
ReadResponseParams::ReadResponseParams(const ReadResponseParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.buffer().size() > 0) {
    buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
  }
  ::memcpy(&bufferlength_, &from.bufferlength_,
    static_cast<size_t>(reinterpret_cast<char*>(&err_) -
    reinterpret_cast<char*>(&bufferlength_)) + sizeof(err_));
  // @@protoc_insertion_point(copy_constructor:nfsFuse.ReadResponseParams)
}

void ReadResponseParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReadResponseParams_nfsFuse_2eproto.base);
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bufferlength_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_) -
      reinterpret_cast<char*>(&bufferlength_)) + sizeof(err_));
}

ReadResponseParams::~ReadResponseParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.ReadResponseParams)
  SharedDtor();
}

void ReadResponseParams::SharedDtor() {
  buffer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadResponseParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReadResponseParams& ReadResponseParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReadResponseParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void ReadResponseParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.ReadResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bufferlength_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_) -
      reinterpret_cast<char*>(&bufferlength_)) + sizeof(err_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReadResponseParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReadResponseParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes buffer = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_buffer();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 bufferlength = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_bufferlength(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 err = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_err(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReadResponseParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.ReadResponseParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes buffer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buffer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bufferlength = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bufferlength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 err = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.ReadResponseParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.ReadResponseParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReadResponseParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.ReadResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes buffer = 1;
  if (this->buffer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->buffer(), output);
  }

  // int32 bufferlength = 2;
  if (this->bufferlength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->bufferlength(), output);
  }

  // int32 err = 3;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.ReadResponseParams)
}

::google::protobuf::uint8* ReadResponseParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.ReadResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes buffer = 1;
  if (this->buffer().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->buffer(), target);
  }

  // int32 bufferlength = 2;
  if (this->bufferlength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->bufferlength(), target);
  }

  // int32 err = 3;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.ReadResponseParams)
  return target;
}

size_t ReadResponseParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.ReadResponseParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes buffer = 1;
  if (this->buffer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->buffer());
  }

  // int32 bufferlength = 2;
  if (this->bufferlength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bufferlength());
  }

  // int32 err = 3;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadResponseParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.ReadResponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadResponseParams* source =
      ::google::protobuf::DynamicCastToGenerated<ReadResponseParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.ReadResponseParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.ReadResponseParams)
    MergeFrom(*source);
  }
}

void ReadResponseParams::MergeFrom(const ReadResponseParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.ReadResponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.buffer().size() > 0) {

    buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
  }
  if (from.bufferlength() != 0) {
    set_bufferlength(from.bufferlength());
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
}

void ReadResponseParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.ReadResponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadResponseParams::CopyFrom(const ReadResponseParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.ReadResponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadResponseParams::IsInitialized() const {
  return true;
}

void ReadResponseParams::Swap(ReadResponseParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadResponseParams::InternalSwap(ReadResponseParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  buffer_.Swap(&other->buffer_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(bufferlength_, other->bufferlength_);
  swap(err_, other->err_);
}

::google::protobuf::Metadata ReadResponseParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WriteRequestParams::InitAsDefaultInstance() {
}
class WriteRequestParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteRequestParams::kBufferFieldNumber;
const int WriteRequestParams::kPathFieldNumber;
const int WriteRequestParams::kBufferlengthFieldNumber;
const int WriteRequestParams::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteRequestParams::WriteRequestParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.WriteRequestParams)
}
WriteRequestParams::WriteRequestParams(const WriteRequestParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.buffer().size() > 0) {
    buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  ::memcpy(&bufferlength_, &from.bufferlength_,
    static_cast<size_t>(reinterpret_cast<char*>(&offset_) -
    reinterpret_cast<char*>(&bufferlength_)) + sizeof(offset_));
  // @@protoc_insertion_point(copy_constructor:nfsFuse.WriteRequestParams)
}

void WriteRequestParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_WriteRequestParams_nfsFuse_2eproto.base);
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bufferlength_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offset_) -
      reinterpret_cast<char*>(&bufferlength_)) + sizeof(offset_));
}

WriteRequestParams::~WriteRequestParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.WriteRequestParams)
  SharedDtor();
}

void WriteRequestParams::SharedDtor() {
  buffer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WriteRequestParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WriteRequestParams& WriteRequestParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WriteRequestParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void WriteRequestParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.WriteRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bufferlength_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offset_) -
      reinterpret_cast<char*>(&bufferlength_)) + sizeof(offset_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WriteRequestParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WriteRequestParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes buffer = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_buffer();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string path = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("nfsFuse.WriteRequestParams.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 bufferlength = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_bufferlength(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 offset = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_offset(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WriteRequestParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.WriteRequestParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes buffer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buffer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfsFuse.WriteRequestParams.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bufferlength = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bufferlength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 offset = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.WriteRequestParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.WriteRequestParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WriteRequestParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.WriteRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes buffer = 1;
  if (this->buffer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->buffer(), output);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.WriteRequestParams.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  // uint32 bufferlength = 3;
  if (this->bufferlength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->bufferlength(), output);
  }

  // int32 offset = 4;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.WriteRequestParams)
}

::google::protobuf::uint8* WriteRequestParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.WriteRequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes buffer = 1;
  if (this->buffer().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->buffer(), target);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfsFuse.WriteRequestParams.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  // uint32 bufferlength = 3;
  if (this->bufferlength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->bufferlength(), target);
  }

  // int32 offset = 4;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->offset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.WriteRequestParams)
  return target;
}

size_t WriteRequestParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.WriteRequestParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes buffer = 1;
  if (this->buffer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->buffer());
  }

  // string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // uint32 bufferlength = 3;
  if (this->bufferlength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bufferlength());
  }

  // int32 offset = 4;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteRequestParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.WriteRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteRequestParams* source =
      ::google::protobuf::DynamicCastToGenerated<WriteRequestParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.WriteRequestParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.WriteRequestParams)
    MergeFrom(*source);
  }
}

void WriteRequestParams::MergeFrom(const WriteRequestParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.WriteRequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.buffer().size() > 0) {

    buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.bufferlength() != 0) {
    set_bufferlength(from.bufferlength());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
}

void WriteRequestParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.WriteRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteRequestParams::CopyFrom(const WriteRequestParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.WriteRequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteRequestParams::IsInitialized() const {
  return true;
}

void WriteRequestParams::Swap(WriteRequestParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteRequestParams::InternalSwap(WriteRequestParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  buffer_.Swap(&other->buffer_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(bufferlength_, other->bufferlength_);
  swap(offset_, other->offset_);
}

::google::protobuf::Metadata WriteRequestParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WriteReponseParams::InitAsDefaultInstance() {
}
class WriteReponseParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteReponseParams::kBufferlengthFieldNumber;
const int WriteReponseParams::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteReponseParams::WriteReponseParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfsFuse.WriteReponseParams)
}
WriteReponseParams::WriteReponseParams(const WriteReponseParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bufferlength_, &from.bufferlength_,
    static_cast<size_t>(reinterpret_cast<char*>(&err_) -
    reinterpret_cast<char*>(&bufferlength_)) + sizeof(err_));
  // @@protoc_insertion_point(copy_constructor:nfsFuse.WriteReponseParams)
}

void WriteReponseParams::SharedCtor() {
  ::memset(&bufferlength_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_) -
      reinterpret_cast<char*>(&bufferlength_)) + sizeof(err_));
}

WriteReponseParams::~WriteReponseParams() {
  // @@protoc_insertion_point(destructor:nfsFuse.WriteReponseParams)
  SharedDtor();
}

void WriteReponseParams::SharedDtor() {
}

void WriteReponseParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WriteReponseParams& WriteReponseParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WriteReponseParams_nfsFuse_2eproto.base);
  return *internal_default_instance();
}


void WriteReponseParams::Clear() {
// @@protoc_insertion_point(message_clear_start:nfsFuse.WriteReponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bufferlength_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_) -
      reinterpret_cast<char*>(&bufferlength_)) + sizeof(err_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WriteReponseParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WriteReponseParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 bufferlength = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_bufferlength(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 err = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_err(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WriteReponseParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfsFuse.WriteReponseParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 bufferlength = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bufferlength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 err = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfsFuse.WriteReponseParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfsFuse.WriteReponseParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WriteReponseParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfsFuse.WriteReponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 bufferlength = 1;
  if (this->bufferlength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bufferlength(), output);
  }

  // int32 err = 2;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nfsFuse.WriteReponseParams)
}

::google::protobuf::uint8* WriteReponseParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfsFuse.WriteReponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 bufferlength = 1;
  if (this->bufferlength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bufferlength(), target);
  }

  // int32 err = 2;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nfsFuse.WriteReponseParams)
  return target;
}

size_t WriteReponseParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nfsFuse.WriteReponseParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 bufferlength = 1;
  if (this->bufferlength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bufferlength());
  }

  // int32 err = 2;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteReponseParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfsFuse.WriteReponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteReponseParams* source =
      ::google::protobuf::DynamicCastToGenerated<WriteReponseParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfsFuse.WriteReponseParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfsFuse.WriteReponseParams)
    MergeFrom(*source);
  }
}

void WriteReponseParams::MergeFrom(const WriteReponseParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfsFuse.WriteReponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bufferlength() != 0) {
    set_bufferlength(from.bufferlength());
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
}

void WriteReponseParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfsFuse.WriteReponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteReponseParams::CopyFrom(const WriteReponseParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfsFuse.WriteReponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteReponseParams::IsInitialized() const {
  return true;
}

void WriteReponseParams::Swap(WriteReponseParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteReponseParams::InternalSwap(WriteReponseParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(bufferlength_, other->bufferlength_);
  swap(err_, other->err_);
}

::google::protobuf::Metadata WriteReponseParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_nfsFuse_2eproto);
  return ::file_level_metadata_nfsFuse_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace nfsFuse
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::nfsFuse::VoidMessage* Arena::CreateMaybeMessage< ::nfsFuse::VoidMessage >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::VoidMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::GetAttrRequestParams* Arena::CreateMaybeMessage< ::nfsFuse::GetAttrRequestParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::GetAttrRequestParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::GetAttrResponseParams* Arena::CreateMaybeMessage< ::nfsFuse::GetAttrResponseParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::GetAttrResponseParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::ReadDirRequestParams* Arena::CreateMaybeMessage< ::nfsFuse::ReadDirRequestParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::ReadDirRequestParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::ReadDirResponseParams* Arena::CreateMaybeMessage< ::nfsFuse::ReadDirResponseParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::ReadDirResponseParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::MkDirRequestParams* Arena::CreateMaybeMessage< ::nfsFuse::MkDirRequestParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::MkDirRequestParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::CreateRequestParams* Arena::CreateMaybeMessage< ::nfsFuse::CreateRequestParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::CreateRequestParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::CreateResponseParams* Arena::CreateMaybeMessage< ::nfsFuse::CreateResponseParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::CreateResponseParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::RmDirRequestParams* Arena::CreateMaybeMessage< ::nfsFuse::RmDirRequestParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::RmDirRequestParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::OpenRequestParams* Arena::CreateMaybeMessage< ::nfsFuse::OpenRequestParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::OpenRequestParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::OpenResponseParams* Arena::CreateMaybeMessage< ::nfsFuse::OpenResponseParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::OpenResponseParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::ReadRequestParams* Arena::CreateMaybeMessage< ::nfsFuse::ReadRequestParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::ReadRequestParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::ReadResponseParams* Arena::CreateMaybeMessage< ::nfsFuse::ReadResponseParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::ReadResponseParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::WriteRequestParams* Arena::CreateMaybeMessage< ::nfsFuse::WriteRequestParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::WriteRequestParams >(arena);
}
template<> PROTOBUF_NOINLINE ::nfsFuse::WriteReponseParams* Arena::CreateMaybeMessage< ::nfsFuse::WriteReponseParams >(Arena* arena) {
  return Arena::CreateInternal< ::nfsFuse::WriteReponseParams >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
