// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nfsFuse.proto

#ifndef PROTOBUF_INCLUDED_nfsFuse_2eproto
#define PROTOBUF_INCLUDED_nfsFuse_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_nfsFuse_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_nfsFuse_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[16]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_nfsFuse_2eproto();
namespace nfsFuse {
class CreateRequestParams;
class CreateRequestParamsDefaultTypeInternal;
extern CreateRequestParamsDefaultTypeInternal _CreateRequestParams_default_instance_;
class DeleteRequestParams;
class DeleteRequestParamsDefaultTypeInternal;
extern DeleteRequestParamsDefaultTypeInternal _DeleteRequestParams_default_instance_;
class GetAttrRequestParams;
class GetAttrRequestParamsDefaultTypeInternal;
extern GetAttrRequestParamsDefaultTypeInternal _GetAttrRequestParams_default_instance_;
class GetAttrResponseParams;
class GetAttrResponseParamsDefaultTypeInternal;
extern GetAttrResponseParamsDefaultTypeInternal _GetAttrResponseParams_default_instance_;
class LookupRequestParams;
class LookupRequestParamsDefaultTypeInternal;
extern LookupRequestParamsDefaultTypeInternal _LookupRequestParams_default_instance_;
class LookupResponseParams;
class LookupResponseParamsDefaultTypeInternal;
extern LookupResponseParamsDefaultTypeInternal _LookupResponseParams_default_instance_;
class MkDirRequestParams;
class MkDirRequestParamsDefaultTypeInternal;
extern MkDirRequestParamsDefaultTypeInternal _MkDirRequestParams_default_instance_;
class OpenRequestParams;
class OpenRequestParamsDefaultTypeInternal;
extern OpenRequestParamsDefaultTypeInternal _OpenRequestParams_default_instance_;
class OpenResponseParams;
class OpenResponseParamsDefaultTypeInternal;
extern OpenResponseParamsDefaultTypeInternal _OpenResponseParams_default_instance_;
class ReadDirRequestParams;
class ReadDirRequestParamsDefaultTypeInternal;
extern ReadDirRequestParamsDefaultTypeInternal _ReadDirRequestParams_default_instance_;
class ReadDirResponseParams;
class ReadDirResponseParamsDefaultTypeInternal;
extern ReadDirResponseParamsDefaultTypeInternal _ReadDirResponseParams_default_instance_;
class ReadRequestParams;
class ReadRequestParamsDefaultTypeInternal;
extern ReadRequestParamsDefaultTypeInternal _ReadRequestParams_default_instance_;
class ReadResponseParams;
class ReadResponseParamsDefaultTypeInternal;
extern ReadResponseParamsDefaultTypeInternal _ReadResponseParams_default_instance_;
class RmDirRequestParams;
class RmDirRequestParamsDefaultTypeInternal;
extern RmDirRequestParamsDefaultTypeInternal _RmDirRequestParams_default_instance_;
class VoidMessage;
class VoidMessageDefaultTypeInternal;
extern VoidMessageDefaultTypeInternal _VoidMessage_default_instance_;
class WriteRequestParams;
class WriteRequestParamsDefaultTypeInternal;
extern WriteRequestParamsDefaultTypeInternal _WriteRequestParams_default_instance_;
}  // namespace nfsFuse
namespace google {
namespace protobuf {
template<> ::nfsFuse::CreateRequestParams* Arena::CreateMaybeMessage<::nfsFuse::CreateRequestParams>(Arena*);
template<> ::nfsFuse::DeleteRequestParams* Arena::CreateMaybeMessage<::nfsFuse::DeleteRequestParams>(Arena*);
template<> ::nfsFuse::GetAttrRequestParams* Arena::CreateMaybeMessage<::nfsFuse::GetAttrRequestParams>(Arena*);
template<> ::nfsFuse::GetAttrResponseParams* Arena::CreateMaybeMessage<::nfsFuse::GetAttrResponseParams>(Arena*);
template<> ::nfsFuse::LookupRequestParams* Arena::CreateMaybeMessage<::nfsFuse::LookupRequestParams>(Arena*);
template<> ::nfsFuse::LookupResponseParams* Arena::CreateMaybeMessage<::nfsFuse::LookupResponseParams>(Arena*);
template<> ::nfsFuse::MkDirRequestParams* Arena::CreateMaybeMessage<::nfsFuse::MkDirRequestParams>(Arena*);
template<> ::nfsFuse::OpenRequestParams* Arena::CreateMaybeMessage<::nfsFuse::OpenRequestParams>(Arena*);
template<> ::nfsFuse::OpenResponseParams* Arena::CreateMaybeMessage<::nfsFuse::OpenResponseParams>(Arena*);
template<> ::nfsFuse::ReadDirRequestParams* Arena::CreateMaybeMessage<::nfsFuse::ReadDirRequestParams>(Arena*);
template<> ::nfsFuse::ReadDirResponseParams* Arena::CreateMaybeMessage<::nfsFuse::ReadDirResponseParams>(Arena*);
template<> ::nfsFuse::ReadRequestParams* Arena::CreateMaybeMessage<::nfsFuse::ReadRequestParams>(Arena*);
template<> ::nfsFuse::ReadResponseParams* Arena::CreateMaybeMessage<::nfsFuse::ReadResponseParams>(Arena*);
template<> ::nfsFuse::RmDirRequestParams* Arena::CreateMaybeMessage<::nfsFuse::RmDirRequestParams>(Arena*);
template<> ::nfsFuse::VoidMessage* Arena::CreateMaybeMessage<::nfsFuse::VoidMessage>(Arena*);
template<> ::nfsFuse::WriteRequestParams* Arena::CreateMaybeMessage<::nfsFuse::WriteRequestParams>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace nfsFuse {

// ===================================================================

class VoidMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.VoidMessage) */ {
 public:
  VoidMessage();
  virtual ~VoidMessage();

  VoidMessage(const VoidMessage& from);

  inline VoidMessage& operator=(const VoidMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VoidMessage(VoidMessage&& from) noexcept
    : VoidMessage() {
    *this = ::std::move(from);
  }

  inline VoidMessage& operator=(VoidMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const VoidMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VoidMessage* internal_default_instance() {
    return reinterpret_cast<const VoidMessage*>(
               &_VoidMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(VoidMessage* other);
  friend void swap(VoidMessage& a, VoidMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VoidMessage* New() const final {
    return CreateMaybeMessage<VoidMessage>(nullptr);
  }

  VoidMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VoidMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VoidMessage& from);
  void MergeFrom(const VoidMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VoidMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:nfsFuse.VoidMessage)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class GetAttrRequestParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.GetAttrRequestParams) */ {
 public:
  GetAttrRequestParams();
  virtual ~GetAttrRequestParams();

  GetAttrRequestParams(const GetAttrRequestParams& from);

  inline GetAttrRequestParams& operator=(const GetAttrRequestParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetAttrRequestParams(GetAttrRequestParams&& from) noexcept
    : GetAttrRequestParams() {
    *this = ::std::move(from);
  }

  inline GetAttrRequestParams& operator=(GetAttrRequestParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetAttrRequestParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetAttrRequestParams* internal_default_instance() {
    return reinterpret_cast<const GetAttrRequestParams*>(
               &_GetAttrRequestParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GetAttrRequestParams* other);
  friend void swap(GetAttrRequestParams& a, GetAttrRequestParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetAttrRequestParams* New() const final {
    return CreateMaybeMessage<GetAttrRequestParams>(nullptr);
  }

  GetAttrRequestParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetAttrRequestParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetAttrRequestParams& from);
  void MergeFrom(const GetAttrRequestParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetAttrRequestParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:nfsFuse.GetAttrRequestParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class GetAttrResponseParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.GetAttrResponseParams) */ {
 public:
  GetAttrResponseParams();
  virtual ~GetAttrResponseParams();

  GetAttrResponseParams(const GetAttrResponseParams& from);

  inline GetAttrResponseParams& operator=(const GetAttrResponseParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetAttrResponseParams(GetAttrResponseParams&& from) noexcept
    : GetAttrResponseParams() {
    *this = ::std::move(from);
  }

  inline GetAttrResponseParams& operator=(GetAttrResponseParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetAttrResponseParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetAttrResponseParams* internal_default_instance() {
    return reinterpret_cast<const GetAttrResponseParams*>(
               &_GetAttrResponseParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(GetAttrResponseParams* other);
  friend void swap(GetAttrResponseParams& a, GetAttrResponseParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetAttrResponseParams* New() const final {
    return CreateMaybeMessage<GetAttrResponseParams>(nullptr);
  }

  GetAttrResponseParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetAttrResponseParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetAttrResponseParams& from);
  void MergeFrom(const GetAttrResponseParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetAttrResponseParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 mode = 1;
  void clear_mode();
  static const int kModeFieldNumber = 1;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // int32 nlink = 2;
  void clear_nlink();
  static const int kNlinkFieldNumber = 2;
  ::google::protobuf::int32 nlink() const;
  void set_nlink(::google::protobuf::int32 value);

  // int32 uid = 3;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // int32 guid = 4;
  void clear_guid();
  static const int kGuidFieldNumber = 4;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // int64 size = 5;
  void clear_size();
  static const int kSizeFieldNumber = 5;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:nfsFuse.GetAttrResponseParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 mode_;
  ::google::protobuf::int32 nlink_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int64 size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class ReadDirRequestParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.ReadDirRequestParams) */ {
 public:
  ReadDirRequestParams();
  virtual ~ReadDirRequestParams();

  ReadDirRequestParams(const ReadDirRequestParams& from);

  inline ReadDirRequestParams& operator=(const ReadDirRequestParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadDirRequestParams(ReadDirRequestParams&& from) noexcept
    : ReadDirRequestParams() {
    *this = ::std::move(from);
  }

  inline ReadDirRequestParams& operator=(ReadDirRequestParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReadDirRequestParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadDirRequestParams* internal_default_instance() {
    return reinterpret_cast<const ReadDirRequestParams*>(
               &_ReadDirRequestParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ReadDirRequestParams* other);
  friend void swap(ReadDirRequestParams& a, ReadDirRequestParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadDirRequestParams* New() const final {
    return CreateMaybeMessage<ReadDirRequestParams>(nullptr);
  }

  ReadDirRequestParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReadDirRequestParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReadDirRequestParams& from);
  void MergeFrom(const ReadDirRequestParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadDirRequestParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:nfsFuse.ReadDirRequestParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class ReadDirResponseParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.ReadDirResponseParams) */ {
 public:
  ReadDirResponseParams();
  virtual ~ReadDirResponseParams();

  ReadDirResponseParams(const ReadDirResponseParams& from);

  inline ReadDirResponseParams& operator=(const ReadDirResponseParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadDirResponseParams(ReadDirResponseParams&& from) noexcept
    : ReadDirResponseParams() {
    *this = ::std::move(from);
  }

  inline ReadDirResponseParams& operator=(ReadDirResponseParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReadDirResponseParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadDirResponseParams* internal_default_instance() {
    return reinterpret_cast<const ReadDirResponseParams*>(
               &_ReadDirResponseParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ReadDirResponseParams* other);
  friend void swap(ReadDirResponseParams& a, ReadDirResponseParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadDirResponseParams* New() const final {
    return CreateMaybeMessage<ReadDirResponseParams>(nullptr);
  }

  ReadDirResponseParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReadDirResponseParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReadDirResponseParams& from);
  void MergeFrom(const ReadDirResponseParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadDirResponseParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string filenames = 1;
  int filenames_size() const;
  void clear_filenames();
  static const int kFilenamesFieldNumber = 1;
  const ::std::string& filenames(int index) const;
  ::std::string* mutable_filenames(int index);
  void set_filenames(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_filenames(int index, ::std::string&& value);
  #endif
  void set_filenames(int index, const char* value);
  void set_filenames(int index, const char* value, size_t size);
  ::std::string* add_filenames();
  void add_filenames(const ::std::string& value);
  #if LANG_CXX11
  void add_filenames(::std::string&& value);
  #endif
  void add_filenames(const char* value);
  void add_filenames(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& filenames() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_filenames();

  // @@protoc_insertion_point(class_scope:nfsFuse.ReadDirResponseParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> filenames_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class MkDirRequestParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.MkDirRequestParams) */ {
 public:
  MkDirRequestParams();
  virtual ~MkDirRequestParams();

  MkDirRequestParams(const MkDirRequestParams& from);

  inline MkDirRequestParams& operator=(const MkDirRequestParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MkDirRequestParams(MkDirRequestParams&& from) noexcept
    : MkDirRequestParams() {
    *this = ::std::move(from);
  }

  inline MkDirRequestParams& operator=(MkDirRequestParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MkDirRequestParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MkDirRequestParams* internal_default_instance() {
    return reinterpret_cast<const MkDirRequestParams*>(
               &_MkDirRequestParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(MkDirRequestParams* other);
  friend void swap(MkDirRequestParams& a, MkDirRequestParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MkDirRequestParams* New() const final {
    return CreateMaybeMessage<MkDirRequestParams>(nullptr);
  }

  MkDirRequestParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MkDirRequestParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MkDirRequestParams& from);
  void MergeFrom(const MkDirRequestParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MkDirRequestParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:nfsFuse.MkDirRequestParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class CreateRequestParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.CreateRequestParams) */ {
 public:
  CreateRequestParams();
  virtual ~CreateRequestParams();

  CreateRequestParams(const CreateRequestParams& from);

  inline CreateRequestParams& operator=(const CreateRequestParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateRequestParams(CreateRequestParams&& from) noexcept
    : CreateRequestParams() {
    *this = ::std::move(from);
  }

  inline CreateRequestParams& operator=(CreateRequestParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CreateRequestParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateRequestParams* internal_default_instance() {
    return reinterpret_cast<const CreateRequestParams*>(
               &_CreateRequestParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CreateRequestParams* other);
  friend void swap(CreateRequestParams& a, CreateRequestParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateRequestParams* New() const final {
    return CreateMaybeMessage<CreateRequestParams>(nullptr);
  }

  CreateRequestParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateRequestParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateRequestParams& from);
  void MergeFrom(const CreateRequestParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateRequestParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:nfsFuse.CreateRequestParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class DeleteRequestParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.DeleteRequestParams) */ {
 public:
  DeleteRequestParams();
  virtual ~DeleteRequestParams();

  DeleteRequestParams(const DeleteRequestParams& from);

  inline DeleteRequestParams& operator=(const DeleteRequestParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteRequestParams(DeleteRequestParams&& from) noexcept
    : DeleteRequestParams() {
    *this = ::std::move(from);
  }

  inline DeleteRequestParams& operator=(DeleteRequestParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DeleteRequestParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteRequestParams* internal_default_instance() {
    return reinterpret_cast<const DeleteRequestParams*>(
               &_DeleteRequestParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(DeleteRequestParams* other);
  friend void swap(DeleteRequestParams& a, DeleteRequestParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteRequestParams* New() const final {
    return CreateMaybeMessage<DeleteRequestParams>(nullptr);
  }

  DeleteRequestParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteRequestParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteRequestParams& from);
  void MergeFrom(const DeleteRequestParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteRequestParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:nfsFuse.DeleteRequestParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class RmDirRequestParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.RmDirRequestParams) */ {
 public:
  RmDirRequestParams();
  virtual ~RmDirRequestParams();

  RmDirRequestParams(const RmDirRequestParams& from);

  inline RmDirRequestParams& operator=(const RmDirRequestParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RmDirRequestParams(RmDirRequestParams&& from) noexcept
    : RmDirRequestParams() {
    *this = ::std::move(from);
  }

  inline RmDirRequestParams& operator=(RmDirRequestParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RmDirRequestParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RmDirRequestParams* internal_default_instance() {
    return reinterpret_cast<const RmDirRequestParams*>(
               &_RmDirRequestParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(RmDirRequestParams* other);
  friend void swap(RmDirRequestParams& a, RmDirRequestParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RmDirRequestParams* New() const final {
    return CreateMaybeMessage<RmDirRequestParams>(nullptr);
  }

  RmDirRequestParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RmDirRequestParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RmDirRequestParams& from);
  void MergeFrom(const RmDirRequestParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RmDirRequestParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:nfsFuse.RmDirRequestParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class OpenRequestParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.OpenRequestParams) */ {
 public:
  OpenRequestParams();
  virtual ~OpenRequestParams();

  OpenRequestParams(const OpenRequestParams& from);

  inline OpenRequestParams& operator=(const OpenRequestParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpenRequestParams(OpenRequestParams&& from) noexcept
    : OpenRequestParams() {
    *this = ::std::move(from);
  }

  inline OpenRequestParams& operator=(OpenRequestParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OpenRequestParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpenRequestParams* internal_default_instance() {
    return reinterpret_cast<const OpenRequestParams*>(
               &_OpenRequestParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(OpenRequestParams* other);
  friend void swap(OpenRequestParams& a, OpenRequestParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpenRequestParams* New() const final {
    return CreateMaybeMessage<OpenRequestParams>(nullptr);
  }

  OpenRequestParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OpenRequestParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OpenRequestParams& from);
  void MergeFrom(const OpenRequestParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OpenRequestParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:nfsFuse.OpenRequestParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class OpenResponseParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.OpenResponseParams) */ {
 public:
  OpenResponseParams();
  virtual ~OpenResponseParams();

  OpenResponseParams(const OpenResponseParams& from);

  inline OpenResponseParams& operator=(const OpenResponseParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpenResponseParams(OpenResponseParams&& from) noexcept
    : OpenResponseParams() {
    *this = ::std::move(from);
  }

  inline OpenResponseParams& operator=(OpenResponseParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OpenResponseParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpenResponseParams* internal_default_instance() {
    return reinterpret_cast<const OpenResponseParams*>(
               &_OpenResponseParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(OpenResponseParams* other);
  friend void swap(OpenResponseParams& a, OpenResponseParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpenResponseParams* New() const final {
    return CreateMaybeMessage<OpenResponseParams>(nullptr);
  }

  OpenResponseParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OpenResponseParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OpenResponseParams& from);
  void MergeFrom(const OpenResponseParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OpenResponseParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 fileHandle = 1;
  void clear_filehandle();
  static const int kFileHandleFieldNumber = 1;
  ::google::protobuf::int32 filehandle() const;
  void set_filehandle(::google::protobuf::int32 value);

  // int32 uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfsFuse.OpenResponseParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 filehandle_;
  ::google::protobuf::int32 uid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class ReadRequestParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.ReadRequestParams) */ {
 public:
  ReadRequestParams();
  virtual ~ReadRequestParams();

  ReadRequestParams(const ReadRequestParams& from);

  inline ReadRequestParams& operator=(const ReadRequestParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadRequestParams(ReadRequestParams&& from) noexcept
    : ReadRequestParams() {
    *this = ::std::move(from);
  }

  inline ReadRequestParams& operator=(ReadRequestParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReadRequestParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadRequestParams* internal_default_instance() {
    return reinterpret_cast<const ReadRequestParams*>(
               &_ReadRequestParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(ReadRequestParams* other);
  friend void swap(ReadRequestParams& a, ReadRequestParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadRequestParams* New() const final {
    return CreateMaybeMessage<ReadRequestParams>(nullptr);
  }

  ReadRequestParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReadRequestParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReadRequestParams& from);
  void MergeFrom(const ReadRequestParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadRequestParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:nfsFuse.ReadRequestParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class ReadResponseParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.ReadResponseParams) */ {
 public:
  ReadResponseParams();
  virtual ~ReadResponseParams();

  ReadResponseParams(const ReadResponseParams& from);

  inline ReadResponseParams& operator=(const ReadResponseParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadResponseParams(ReadResponseParams&& from) noexcept
    : ReadResponseParams() {
    *this = ::std::move(from);
  }

  inline ReadResponseParams& operator=(ReadResponseParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReadResponseParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadResponseParams* internal_default_instance() {
    return reinterpret_cast<const ReadResponseParams*>(
               &_ReadResponseParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(ReadResponseParams* other);
  friend void swap(ReadResponseParams& a, ReadResponseParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadResponseParams* New() const final {
    return CreateMaybeMessage<ReadResponseParams>(nullptr);
  }

  ReadResponseParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReadResponseParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReadResponseParams& from);
  void MergeFrom(const ReadResponseParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadResponseParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string text = 1;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:nfsFuse.ReadResponseParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class WriteRequestParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.WriteRequestParams) */ {
 public:
  WriteRequestParams();
  virtual ~WriteRequestParams();

  WriteRequestParams(const WriteRequestParams& from);

  inline WriteRequestParams& operator=(const WriteRequestParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteRequestParams(WriteRequestParams&& from) noexcept
    : WriteRequestParams() {
    *this = ::std::move(from);
  }

  inline WriteRequestParams& operator=(WriteRequestParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WriteRequestParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WriteRequestParams* internal_default_instance() {
    return reinterpret_cast<const WriteRequestParams*>(
               &_WriteRequestParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(WriteRequestParams* other);
  friend void swap(WriteRequestParams& a, WriteRequestParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteRequestParams* New() const final {
    return CreateMaybeMessage<WriteRequestParams>(nullptr);
  }

  WriteRequestParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WriteRequestParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WriteRequestParams& from);
  void MergeFrom(const WriteRequestParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WriteRequestParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string bytes = 1;
  void clear_bytes();
  static const int kBytesFieldNumber = 1;
  const ::std::string& bytes() const;
  void set_bytes(const ::std::string& value);
  #if LANG_CXX11
  void set_bytes(::std::string&& value);
  #endif
  void set_bytes(const char* value);
  void set_bytes(const char* value, size_t size);
  ::std::string* mutable_bytes();
  ::std::string* release_bytes();
  void set_allocated_bytes(::std::string* bytes);

  // string path = 2;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:nfsFuse.WriteRequestParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bytes_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class LookupRequestParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.LookupRequestParams) */ {
 public:
  LookupRequestParams();
  virtual ~LookupRequestParams();

  LookupRequestParams(const LookupRequestParams& from);

  inline LookupRequestParams& operator=(const LookupRequestParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LookupRequestParams(LookupRequestParams&& from) noexcept
    : LookupRequestParams() {
    *this = ::std::move(from);
  }

  inline LookupRequestParams& operator=(LookupRequestParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LookupRequestParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LookupRequestParams* internal_default_instance() {
    return reinterpret_cast<const LookupRequestParams*>(
               &_LookupRequestParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(LookupRequestParams* other);
  friend void swap(LookupRequestParams& a, LookupRequestParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LookupRequestParams* New() const final {
    return CreateMaybeMessage<LookupRequestParams>(nullptr);
  }

  LookupRequestParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LookupRequestParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LookupRequestParams& from);
  void MergeFrom(const LookupRequestParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LookupRequestParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:nfsFuse.LookupRequestParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class LookupResponseParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.LookupResponseParams) */ {
 public:
  LookupResponseParams();
  virtual ~LookupResponseParams();

  LookupResponseParams(const LookupResponseParams& from);

  inline LookupResponseParams& operator=(const LookupResponseParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LookupResponseParams(LookupResponseParams&& from) noexcept
    : LookupResponseParams() {
    *this = ::std::move(from);
  }

  inline LookupResponseParams& operator=(LookupResponseParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LookupResponseParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LookupResponseParams* internal_default_instance() {
    return reinterpret_cast<const LookupResponseParams*>(
               &_LookupResponseParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(LookupResponseParams* other);
  friend void swap(LookupResponseParams& a, LookupResponseParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LookupResponseParams* New() const final {
    return CreateMaybeMessage<LookupResponseParams>(nullptr);
  }

  LookupResponseParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LookupResponseParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LookupResponseParams& from);
  void MergeFrom(const LookupResponseParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LookupResponseParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 fileHandle = 1;
  void clear_filehandle();
  static const int kFileHandleFieldNumber = 1;
  ::google::protobuf::int32 filehandle() const;
  void set_filehandle(::google::protobuf::int32 value);

  // int32 uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfsFuse.LookupResponseParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 filehandle_;
  ::google::protobuf::int32 uid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VoidMessage

// -------------------------------------------------------------------

// GetAttrRequestParams

// string path = 1;
inline void GetAttrRequestParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAttrRequestParams::path() const {
  // @@protoc_insertion_point(field_get:nfsFuse.GetAttrRequestParams.path)
  return path_.GetNoArena();
}
inline void GetAttrRequestParams::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.GetAttrRequestParams.path)
}
#if LANG_CXX11
inline void GetAttrRequestParams::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.GetAttrRequestParams.path)
}
#endif
inline void GetAttrRequestParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.GetAttrRequestParams.path)
}
inline void GetAttrRequestParams::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.GetAttrRequestParams.path)
}
inline ::std::string* GetAttrRequestParams::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.GetAttrRequestParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAttrRequestParams::release_path() {
  // @@protoc_insertion_point(field_release:nfsFuse.GetAttrRequestParams.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAttrRequestParams::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.GetAttrRequestParams.path)
}

// -------------------------------------------------------------------

// GetAttrResponseParams

// int32 mode = 1;
inline void GetAttrResponseParams::clear_mode() {
  mode_ = 0;
}
inline ::google::protobuf::int32 GetAttrResponseParams::mode() const {
  // @@protoc_insertion_point(field_get:nfsFuse.GetAttrResponseParams.mode)
  return mode_;
}
inline void GetAttrResponseParams::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.GetAttrResponseParams.mode)
}

// int32 nlink = 2;
inline void GetAttrResponseParams::clear_nlink() {
  nlink_ = 0;
}
inline ::google::protobuf::int32 GetAttrResponseParams::nlink() const {
  // @@protoc_insertion_point(field_get:nfsFuse.GetAttrResponseParams.nlink)
  return nlink_;
}
inline void GetAttrResponseParams::set_nlink(::google::protobuf::int32 value) {
  
  nlink_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.GetAttrResponseParams.nlink)
}

// int32 uid = 3;
inline void GetAttrResponseParams::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 GetAttrResponseParams::uid() const {
  // @@protoc_insertion_point(field_get:nfsFuse.GetAttrResponseParams.uid)
  return uid_;
}
inline void GetAttrResponseParams::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.GetAttrResponseParams.uid)
}

// int32 guid = 4;
inline void GetAttrResponseParams::clear_guid() {
  guid_ = 0;
}
inline ::google::protobuf::int32 GetAttrResponseParams::guid() const {
  // @@protoc_insertion_point(field_get:nfsFuse.GetAttrResponseParams.guid)
  return guid_;
}
inline void GetAttrResponseParams::set_guid(::google::protobuf::int32 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.GetAttrResponseParams.guid)
}

// int64 size = 5;
inline void GetAttrResponseParams::clear_size() {
  size_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 GetAttrResponseParams::size() const {
  // @@protoc_insertion_point(field_get:nfsFuse.GetAttrResponseParams.size)
  return size_;
}
inline void GetAttrResponseParams::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.GetAttrResponseParams.size)
}

// -------------------------------------------------------------------

// ReadDirRequestParams

// string path = 1;
inline void ReadDirRequestParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadDirRequestParams::path() const {
  // @@protoc_insertion_point(field_get:nfsFuse.ReadDirRequestParams.path)
  return path_.GetNoArena();
}
inline void ReadDirRequestParams::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.ReadDirRequestParams.path)
}
#if LANG_CXX11
inline void ReadDirRequestParams::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.ReadDirRequestParams.path)
}
#endif
inline void ReadDirRequestParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.ReadDirRequestParams.path)
}
inline void ReadDirRequestParams::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.ReadDirRequestParams.path)
}
inline ::std::string* ReadDirRequestParams::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.ReadDirRequestParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadDirRequestParams::release_path() {
  // @@protoc_insertion_point(field_release:nfsFuse.ReadDirRequestParams.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadDirRequestParams::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.ReadDirRequestParams.path)
}

// -------------------------------------------------------------------

// ReadDirResponseParams

// repeated string filenames = 1;
inline int ReadDirResponseParams::filenames_size() const {
  return filenames_.size();
}
inline void ReadDirResponseParams::clear_filenames() {
  filenames_.Clear();
}
inline const ::std::string& ReadDirResponseParams::filenames(int index) const {
  // @@protoc_insertion_point(field_get:nfsFuse.ReadDirResponseParams.filenames)
  return filenames_.Get(index);
}
inline ::std::string* ReadDirResponseParams::mutable_filenames(int index) {
  // @@protoc_insertion_point(field_mutable:nfsFuse.ReadDirResponseParams.filenames)
  return filenames_.Mutable(index);
}
inline void ReadDirResponseParams::set_filenames(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:nfsFuse.ReadDirResponseParams.filenames)
  filenames_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ReadDirResponseParams::set_filenames(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:nfsFuse.ReadDirResponseParams.filenames)
  filenames_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ReadDirResponseParams::set_filenames(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  filenames_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:nfsFuse.ReadDirResponseParams.filenames)
}
inline void ReadDirResponseParams::set_filenames(int index, const char* value, size_t size) {
  filenames_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.ReadDirResponseParams.filenames)
}
inline ::std::string* ReadDirResponseParams::add_filenames() {
  // @@protoc_insertion_point(field_add_mutable:nfsFuse.ReadDirResponseParams.filenames)
  return filenames_.Add();
}
inline void ReadDirResponseParams::add_filenames(const ::std::string& value) {
  filenames_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:nfsFuse.ReadDirResponseParams.filenames)
}
#if LANG_CXX11
inline void ReadDirResponseParams::add_filenames(::std::string&& value) {
  filenames_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:nfsFuse.ReadDirResponseParams.filenames)
}
#endif
inline void ReadDirResponseParams::add_filenames(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  filenames_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:nfsFuse.ReadDirResponseParams.filenames)
}
inline void ReadDirResponseParams::add_filenames(const char* value, size_t size) {
  filenames_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:nfsFuse.ReadDirResponseParams.filenames)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
ReadDirResponseParams::filenames() const {
  // @@protoc_insertion_point(field_list:nfsFuse.ReadDirResponseParams.filenames)
  return filenames_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
ReadDirResponseParams::mutable_filenames() {
  // @@protoc_insertion_point(field_mutable_list:nfsFuse.ReadDirResponseParams.filenames)
  return &filenames_;
}

// -------------------------------------------------------------------

// MkDirRequestParams

// string path = 1;
inline void MkDirRequestParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MkDirRequestParams::path() const {
  // @@protoc_insertion_point(field_get:nfsFuse.MkDirRequestParams.path)
  return path_.GetNoArena();
}
inline void MkDirRequestParams::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.MkDirRequestParams.path)
}
#if LANG_CXX11
inline void MkDirRequestParams::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.MkDirRequestParams.path)
}
#endif
inline void MkDirRequestParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.MkDirRequestParams.path)
}
inline void MkDirRequestParams::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.MkDirRequestParams.path)
}
inline ::std::string* MkDirRequestParams::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.MkDirRequestParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MkDirRequestParams::release_path() {
  // @@protoc_insertion_point(field_release:nfsFuse.MkDirRequestParams.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MkDirRequestParams::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.MkDirRequestParams.path)
}

// -------------------------------------------------------------------

// CreateRequestParams

// string path = 1;
inline void CreateRequestParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateRequestParams::path() const {
  // @@protoc_insertion_point(field_get:nfsFuse.CreateRequestParams.path)
  return path_.GetNoArena();
}
inline void CreateRequestParams::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.CreateRequestParams.path)
}
#if LANG_CXX11
inline void CreateRequestParams::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.CreateRequestParams.path)
}
#endif
inline void CreateRequestParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.CreateRequestParams.path)
}
inline void CreateRequestParams::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.CreateRequestParams.path)
}
inline ::std::string* CreateRequestParams::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.CreateRequestParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateRequestParams::release_path() {
  // @@protoc_insertion_point(field_release:nfsFuse.CreateRequestParams.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateRequestParams::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.CreateRequestParams.path)
}

// -------------------------------------------------------------------

// DeleteRequestParams

// string path = 1;
inline void DeleteRequestParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteRequestParams::path() const {
  // @@protoc_insertion_point(field_get:nfsFuse.DeleteRequestParams.path)
  return path_.GetNoArena();
}
inline void DeleteRequestParams::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.DeleteRequestParams.path)
}
#if LANG_CXX11
inline void DeleteRequestParams::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.DeleteRequestParams.path)
}
#endif
inline void DeleteRequestParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.DeleteRequestParams.path)
}
inline void DeleteRequestParams::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.DeleteRequestParams.path)
}
inline ::std::string* DeleteRequestParams::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.DeleteRequestParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteRequestParams::release_path() {
  // @@protoc_insertion_point(field_release:nfsFuse.DeleteRequestParams.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRequestParams::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.DeleteRequestParams.path)
}

// -------------------------------------------------------------------

// RmDirRequestParams

// string path = 1;
inline void RmDirRequestParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RmDirRequestParams::path() const {
  // @@protoc_insertion_point(field_get:nfsFuse.RmDirRequestParams.path)
  return path_.GetNoArena();
}
inline void RmDirRequestParams::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.RmDirRequestParams.path)
}
#if LANG_CXX11
inline void RmDirRequestParams::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.RmDirRequestParams.path)
}
#endif
inline void RmDirRequestParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.RmDirRequestParams.path)
}
inline void RmDirRequestParams::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.RmDirRequestParams.path)
}
inline ::std::string* RmDirRequestParams::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.RmDirRequestParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RmDirRequestParams::release_path() {
  // @@protoc_insertion_point(field_release:nfsFuse.RmDirRequestParams.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RmDirRequestParams::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.RmDirRequestParams.path)
}

// -------------------------------------------------------------------

// OpenRequestParams

// string path = 1;
inline void OpenRequestParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OpenRequestParams::path() const {
  // @@protoc_insertion_point(field_get:nfsFuse.OpenRequestParams.path)
  return path_.GetNoArena();
}
inline void OpenRequestParams::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.OpenRequestParams.path)
}
#if LANG_CXX11
inline void OpenRequestParams::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.OpenRequestParams.path)
}
#endif
inline void OpenRequestParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.OpenRequestParams.path)
}
inline void OpenRequestParams::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.OpenRequestParams.path)
}
inline ::std::string* OpenRequestParams::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.OpenRequestParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenRequestParams::release_path() {
  // @@protoc_insertion_point(field_release:nfsFuse.OpenRequestParams.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenRequestParams::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.OpenRequestParams.path)
}

// -------------------------------------------------------------------

// OpenResponseParams

// int32 fileHandle = 1;
inline void OpenResponseParams::clear_filehandle() {
  filehandle_ = 0;
}
inline ::google::protobuf::int32 OpenResponseParams::filehandle() const {
  // @@protoc_insertion_point(field_get:nfsFuse.OpenResponseParams.fileHandle)
  return filehandle_;
}
inline void OpenResponseParams::set_filehandle(::google::protobuf::int32 value) {
  
  filehandle_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.OpenResponseParams.fileHandle)
}

// int32 uid = 2;
inline void OpenResponseParams::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 OpenResponseParams::uid() const {
  // @@protoc_insertion_point(field_get:nfsFuse.OpenResponseParams.uid)
  return uid_;
}
inline void OpenResponseParams::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.OpenResponseParams.uid)
}

// -------------------------------------------------------------------

// ReadRequestParams

// string path = 1;
inline void ReadRequestParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadRequestParams::path() const {
  // @@protoc_insertion_point(field_get:nfsFuse.ReadRequestParams.path)
  return path_.GetNoArena();
}
inline void ReadRequestParams::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.ReadRequestParams.path)
}
#if LANG_CXX11
inline void ReadRequestParams::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.ReadRequestParams.path)
}
#endif
inline void ReadRequestParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.ReadRequestParams.path)
}
inline void ReadRequestParams::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.ReadRequestParams.path)
}
inline ::std::string* ReadRequestParams::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.ReadRequestParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadRequestParams::release_path() {
  // @@protoc_insertion_point(field_release:nfsFuse.ReadRequestParams.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadRequestParams::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.ReadRequestParams.path)
}

// -------------------------------------------------------------------

// ReadResponseParams

// string text = 1;
inline void ReadResponseParams::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadResponseParams::text() const {
  // @@protoc_insertion_point(field_get:nfsFuse.ReadResponseParams.text)
  return text_.GetNoArena();
}
inline void ReadResponseParams::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.ReadResponseParams.text)
}
#if LANG_CXX11
inline void ReadResponseParams::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.ReadResponseParams.text)
}
#endif
inline void ReadResponseParams::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.ReadResponseParams.text)
}
inline void ReadResponseParams::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.ReadResponseParams.text)
}
inline ::std::string* ReadResponseParams::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.ReadResponseParams.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadResponseParams::release_text() {
  // @@protoc_insertion_point(field_release:nfsFuse.ReadResponseParams.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadResponseParams::set_allocated_text(::std::string* text) {
  if (text != nullptr) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.ReadResponseParams.text)
}

// -------------------------------------------------------------------

// WriteRequestParams

// string bytes = 1;
inline void WriteRequestParams::clear_bytes() {
  bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteRequestParams::bytes() const {
  // @@protoc_insertion_point(field_get:nfsFuse.WriteRequestParams.bytes)
  return bytes_.GetNoArena();
}
inline void WriteRequestParams::set_bytes(const ::std::string& value) {
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.WriteRequestParams.bytes)
}
#if LANG_CXX11
inline void WriteRequestParams::set_bytes(::std::string&& value) {
  
  bytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.WriteRequestParams.bytes)
}
#endif
inline void WriteRequestParams::set_bytes(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.WriteRequestParams.bytes)
}
inline void WriteRequestParams::set_bytes(const char* value, size_t size) {
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.WriteRequestParams.bytes)
}
inline ::std::string* WriteRequestParams::mutable_bytes() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.WriteRequestParams.bytes)
  return bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteRequestParams::release_bytes() {
  // @@protoc_insertion_point(field_release:nfsFuse.WriteRequestParams.bytes)
  
  return bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteRequestParams::set_allocated_bytes(::std::string* bytes) {
  if (bytes != nullptr) {
    
  } else {
    
  }
  bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytes);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.WriteRequestParams.bytes)
}

// string path = 2;
inline void WriteRequestParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteRequestParams::path() const {
  // @@protoc_insertion_point(field_get:nfsFuse.WriteRequestParams.path)
  return path_.GetNoArena();
}
inline void WriteRequestParams::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.WriteRequestParams.path)
}
#if LANG_CXX11
inline void WriteRequestParams::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.WriteRequestParams.path)
}
#endif
inline void WriteRequestParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.WriteRequestParams.path)
}
inline void WriteRequestParams::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.WriteRequestParams.path)
}
inline ::std::string* WriteRequestParams::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.WriteRequestParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteRequestParams::release_path() {
  // @@protoc_insertion_point(field_release:nfsFuse.WriteRequestParams.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteRequestParams::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.WriteRequestParams.path)
}

// -------------------------------------------------------------------

// LookupRequestParams

// string path = 1;
inline void LookupRequestParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LookupRequestParams::path() const {
  // @@protoc_insertion_point(field_get:nfsFuse.LookupRequestParams.path)
  return path_.GetNoArena();
}
inline void LookupRequestParams::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.LookupRequestParams.path)
}
#if LANG_CXX11
inline void LookupRequestParams::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.LookupRequestParams.path)
}
#endif
inline void LookupRequestParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.LookupRequestParams.path)
}
inline void LookupRequestParams::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.LookupRequestParams.path)
}
inline ::std::string* LookupRequestParams::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.LookupRequestParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LookupRequestParams::release_path() {
  // @@protoc_insertion_point(field_release:nfsFuse.LookupRequestParams.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LookupRequestParams::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.LookupRequestParams.path)
}

// -------------------------------------------------------------------

// LookupResponseParams

// int32 fileHandle = 1;
inline void LookupResponseParams::clear_filehandle() {
  filehandle_ = 0;
}
inline ::google::protobuf::int32 LookupResponseParams::filehandle() const {
  // @@protoc_insertion_point(field_get:nfsFuse.LookupResponseParams.fileHandle)
  return filehandle_;
}
inline void LookupResponseParams::set_filehandle(::google::protobuf::int32 value) {
  
  filehandle_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.LookupResponseParams.fileHandle)
}

// int32 uid = 2;
inline void LookupResponseParams::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 LookupResponseParams::uid() const {
  // @@protoc_insertion_point(field_get:nfsFuse.LookupResponseParams.uid)
  return uid_;
}
inline void LookupResponseParams::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.LookupResponseParams.uid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace nfsFuse

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_nfsFuse_2eproto
