// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nfsFuse.proto

#ifndef PROTOBUF_INCLUDED_nfsFuse_2eproto
#define PROTOBUF_INCLUDED_nfsFuse_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_nfsFuse_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_nfsFuse_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[19]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_nfsFuse_2eproto();
namespace nfsFuse {
class CreateRequestParams;
class CreateRequestParamsDefaultTypeInternal;
extern CreateRequestParamsDefaultTypeInternal _CreateRequestParams_default_instance_;
class CreateResponseParams;
class CreateResponseParamsDefaultTypeInternal;
extern CreateResponseParamsDefaultTypeInternal _CreateResponseParams_default_instance_;
class GetAttrRequestParams;
class GetAttrRequestParamsDefaultTypeInternal;
extern GetAttrRequestParamsDefaultTypeInternal _GetAttrRequestParams_default_instance_;
class GetAttrResponseParams;
class GetAttrResponseParamsDefaultTypeInternal;
extern GetAttrResponseParamsDefaultTypeInternal _GetAttrResponseParams_default_instance_;
class MkDirRequestParams;
class MkDirRequestParamsDefaultTypeInternal;
extern MkDirRequestParamsDefaultTypeInternal _MkDirRequestParams_default_instance_;
class MknodRequestParams;
class MknodRequestParamsDefaultTypeInternal;
extern MknodRequestParamsDefaultTypeInternal _MknodRequestParams_default_instance_;
class OpenRequestParams;
class OpenRequestParamsDefaultTypeInternal;
extern OpenRequestParamsDefaultTypeInternal _OpenRequestParams_default_instance_;
class OpenResponseParams;
class OpenResponseParamsDefaultTypeInternal;
extern OpenResponseParamsDefaultTypeInternal _OpenResponseParams_default_instance_;
class ReadDirRequestParams;
class ReadDirRequestParamsDefaultTypeInternal;
extern ReadDirRequestParamsDefaultTypeInternal _ReadDirRequestParams_default_instance_;
class ReadDirResponseParams;
class ReadDirResponseParamsDefaultTypeInternal;
extern ReadDirResponseParamsDefaultTypeInternal _ReadDirResponseParams_default_instance_;
class ReadRequestParams;
class ReadRequestParamsDefaultTypeInternal;
extern ReadRequestParamsDefaultTypeInternal _ReadRequestParams_default_instance_;
class ReadResponseParams;
class ReadResponseParamsDefaultTypeInternal;
extern ReadResponseParamsDefaultTypeInternal _ReadResponseParams_default_instance_;
class RenameRequestParams;
class RenameRequestParamsDefaultTypeInternal;
extern RenameRequestParamsDefaultTypeInternal _RenameRequestParams_default_instance_;
class RmDirRequestParams;
class RmDirRequestParamsDefaultTypeInternal;
extern RmDirRequestParamsDefaultTypeInternal _RmDirRequestParams_default_instance_;
class UnlinkRequestParams;
class UnlinkRequestParamsDefaultTypeInternal;
extern UnlinkRequestParamsDefaultTypeInternal _UnlinkRequestParams_default_instance_;
class UtimensRequestParams;
class UtimensRequestParamsDefaultTypeInternal;
extern UtimensRequestParamsDefaultTypeInternal _UtimensRequestParams_default_instance_;
class VoidMessage;
class VoidMessageDefaultTypeInternal;
extern VoidMessageDefaultTypeInternal _VoidMessage_default_instance_;
class WriteRequestParams;
class WriteRequestParamsDefaultTypeInternal;
extern WriteRequestParamsDefaultTypeInternal _WriteRequestParams_default_instance_;
class WriteResponseParams;
class WriteResponseParamsDefaultTypeInternal;
extern WriteResponseParamsDefaultTypeInternal _WriteResponseParams_default_instance_;
}  // namespace nfsFuse
namespace google {
namespace protobuf {
template<> ::nfsFuse::CreateRequestParams* Arena::CreateMaybeMessage<::nfsFuse::CreateRequestParams>(Arena*);
template<> ::nfsFuse::CreateResponseParams* Arena::CreateMaybeMessage<::nfsFuse::CreateResponseParams>(Arena*);
template<> ::nfsFuse::GetAttrRequestParams* Arena::CreateMaybeMessage<::nfsFuse::GetAttrRequestParams>(Arena*);
template<> ::nfsFuse::GetAttrResponseParams* Arena::CreateMaybeMessage<::nfsFuse::GetAttrResponseParams>(Arena*);
template<> ::nfsFuse::MkDirRequestParams* Arena::CreateMaybeMessage<::nfsFuse::MkDirRequestParams>(Arena*);
template<> ::nfsFuse::MknodRequestParams* Arena::CreateMaybeMessage<::nfsFuse::MknodRequestParams>(Arena*);
template<> ::nfsFuse::OpenRequestParams* Arena::CreateMaybeMessage<::nfsFuse::OpenRequestParams>(Arena*);
template<> ::nfsFuse::OpenResponseParams* Arena::CreateMaybeMessage<::nfsFuse::OpenResponseParams>(Arena*);
template<> ::nfsFuse::ReadDirRequestParams* Arena::CreateMaybeMessage<::nfsFuse::ReadDirRequestParams>(Arena*);
template<> ::nfsFuse::ReadDirResponseParams* Arena::CreateMaybeMessage<::nfsFuse::ReadDirResponseParams>(Arena*);
template<> ::nfsFuse::ReadRequestParams* Arena::CreateMaybeMessage<::nfsFuse::ReadRequestParams>(Arena*);
template<> ::nfsFuse::ReadResponseParams* Arena::CreateMaybeMessage<::nfsFuse::ReadResponseParams>(Arena*);
template<> ::nfsFuse::RenameRequestParams* Arena::CreateMaybeMessage<::nfsFuse::RenameRequestParams>(Arena*);
template<> ::nfsFuse::RmDirRequestParams* Arena::CreateMaybeMessage<::nfsFuse::RmDirRequestParams>(Arena*);
template<> ::nfsFuse::UnlinkRequestParams* Arena::CreateMaybeMessage<::nfsFuse::UnlinkRequestParams>(Arena*);
template<> ::nfsFuse::UtimensRequestParams* Arena::CreateMaybeMessage<::nfsFuse::UtimensRequestParams>(Arena*);
template<> ::nfsFuse::VoidMessage* Arena::CreateMaybeMessage<::nfsFuse::VoidMessage>(Arena*);
template<> ::nfsFuse::WriteRequestParams* Arena::CreateMaybeMessage<::nfsFuse::WriteRequestParams>(Arena*);
template<> ::nfsFuse::WriteResponseParams* Arena::CreateMaybeMessage<::nfsFuse::WriteResponseParams>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace nfsFuse {

// ===================================================================

class VoidMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.VoidMessage) */ {
 public:
  VoidMessage();
  virtual ~VoidMessage();

  VoidMessage(const VoidMessage& from);

  inline VoidMessage& operator=(const VoidMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VoidMessage(VoidMessage&& from) noexcept
    : VoidMessage() {
    *this = ::std::move(from);
  }

  inline VoidMessage& operator=(VoidMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const VoidMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VoidMessage* internal_default_instance() {
    return reinterpret_cast<const VoidMessage*>(
               &_VoidMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(VoidMessage* other);
  friend void swap(VoidMessage& a, VoidMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VoidMessage* New() const final {
    return CreateMaybeMessage<VoidMessage>(nullptr);
  }

  VoidMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VoidMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VoidMessage& from);
  void MergeFrom(const VoidMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VoidMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  const ::std::string& ret() const;
  void set_ret(const ::std::string& value);
  #if LANG_CXX11
  void set_ret(::std::string&& value);
  #endif
  void set_ret(const char* value);
  void set_ret(const char* value, size_t size);
  ::std::string* mutable_ret();
  ::std::string* release_ret();
  void set_allocated_ret(::std::string* ret);

  // int32 err = 2;
  void clear_err();
  static const int kErrFieldNumber = 2;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfsFuse.VoidMessage)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ret_;
  ::google::protobuf::int32 err_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class GetAttrRequestParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.GetAttrRequestParams) */ {
 public:
  GetAttrRequestParams();
  virtual ~GetAttrRequestParams();

  GetAttrRequestParams(const GetAttrRequestParams& from);

  inline GetAttrRequestParams& operator=(const GetAttrRequestParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetAttrRequestParams(GetAttrRequestParams&& from) noexcept
    : GetAttrRequestParams() {
    *this = ::std::move(from);
  }

  inline GetAttrRequestParams& operator=(GetAttrRequestParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetAttrRequestParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetAttrRequestParams* internal_default_instance() {
    return reinterpret_cast<const GetAttrRequestParams*>(
               &_GetAttrRequestParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GetAttrRequestParams* other);
  friend void swap(GetAttrRequestParams& a, GetAttrRequestParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetAttrRequestParams* New() const final {
    return CreateMaybeMessage<GetAttrRequestParams>(nullptr);
  }

  GetAttrRequestParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetAttrRequestParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetAttrRequestParams& from);
  void MergeFrom(const GetAttrRequestParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetAttrRequestParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:nfsFuse.GetAttrRequestParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class GetAttrResponseParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.GetAttrResponseParams) */ {
 public:
  GetAttrResponseParams();
  virtual ~GetAttrResponseParams();

  GetAttrResponseParams(const GetAttrResponseParams& from);

  inline GetAttrResponseParams& operator=(const GetAttrResponseParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetAttrResponseParams(GetAttrResponseParams&& from) noexcept
    : GetAttrResponseParams() {
    *this = ::std::move(from);
  }

  inline GetAttrResponseParams& operator=(GetAttrResponseParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetAttrResponseParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetAttrResponseParams* internal_default_instance() {
    return reinterpret_cast<const GetAttrResponseParams*>(
               &_GetAttrResponseParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(GetAttrResponseParams* other);
  friend void swap(GetAttrResponseParams& a, GetAttrResponseParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetAttrResponseParams* New() const final {
    return CreateMaybeMessage<GetAttrResponseParams>(nullptr);
  }

  GetAttrResponseParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetAttrResponseParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetAttrResponseParams& from);
  void MergeFrom(const GetAttrResponseParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetAttrResponseParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 dev = 1;
  void clear_dev();
  static const int kDevFieldNumber = 1;
  ::google::protobuf::uint32 dev() const;
  void set_dev(::google::protobuf::uint32 value);

  // uint32 inode = 2;
  void clear_inode();
  static const int kInodeFieldNumber = 2;
  ::google::protobuf::uint32 inode() const;
  void set_inode(::google::protobuf::uint32 value);

  // int32 mode = 3;
  void clear_mode();
  static const int kModeFieldNumber = 3;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // uint32 nlink = 4;
  void clear_nlink();
  static const int kNlinkFieldNumber = 4;
  ::google::protobuf::uint32 nlink() const;
  void set_nlink(::google::protobuf::uint32 value);

  // uint32 uid = 5;
  void clear_uid();
  static const int kUidFieldNumber = 5;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 guid = 6;
  void clear_guid();
  static const int kGuidFieldNumber = 6;
  ::google::protobuf::uint32 guid() const;
  void set_guid(::google::protobuf::uint32 value);

  // sint64 size = 7;
  void clear_size();
  static const int kSizeFieldNumber = 7;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // sint64 blocksize = 8;
  void clear_blocksize();
  static const int kBlocksizeFieldNumber = 8;
  ::google::protobuf::int64 blocksize() const;
  void set_blocksize(::google::protobuf::int64 value);

  // sint64 nblock = 9;
  void clear_nblock();
  static const int kNblockFieldNumber = 9;
  ::google::protobuf::int64 nblock() const;
  void set_nblock(::google::protobuf::int64 value);

  // int32 latime = 10;
  void clear_latime();
  static const int kLatimeFieldNumber = 10;
  ::google::protobuf::int32 latime() const;
  void set_latime(::google::protobuf::int32 value);

  // int32 mtime = 11;
  void clear_mtime();
  static const int kMtimeFieldNumber = 11;
  ::google::protobuf::int32 mtime() const;
  void set_mtime(::google::protobuf::int32 value);

  // int32 ctime = 12;
  void clear_ctime();
  static const int kCtimeFieldNumber = 12;
  ::google::protobuf::int32 ctime() const;
  void set_ctime(::google::protobuf::int32 value);

  // int32 err = 13;
  void clear_err();
  static const int kErrFieldNumber = 13;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfsFuse.GetAttrResponseParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 dev_;
  ::google::protobuf::uint32 inode_;
  ::google::protobuf::int32 mode_;
  ::google::protobuf::uint32 nlink_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 guid_;
  ::google::protobuf::int64 size_;
  ::google::protobuf::int64 blocksize_;
  ::google::protobuf::int64 nblock_;
  ::google::protobuf::int32 latime_;
  ::google::protobuf::int32 mtime_;
  ::google::protobuf::int32 ctime_;
  ::google::protobuf::int32 err_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class ReadDirRequestParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.ReadDirRequestParams) */ {
 public:
  ReadDirRequestParams();
  virtual ~ReadDirRequestParams();

  ReadDirRequestParams(const ReadDirRequestParams& from);

  inline ReadDirRequestParams& operator=(const ReadDirRequestParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadDirRequestParams(ReadDirRequestParams&& from) noexcept
    : ReadDirRequestParams() {
    *this = ::std::move(from);
  }

  inline ReadDirRequestParams& operator=(ReadDirRequestParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReadDirRequestParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadDirRequestParams* internal_default_instance() {
    return reinterpret_cast<const ReadDirRequestParams*>(
               &_ReadDirRequestParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ReadDirRequestParams* other);
  friend void swap(ReadDirRequestParams& a, ReadDirRequestParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadDirRequestParams* New() const final {
    return CreateMaybeMessage<ReadDirRequestParams>(nullptr);
  }

  ReadDirRequestParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReadDirRequestParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReadDirRequestParams& from);
  void MergeFrom(const ReadDirRequestParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadDirRequestParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:nfsFuse.ReadDirRequestParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class ReadDirResponseParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.ReadDirResponseParams) */ {
 public:
  ReadDirResponseParams();
  virtual ~ReadDirResponseParams();

  ReadDirResponseParams(const ReadDirResponseParams& from);

  inline ReadDirResponseParams& operator=(const ReadDirResponseParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadDirResponseParams(ReadDirResponseParams&& from) noexcept
    : ReadDirResponseParams() {
    *this = ::std::move(from);
  }

  inline ReadDirResponseParams& operator=(ReadDirResponseParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReadDirResponseParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadDirResponseParams* internal_default_instance() {
    return reinterpret_cast<const ReadDirResponseParams*>(
               &_ReadDirResponseParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ReadDirResponseParams* other);
  friend void swap(ReadDirResponseParams& a, ReadDirResponseParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadDirResponseParams* New() const final {
    return CreateMaybeMessage<ReadDirResponseParams>(nullptr);
  }

  ReadDirResponseParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReadDirResponseParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReadDirResponseParams& from);
  void MergeFrom(const ReadDirResponseParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadDirResponseParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string dname = 2;
  void clear_dname();
  static const int kDnameFieldNumber = 2;
  const ::std::string& dname() const;
  void set_dname(const ::std::string& value);
  #if LANG_CXX11
  void set_dname(::std::string&& value);
  #endif
  void set_dname(const char* value);
  void set_dname(const char* value, size_t size);
  ::std::string* mutable_dname();
  ::std::string* release_dname();
  void set_allocated_dname(::std::string* dname);

  // uint32 dinode = 1;
  void clear_dinode();
  static const int kDinodeFieldNumber = 1;
  ::google::protobuf::uint32 dinode() const;
  void set_dinode(::google::protobuf::uint32 value);

  // uint32 dtype = 3;
  void clear_dtype();
  static const int kDtypeFieldNumber = 3;
  ::google::protobuf::uint32 dtype() const;
  void set_dtype(::google::protobuf::uint32 value);

  // int32 err = 4;
  void clear_err();
  static const int kErrFieldNumber = 4;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfsFuse.ReadDirResponseParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr dname_;
  ::google::protobuf::uint32 dinode_;
  ::google::protobuf::uint32 dtype_;
  ::google::protobuf::int32 err_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class MkDirRequestParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.MkDirRequestParams) */ {
 public:
  MkDirRequestParams();
  virtual ~MkDirRequestParams();

  MkDirRequestParams(const MkDirRequestParams& from);

  inline MkDirRequestParams& operator=(const MkDirRequestParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MkDirRequestParams(MkDirRequestParams&& from) noexcept
    : MkDirRequestParams() {
    *this = ::std::move(from);
  }

  inline MkDirRequestParams& operator=(MkDirRequestParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MkDirRequestParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MkDirRequestParams* internal_default_instance() {
    return reinterpret_cast<const MkDirRequestParams*>(
               &_MkDirRequestParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(MkDirRequestParams* other);
  friend void swap(MkDirRequestParams& a, MkDirRequestParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MkDirRequestParams* New() const final {
    return CreateMaybeMessage<MkDirRequestParams>(nullptr);
  }

  MkDirRequestParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MkDirRequestParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MkDirRequestParams& from);
  void MergeFrom(const MkDirRequestParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MkDirRequestParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // int32 mode = 2;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfsFuse.MkDirRequestParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int32 mode_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class CreateRequestParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.CreateRequestParams) */ {
 public:
  CreateRequestParams();
  virtual ~CreateRequestParams();

  CreateRequestParams(const CreateRequestParams& from);

  inline CreateRequestParams& operator=(const CreateRequestParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateRequestParams(CreateRequestParams&& from) noexcept
    : CreateRequestParams() {
    *this = ::std::move(from);
  }

  inline CreateRequestParams& operator=(CreateRequestParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CreateRequestParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateRequestParams* internal_default_instance() {
    return reinterpret_cast<const CreateRequestParams*>(
               &_CreateRequestParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CreateRequestParams* other);
  friend void swap(CreateRequestParams& a, CreateRequestParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateRequestParams* New() const final {
    return CreateMaybeMessage<CreateRequestParams>(nullptr);
  }

  CreateRequestParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateRequestParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateRequestParams& from);
  void MergeFrom(const CreateRequestParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateRequestParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // int32 mode = 2;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // int32 flags = 3;
  void clear_flags();
  static const int kFlagsFieldNumber = 3;
  ::google::protobuf::int32 flags() const;
  void set_flags(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfsFuse.CreateRequestParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int32 mode_;
  ::google::protobuf::int32 flags_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class CreateResponseParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.CreateResponseParams) */ {
 public:
  CreateResponseParams();
  virtual ~CreateResponseParams();

  CreateResponseParams(const CreateResponseParams& from);

  inline CreateResponseParams& operator=(const CreateResponseParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateResponseParams(CreateResponseParams&& from) noexcept
    : CreateResponseParams() {
    *this = ::std::move(from);
  }

  inline CreateResponseParams& operator=(CreateResponseParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CreateResponseParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateResponseParams* internal_default_instance() {
    return reinterpret_cast<const CreateResponseParams*>(
               &_CreateResponseParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CreateResponseParams* other);
  friend void swap(CreateResponseParams& a, CreateResponseParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateResponseParams* New() const final {
    return CreateMaybeMessage<CreateResponseParams>(nullptr);
  }

  CreateResponseParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateResponseParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateResponseParams& from);
  void MergeFrom(const CreateResponseParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateResponseParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 flags = 1;
  void clear_flags();
  static const int kFlagsFieldNumber = 1;
  ::google::protobuf::int32 flags() const;
  void set_flags(::google::protobuf::int32 value);

  // int32 fh = 2;
  void clear_fh();
  static const int kFhFieldNumber = 2;
  ::google::protobuf::int32 fh() const;
  void set_fh(::google::protobuf::int32 value);

  // uint64 lockowner = 4;
  void clear_lockowner();
  static const int kLockownerFieldNumber = 4;
  ::google::protobuf::uint64 lockowner() const;
  void set_lockowner(::google::protobuf::uint64 value);

  // uint32 oldfh = 3;
  void clear_oldfh();
  static const int kOldfhFieldNumber = 3;
  ::google::protobuf::uint32 oldfh() const;
  void set_oldfh(::google::protobuf::uint32 value);

  // uint32 pollevent = 5;
  void clear_pollevent();
  static const int kPolleventFieldNumber = 5;
  ::google::protobuf::uint32 pollevent() const;
  void set_pollevent(::google::protobuf::uint32 value);

  // int32 err = 6;
  void clear_err();
  static const int kErrFieldNumber = 6;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfsFuse.CreateResponseParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 flags_;
  ::google::protobuf::int32 fh_;
  ::google::protobuf::uint64 lockowner_;
  ::google::protobuf::uint32 oldfh_;
  ::google::protobuf::uint32 pollevent_;
  ::google::protobuf::int32 err_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class RmDirRequestParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.RmDirRequestParams) */ {
 public:
  RmDirRequestParams();
  virtual ~RmDirRequestParams();

  RmDirRequestParams(const RmDirRequestParams& from);

  inline RmDirRequestParams& operator=(const RmDirRequestParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RmDirRequestParams(RmDirRequestParams&& from) noexcept
    : RmDirRequestParams() {
    *this = ::std::move(from);
  }

  inline RmDirRequestParams& operator=(RmDirRequestParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RmDirRequestParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RmDirRequestParams* internal_default_instance() {
    return reinterpret_cast<const RmDirRequestParams*>(
               &_RmDirRequestParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(RmDirRequestParams* other);
  friend void swap(RmDirRequestParams& a, RmDirRequestParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RmDirRequestParams* New() const final {
    return CreateMaybeMessage<RmDirRequestParams>(nullptr);
  }

  RmDirRequestParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RmDirRequestParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RmDirRequestParams& from);
  void MergeFrom(const RmDirRequestParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RmDirRequestParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // int32 mode = 2;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfsFuse.RmDirRequestParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int32 mode_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class OpenRequestParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.OpenRequestParams) */ {
 public:
  OpenRequestParams();
  virtual ~OpenRequestParams();

  OpenRequestParams(const OpenRequestParams& from);

  inline OpenRequestParams& operator=(const OpenRequestParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpenRequestParams(OpenRequestParams&& from) noexcept
    : OpenRequestParams() {
    *this = ::std::move(from);
  }

  inline OpenRequestParams& operator=(OpenRequestParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OpenRequestParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpenRequestParams* internal_default_instance() {
    return reinterpret_cast<const OpenRequestParams*>(
               &_OpenRequestParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(OpenRequestParams* other);
  friend void swap(OpenRequestParams& a, OpenRequestParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpenRequestParams* New() const final {
    return CreateMaybeMessage<OpenRequestParams>(nullptr);
  }

  OpenRequestParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OpenRequestParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OpenRequestParams& from);
  void MergeFrom(const OpenRequestParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OpenRequestParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // int32 flags = 2;
  void clear_flags();
  static const int kFlagsFieldNumber = 2;
  ::google::protobuf::int32 flags() const;
  void set_flags(::google::protobuf::int32 value);

  // int32 fh = 3;
  void clear_fh();
  static const int kFhFieldNumber = 3;
  ::google::protobuf::int32 fh() const;
  void set_fh(::google::protobuf::int32 value);

  // uint64 lockowner = 5;
  void clear_lockowner();
  static const int kLockownerFieldNumber = 5;
  ::google::protobuf::uint64 lockowner() const;
  void set_lockowner(::google::protobuf::uint64 value);

  // uint32 oldfh = 4;
  void clear_oldfh();
  static const int kOldfhFieldNumber = 4;
  ::google::protobuf::uint32 oldfh() const;
  void set_oldfh(::google::protobuf::uint32 value);

  // uint32 pollevent = 6;
  void clear_pollevent();
  static const int kPolleventFieldNumber = 6;
  ::google::protobuf::uint32 pollevent() const;
  void set_pollevent(::google::protobuf::uint32 value);

  // int32 err = 7;
  void clear_err();
  static const int kErrFieldNumber = 7;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfsFuse.OpenRequestParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int32 flags_;
  ::google::protobuf::int32 fh_;
  ::google::protobuf::uint64 lockowner_;
  ::google::protobuf::uint32 oldfh_;
  ::google::protobuf::uint32 pollevent_;
  ::google::protobuf::int32 err_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class OpenResponseParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.OpenResponseParams) */ {
 public:
  OpenResponseParams();
  virtual ~OpenResponseParams();

  OpenResponseParams(const OpenResponseParams& from);

  inline OpenResponseParams& operator=(const OpenResponseParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpenResponseParams(OpenResponseParams&& from) noexcept
    : OpenResponseParams() {
    *this = ::std::move(from);
  }

  inline OpenResponseParams& operator=(OpenResponseParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OpenResponseParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpenResponseParams* internal_default_instance() {
    return reinterpret_cast<const OpenResponseParams*>(
               &_OpenResponseParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(OpenResponseParams* other);
  friend void swap(OpenResponseParams& a, OpenResponseParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpenResponseParams* New() const final {
    return CreateMaybeMessage<OpenResponseParams>(nullptr);
  }

  OpenResponseParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OpenResponseParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OpenResponseParams& from);
  void MergeFrom(const OpenResponseParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OpenResponseParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // int32 flags = 2;
  void clear_flags();
  static const int kFlagsFieldNumber = 2;
  ::google::protobuf::int32 flags() const;
  void set_flags(::google::protobuf::int32 value);

  // int32 fh = 3;
  void clear_fh();
  static const int kFhFieldNumber = 3;
  ::google::protobuf::int32 fh() const;
  void set_fh(::google::protobuf::int32 value);

  // uint64 lockowner = 5;
  void clear_lockowner();
  static const int kLockownerFieldNumber = 5;
  ::google::protobuf::uint64 lockowner() const;
  void set_lockowner(::google::protobuf::uint64 value);

  // uint32 oldfh = 4;
  void clear_oldfh();
  static const int kOldfhFieldNumber = 4;
  ::google::protobuf::uint32 oldfh() const;
  void set_oldfh(::google::protobuf::uint32 value);

  // uint32 pollevent = 6;
  void clear_pollevent();
  static const int kPolleventFieldNumber = 6;
  ::google::protobuf::uint32 pollevent() const;
  void set_pollevent(::google::protobuf::uint32 value);

  // int32 err = 7;
  void clear_err();
  static const int kErrFieldNumber = 7;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfsFuse.OpenResponseParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int32 flags_;
  ::google::protobuf::int32 fh_;
  ::google::protobuf::uint64 lockowner_;
  ::google::protobuf::uint32 oldfh_;
  ::google::protobuf::uint32 pollevent_;
  ::google::protobuf::int32 err_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class ReadRequestParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.ReadRequestParams) */ {
 public:
  ReadRequestParams();
  virtual ~ReadRequestParams();

  ReadRequestParams(const ReadRequestParams& from);

  inline ReadRequestParams& operator=(const ReadRequestParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadRequestParams(ReadRequestParams&& from) noexcept
    : ReadRequestParams() {
    *this = ::std::move(from);
  }

  inline ReadRequestParams& operator=(ReadRequestParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReadRequestParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadRequestParams* internal_default_instance() {
    return reinterpret_cast<const ReadRequestParams*>(
               &_ReadRequestParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(ReadRequestParams* other);
  friend void swap(ReadRequestParams& a, ReadRequestParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadRequestParams* New() const final {
    return CreateMaybeMessage<ReadRequestParams>(nullptr);
  }

  ReadRequestParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReadRequestParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReadRequestParams& from);
  void MergeFrom(const ReadRequestParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadRequestParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // int64 offset = 3;
  void clear_offset();
  static const int kOffsetFieldNumber = 3;
  ::google::protobuf::int64 offset() const;
  void set_offset(::google::protobuf::int64 value);

  // uint32 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:nfsFuse.ReadRequestParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int64 offset_;
  ::google::protobuf::uint32 size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class ReadResponseParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.ReadResponseParams) */ {
 public:
  ReadResponseParams();
  virtual ~ReadResponseParams();

  ReadResponseParams(const ReadResponseParams& from);

  inline ReadResponseParams& operator=(const ReadResponseParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadResponseParams(ReadResponseParams&& from) noexcept
    : ReadResponseParams() {
    *this = ::std::move(from);
  }

  inline ReadResponseParams& operator=(ReadResponseParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReadResponseParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadResponseParams* internal_default_instance() {
    return reinterpret_cast<const ReadResponseParams*>(
               &_ReadResponseParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(ReadResponseParams* other);
  friend void swap(ReadResponseParams& a, ReadResponseParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadResponseParams* New() const final {
    return CreateMaybeMessage<ReadResponseParams>(nullptr);
  }

  ReadResponseParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReadResponseParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReadResponseParams& from);
  void MergeFrom(const ReadResponseParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadResponseParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes buffer = 1;
  void clear_buffer();
  static const int kBufferFieldNumber = 1;
  const ::std::string& buffer() const;
  void set_buffer(const ::std::string& value);
  #if LANG_CXX11
  void set_buffer(::std::string&& value);
  #endif
  void set_buffer(const char* value);
  void set_buffer(const void* value, size_t size);
  ::std::string* mutable_buffer();
  ::std::string* release_buffer();
  void set_allocated_buffer(::std::string* buffer);

  // int32 bufferlength = 2;
  void clear_bufferlength();
  static const int kBufferlengthFieldNumber = 2;
  ::google::protobuf::int32 bufferlength() const;
  void set_bufferlength(::google::protobuf::int32 value);

  // int32 err = 3;
  void clear_err();
  static const int kErrFieldNumber = 3;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfsFuse.ReadResponseParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr buffer_;
  ::google::protobuf::int32 bufferlength_;
  ::google::protobuf::int32 err_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class WriteRequestParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.WriteRequestParams) */ {
 public:
  WriteRequestParams();
  virtual ~WriteRequestParams();

  WriteRequestParams(const WriteRequestParams& from);

  inline WriteRequestParams& operator=(const WriteRequestParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteRequestParams(WriteRequestParams&& from) noexcept
    : WriteRequestParams() {
    *this = ::std::move(from);
  }

  inline WriteRequestParams& operator=(WriteRequestParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WriteRequestParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WriteRequestParams* internal_default_instance() {
    return reinterpret_cast<const WriteRequestParams*>(
               &_WriteRequestParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(WriteRequestParams* other);
  friend void swap(WriteRequestParams& a, WriteRequestParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteRequestParams* New() const final {
    return CreateMaybeMessage<WriteRequestParams>(nullptr);
  }

  WriteRequestParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WriteRequestParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WriteRequestParams& from);
  void MergeFrom(const WriteRequestParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WriteRequestParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes buffer = 1;
  void clear_buffer();
  static const int kBufferFieldNumber = 1;
  const ::std::string& buffer() const;
  void set_buffer(const ::std::string& value);
  #if LANG_CXX11
  void set_buffer(::std::string&& value);
  #endif
  void set_buffer(const char* value);
  void set_buffer(const void* value, size_t size);
  ::std::string* mutable_buffer();
  ::std::string* release_buffer();
  void set_allocated_buffer(::std::string* buffer);

  // string path = 2;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // uint32 bufferlength = 3;
  void clear_bufferlength();
  static const int kBufferlengthFieldNumber = 3;
  ::google::protobuf::uint32 bufferlength() const;
  void set_bufferlength(::google::protobuf::uint32 value);

  // int32 offset = 4;
  void clear_offset();
  static const int kOffsetFieldNumber = 4;
  ::google::protobuf::int32 offset() const;
  void set_offset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfsFuse.WriteRequestParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr buffer_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::uint32 bufferlength_;
  ::google::protobuf::int32 offset_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class WriteResponseParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.WriteResponseParams) */ {
 public:
  WriteResponseParams();
  virtual ~WriteResponseParams();

  WriteResponseParams(const WriteResponseParams& from);

  inline WriteResponseParams& operator=(const WriteResponseParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteResponseParams(WriteResponseParams&& from) noexcept
    : WriteResponseParams() {
    *this = ::std::move(from);
  }

  inline WriteResponseParams& operator=(WriteResponseParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WriteResponseParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WriteResponseParams* internal_default_instance() {
    return reinterpret_cast<const WriteResponseParams*>(
               &_WriteResponseParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(WriteResponseParams* other);
  friend void swap(WriteResponseParams& a, WriteResponseParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteResponseParams* New() const final {
    return CreateMaybeMessage<WriteResponseParams>(nullptr);
  }

  WriteResponseParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WriteResponseParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WriteResponseParams& from);
  void MergeFrom(const WriteResponseParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WriteResponseParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 bufferlength = 1;
  void clear_bufferlength();
  static const int kBufferlengthFieldNumber = 1;
  ::google::protobuf::int32 bufferlength() const;
  void set_bufferlength(::google::protobuf::int32 value);

  // int32 err = 2;
  void clear_err();
  static const int kErrFieldNumber = 2;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfsFuse.WriteResponseParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 bufferlength_;
  ::google::protobuf::int32 err_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class UnlinkRequestParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.UnlinkRequestParams) */ {
 public:
  UnlinkRequestParams();
  virtual ~UnlinkRequestParams();

  UnlinkRequestParams(const UnlinkRequestParams& from);

  inline UnlinkRequestParams& operator=(const UnlinkRequestParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnlinkRequestParams(UnlinkRequestParams&& from) noexcept
    : UnlinkRequestParams() {
    *this = ::std::move(from);
  }

  inline UnlinkRequestParams& operator=(UnlinkRequestParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UnlinkRequestParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnlinkRequestParams* internal_default_instance() {
    return reinterpret_cast<const UnlinkRequestParams*>(
               &_UnlinkRequestParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(UnlinkRequestParams* other);
  friend void swap(UnlinkRequestParams& a, UnlinkRequestParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnlinkRequestParams* New() const final {
    return CreateMaybeMessage<UnlinkRequestParams>(nullptr);
  }

  UnlinkRequestParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UnlinkRequestParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UnlinkRequestParams& from);
  void MergeFrom(const UnlinkRequestParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnlinkRequestParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:nfsFuse.UnlinkRequestParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class RenameRequestParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.RenameRequestParams) */ {
 public:
  RenameRequestParams();
  virtual ~RenameRequestParams();

  RenameRequestParams(const RenameRequestParams& from);

  inline RenameRequestParams& operator=(const RenameRequestParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RenameRequestParams(RenameRequestParams&& from) noexcept
    : RenameRequestParams() {
    *this = ::std::move(from);
  }

  inline RenameRequestParams& operator=(RenameRequestParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RenameRequestParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RenameRequestParams* internal_default_instance() {
    return reinterpret_cast<const RenameRequestParams*>(
               &_RenameRequestParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(RenameRequestParams* other);
  friend void swap(RenameRequestParams& a, RenameRequestParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RenameRequestParams* New() const final {
    return CreateMaybeMessage<RenameRequestParams>(nullptr);
  }

  RenameRequestParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RenameRequestParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RenameRequestParams& from);
  void MergeFrom(const RenameRequestParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RenameRequestParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string fp = 1;
  void clear_fp();
  static const int kFpFieldNumber = 1;
  const ::std::string& fp() const;
  void set_fp(const ::std::string& value);
  #if LANG_CXX11
  void set_fp(::std::string&& value);
  #endif
  void set_fp(const char* value);
  void set_fp(const char* value, size_t size);
  ::std::string* mutable_fp();
  ::std::string* release_fp();
  void set_allocated_fp(::std::string* fp);

  // string tp = 2;
  void clear_tp();
  static const int kTpFieldNumber = 2;
  const ::std::string& tp() const;
  void set_tp(const ::std::string& value);
  #if LANG_CXX11
  void set_tp(::std::string&& value);
  #endif
  void set_tp(const char* value);
  void set_tp(const char* value, size_t size);
  ::std::string* mutable_tp();
  ::std::string* release_tp();
  void set_allocated_tp(::std::string* tp);

  // uint32 flag = 3;
  void clear_flag();
  static const int kFlagFieldNumber = 3;
  ::google::protobuf::uint32 flag() const;
  void set_flag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:nfsFuse.RenameRequestParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr fp_;
  ::google::protobuf::internal::ArenaStringPtr tp_;
  ::google::protobuf::uint32 flag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class MknodRequestParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.MknodRequestParams) */ {
 public:
  MknodRequestParams();
  virtual ~MknodRequestParams();

  MknodRequestParams(const MknodRequestParams& from);

  inline MknodRequestParams& operator=(const MknodRequestParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MknodRequestParams(MknodRequestParams&& from) noexcept
    : MknodRequestParams() {
    *this = ::std::move(from);
  }

  inline MknodRequestParams& operator=(MknodRequestParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MknodRequestParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MknodRequestParams* internal_default_instance() {
    return reinterpret_cast<const MknodRequestParams*>(
               &_MknodRequestParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(MknodRequestParams* other);
  friend void swap(MknodRequestParams& a, MknodRequestParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MknodRequestParams* New() const final {
    return CreateMaybeMessage<MknodRequestParams>(nullptr);
  }

  MknodRequestParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MknodRequestParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MknodRequestParams& from);
  void MergeFrom(const MknodRequestParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MknodRequestParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // int32 mode = 2;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // uint32 rdev = 3;
  void clear_rdev();
  static const int kRdevFieldNumber = 3;
  ::google::protobuf::uint32 rdev() const;
  void set_rdev(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:nfsFuse.MknodRequestParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int32 mode_;
  ::google::protobuf::uint32 rdev_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// -------------------------------------------------------------------

class UtimensRequestParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfsFuse.UtimensRequestParams) */ {
 public:
  UtimensRequestParams();
  virtual ~UtimensRequestParams();

  UtimensRequestParams(const UtimensRequestParams& from);

  inline UtimensRequestParams& operator=(const UtimensRequestParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UtimensRequestParams(UtimensRequestParams&& from) noexcept
    : UtimensRequestParams() {
    *this = ::std::move(from);
  }

  inline UtimensRequestParams& operator=(UtimensRequestParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UtimensRequestParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UtimensRequestParams* internal_default_instance() {
    return reinterpret_cast<const UtimensRequestParams*>(
               &_UtimensRequestParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(UtimensRequestParams* other);
  friend void swap(UtimensRequestParams& a, UtimensRequestParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UtimensRequestParams* New() const final {
    return CreateMaybeMessage<UtimensRequestParams>(nullptr);
  }

  UtimensRequestParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UtimensRequestParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UtimensRequestParams& from);
  void MergeFrom(const UtimensRequestParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UtimensRequestParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // int64 nsec = 3;
  void clear_nsec();
  static const int kNsecFieldNumber = 3;
  ::google::protobuf::int64 nsec() const;
  void set_nsec(::google::protobuf::int64 value);

  // int32 sec = 2;
  void clear_sec();
  static const int kSecFieldNumber = 2;
  ::google::protobuf::int32 sec() const;
  void set_sec(::google::protobuf::int32 value);

  // int32 sec2 = 4;
  void clear_sec2();
  static const int kSec2FieldNumber = 4;
  ::google::protobuf::int32 sec2() const;
  void set_sec2(::google::protobuf::int32 value);

  // int64 nsec2 = 5;
  void clear_nsec2();
  static const int kNsec2FieldNumber = 5;
  ::google::protobuf::int64 nsec2() const;
  void set_nsec2(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:nfsFuse.UtimensRequestParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int64 nsec_;
  ::google::protobuf::int32 sec_;
  ::google::protobuf::int32 sec2_;
  ::google::protobuf::int64 nsec2_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nfsFuse_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VoidMessage

// string ret = 1;
inline void VoidMessage::clear_ret() {
  ret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VoidMessage::ret() const {
  // @@protoc_insertion_point(field_get:nfsFuse.VoidMessage.ret)
  return ret_.GetNoArena();
}
inline void VoidMessage::set_ret(const ::std::string& value) {
  
  ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.VoidMessage.ret)
}
#if LANG_CXX11
inline void VoidMessage::set_ret(::std::string&& value) {
  
  ret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.VoidMessage.ret)
}
#endif
inline void VoidMessage::set_ret(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.VoidMessage.ret)
}
inline void VoidMessage::set_ret(const char* value, size_t size) {
  
  ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.VoidMessage.ret)
}
inline ::std::string* VoidMessage::mutable_ret() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.VoidMessage.ret)
  return ret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VoidMessage::release_ret() {
  // @@protoc_insertion_point(field_release:nfsFuse.VoidMessage.ret)
  
  return ret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VoidMessage::set_allocated_ret(::std::string* ret) {
  if (ret != nullptr) {
    
  } else {
    
  }
  ret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ret);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.VoidMessage.ret)
}

// int32 err = 2;
inline void VoidMessage::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 VoidMessage::err() const {
  // @@protoc_insertion_point(field_get:nfsFuse.VoidMessage.err)
  return err_;
}
inline void VoidMessage::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.VoidMessage.err)
}

// -------------------------------------------------------------------

// GetAttrRequestParams

// string path = 1;
inline void GetAttrRequestParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAttrRequestParams::path() const {
  // @@protoc_insertion_point(field_get:nfsFuse.GetAttrRequestParams.path)
  return path_.GetNoArena();
}
inline void GetAttrRequestParams::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.GetAttrRequestParams.path)
}
#if LANG_CXX11
inline void GetAttrRequestParams::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.GetAttrRequestParams.path)
}
#endif
inline void GetAttrRequestParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.GetAttrRequestParams.path)
}
inline void GetAttrRequestParams::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.GetAttrRequestParams.path)
}
inline ::std::string* GetAttrRequestParams::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.GetAttrRequestParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAttrRequestParams::release_path() {
  // @@protoc_insertion_point(field_release:nfsFuse.GetAttrRequestParams.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAttrRequestParams::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.GetAttrRequestParams.path)
}

// -------------------------------------------------------------------

// GetAttrResponseParams

// uint32 dev = 1;
inline void GetAttrResponseParams::clear_dev() {
  dev_ = 0u;
}
inline ::google::protobuf::uint32 GetAttrResponseParams::dev() const {
  // @@protoc_insertion_point(field_get:nfsFuse.GetAttrResponseParams.dev)
  return dev_;
}
inline void GetAttrResponseParams::set_dev(::google::protobuf::uint32 value) {
  
  dev_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.GetAttrResponseParams.dev)
}

// uint32 inode = 2;
inline void GetAttrResponseParams::clear_inode() {
  inode_ = 0u;
}
inline ::google::protobuf::uint32 GetAttrResponseParams::inode() const {
  // @@protoc_insertion_point(field_get:nfsFuse.GetAttrResponseParams.inode)
  return inode_;
}
inline void GetAttrResponseParams::set_inode(::google::protobuf::uint32 value) {
  
  inode_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.GetAttrResponseParams.inode)
}

// int32 mode = 3;
inline void GetAttrResponseParams::clear_mode() {
  mode_ = 0;
}
inline ::google::protobuf::int32 GetAttrResponseParams::mode() const {
  // @@protoc_insertion_point(field_get:nfsFuse.GetAttrResponseParams.mode)
  return mode_;
}
inline void GetAttrResponseParams::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.GetAttrResponseParams.mode)
}

// uint32 nlink = 4;
inline void GetAttrResponseParams::clear_nlink() {
  nlink_ = 0u;
}
inline ::google::protobuf::uint32 GetAttrResponseParams::nlink() const {
  // @@protoc_insertion_point(field_get:nfsFuse.GetAttrResponseParams.nlink)
  return nlink_;
}
inline void GetAttrResponseParams::set_nlink(::google::protobuf::uint32 value) {
  
  nlink_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.GetAttrResponseParams.nlink)
}

// uint32 uid = 5;
inline void GetAttrResponseParams::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 GetAttrResponseParams::uid() const {
  // @@protoc_insertion_point(field_get:nfsFuse.GetAttrResponseParams.uid)
  return uid_;
}
inline void GetAttrResponseParams::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.GetAttrResponseParams.uid)
}

// uint32 guid = 6;
inline void GetAttrResponseParams::clear_guid() {
  guid_ = 0u;
}
inline ::google::protobuf::uint32 GetAttrResponseParams::guid() const {
  // @@protoc_insertion_point(field_get:nfsFuse.GetAttrResponseParams.guid)
  return guid_;
}
inline void GetAttrResponseParams::set_guid(::google::protobuf::uint32 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.GetAttrResponseParams.guid)
}

// sint64 size = 7;
inline void GetAttrResponseParams::clear_size() {
  size_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 GetAttrResponseParams::size() const {
  // @@protoc_insertion_point(field_get:nfsFuse.GetAttrResponseParams.size)
  return size_;
}
inline void GetAttrResponseParams::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.GetAttrResponseParams.size)
}

// sint64 blocksize = 8;
inline void GetAttrResponseParams::clear_blocksize() {
  blocksize_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 GetAttrResponseParams::blocksize() const {
  // @@protoc_insertion_point(field_get:nfsFuse.GetAttrResponseParams.blocksize)
  return blocksize_;
}
inline void GetAttrResponseParams::set_blocksize(::google::protobuf::int64 value) {
  
  blocksize_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.GetAttrResponseParams.blocksize)
}

// sint64 nblock = 9;
inline void GetAttrResponseParams::clear_nblock() {
  nblock_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 GetAttrResponseParams::nblock() const {
  // @@protoc_insertion_point(field_get:nfsFuse.GetAttrResponseParams.nblock)
  return nblock_;
}
inline void GetAttrResponseParams::set_nblock(::google::protobuf::int64 value) {
  
  nblock_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.GetAttrResponseParams.nblock)
}

// int32 latime = 10;
inline void GetAttrResponseParams::clear_latime() {
  latime_ = 0;
}
inline ::google::protobuf::int32 GetAttrResponseParams::latime() const {
  // @@protoc_insertion_point(field_get:nfsFuse.GetAttrResponseParams.latime)
  return latime_;
}
inline void GetAttrResponseParams::set_latime(::google::protobuf::int32 value) {
  
  latime_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.GetAttrResponseParams.latime)
}

// int32 mtime = 11;
inline void GetAttrResponseParams::clear_mtime() {
  mtime_ = 0;
}
inline ::google::protobuf::int32 GetAttrResponseParams::mtime() const {
  // @@protoc_insertion_point(field_get:nfsFuse.GetAttrResponseParams.mtime)
  return mtime_;
}
inline void GetAttrResponseParams::set_mtime(::google::protobuf::int32 value) {
  
  mtime_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.GetAttrResponseParams.mtime)
}

// int32 ctime = 12;
inline void GetAttrResponseParams::clear_ctime() {
  ctime_ = 0;
}
inline ::google::protobuf::int32 GetAttrResponseParams::ctime() const {
  // @@protoc_insertion_point(field_get:nfsFuse.GetAttrResponseParams.ctime)
  return ctime_;
}
inline void GetAttrResponseParams::set_ctime(::google::protobuf::int32 value) {
  
  ctime_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.GetAttrResponseParams.ctime)
}

// int32 err = 13;
inline void GetAttrResponseParams::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 GetAttrResponseParams::err() const {
  // @@protoc_insertion_point(field_get:nfsFuse.GetAttrResponseParams.err)
  return err_;
}
inline void GetAttrResponseParams::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.GetAttrResponseParams.err)
}

// -------------------------------------------------------------------

// ReadDirRequestParams

// string path = 1;
inline void ReadDirRequestParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadDirRequestParams::path() const {
  // @@protoc_insertion_point(field_get:nfsFuse.ReadDirRequestParams.path)
  return path_.GetNoArena();
}
inline void ReadDirRequestParams::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.ReadDirRequestParams.path)
}
#if LANG_CXX11
inline void ReadDirRequestParams::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.ReadDirRequestParams.path)
}
#endif
inline void ReadDirRequestParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.ReadDirRequestParams.path)
}
inline void ReadDirRequestParams::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.ReadDirRequestParams.path)
}
inline ::std::string* ReadDirRequestParams::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.ReadDirRequestParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadDirRequestParams::release_path() {
  // @@protoc_insertion_point(field_release:nfsFuse.ReadDirRequestParams.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadDirRequestParams::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.ReadDirRequestParams.path)
}

// -------------------------------------------------------------------

// ReadDirResponseParams

// uint32 dinode = 1;
inline void ReadDirResponseParams::clear_dinode() {
  dinode_ = 0u;
}
inline ::google::protobuf::uint32 ReadDirResponseParams::dinode() const {
  // @@protoc_insertion_point(field_get:nfsFuse.ReadDirResponseParams.dinode)
  return dinode_;
}
inline void ReadDirResponseParams::set_dinode(::google::protobuf::uint32 value) {
  
  dinode_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.ReadDirResponseParams.dinode)
}

// string dname = 2;
inline void ReadDirResponseParams::clear_dname() {
  dname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadDirResponseParams::dname() const {
  // @@protoc_insertion_point(field_get:nfsFuse.ReadDirResponseParams.dname)
  return dname_.GetNoArena();
}
inline void ReadDirResponseParams::set_dname(const ::std::string& value) {
  
  dname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.ReadDirResponseParams.dname)
}
#if LANG_CXX11
inline void ReadDirResponseParams::set_dname(::std::string&& value) {
  
  dname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.ReadDirResponseParams.dname)
}
#endif
inline void ReadDirResponseParams::set_dname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  dname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.ReadDirResponseParams.dname)
}
inline void ReadDirResponseParams::set_dname(const char* value, size_t size) {
  
  dname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.ReadDirResponseParams.dname)
}
inline ::std::string* ReadDirResponseParams::mutable_dname() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.ReadDirResponseParams.dname)
  return dname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadDirResponseParams::release_dname() {
  // @@protoc_insertion_point(field_release:nfsFuse.ReadDirResponseParams.dname)
  
  return dname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadDirResponseParams::set_allocated_dname(::std::string* dname) {
  if (dname != nullptr) {
    
  } else {
    
  }
  dname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dname);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.ReadDirResponseParams.dname)
}

// uint32 dtype = 3;
inline void ReadDirResponseParams::clear_dtype() {
  dtype_ = 0u;
}
inline ::google::protobuf::uint32 ReadDirResponseParams::dtype() const {
  // @@protoc_insertion_point(field_get:nfsFuse.ReadDirResponseParams.dtype)
  return dtype_;
}
inline void ReadDirResponseParams::set_dtype(::google::protobuf::uint32 value) {
  
  dtype_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.ReadDirResponseParams.dtype)
}

// int32 err = 4;
inline void ReadDirResponseParams::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 ReadDirResponseParams::err() const {
  // @@protoc_insertion_point(field_get:nfsFuse.ReadDirResponseParams.err)
  return err_;
}
inline void ReadDirResponseParams::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.ReadDirResponseParams.err)
}

// -------------------------------------------------------------------

// MkDirRequestParams

// string path = 1;
inline void MkDirRequestParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MkDirRequestParams::path() const {
  // @@protoc_insertion_point(field_get:nfsFuse.MkDirRequestParams.path)
  return path_.GetNoArena();
}
inline void MkDirRequestParams::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.MkDirRequestParams.path)
}
#if LANG_CXX11
inline void MkDirRequestParams::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.MkDirRequestParams.path)
}
#endif
inline void MkDirRequestParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.MkDirRequestParams.path)
}
inline void MkDirRequestParams::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.MkDirRequestParams.path)
}
inline ::std::string* MkDirRequestParams::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.MkDirRequestParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MkDirRequestParams::release_path() {
  // @@protoc_insertion_point(field_release:nfsFuse.MkDirRequestParams.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MkDirRequestParams::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.MkDirRequestParams.path)
}

// int32 mode = 2;
inline void MkDirRequestParams::clear_mode() {
  mode_ = 0;
}
inline ::google::protobuf::int32 MkDirRequestParams::mode() const {
  // @@protoc_insertion_point(field_get:nfsFuse.MkDirRequestParams.mode)
  return mode_;
}
inline void MkDirRequestParams::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.MkDirRequestParams.mode)
}

// -------------------------------------------------------------------

// CreateRequestParams

// string path = 1;
inline void CreateRequestParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateRequestParams::path() const {
  // @@protoc_insertion_point(field_get:nfsFuse.CreateRequestParams.path)
  return path_.GetNoArena();
}
inline void CreateRequestParams::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.CreateRequestParams.path)
}
#if LANG_CXX11
inline void CreateRequestParams::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.CreateRequestParams.path)
}
#endif
inline void CreateRequestParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.CreateRequestParams.path)
}
inline void CreateRequestParams::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.CreateRequestParams.path)
}
inline ::std::string* CreateRequestParams::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.CreateRequestParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateRequestParams::release_path() {
  // @@protoc_insertion_point(field_release:nfsFuse.CreateRequestParams.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateRequestParams::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.CreateRequestParams.path)
}

// int32 mode = 2;
inline void CreateRequestParams::clear_mode() {
  mode_ = 0;
}
inline ::google::protobuf::int32 CreateRequestParams::mode() const {
  // @@protoc_insertion_point(field_get:nfsFuse.CreateRequestParams.mode)
  return mode_;
}
inline void CreateRequestParams::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.CreateRequestParams.mode)
}

// int32 flags = 3;
inline void CreateRequestParams::clear_flags() {
  flags_ = 0;
}
inline ::google::protobuf::int32 CreateRequestParams::flags() const {
  // @@protoc_insertion_point(field_get:nfsFuse.CreateRequestParams.flags)
  return flags_;
}
inline void CreateRequestParams::set_flags(::google::protobuf::int32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.CreateRequestParams.flags)
}

// -------------------------------------------------------------------

// CreateResponseParams

// int32 flags = 1;
inline void CreateResponseParams::clear_flags() {
  flags_ = 0;
}
inline ::google::protobuf::int32 CreateResponseParams::flags() const {
  // @@protoc_insertion_point(field_get:nfsFuse.CreateResponseParams.flags)
  return flags_;
}
inline void CreateResponseParams::set_flags(::google::protobuf::int32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.CreateResponseParams.flags)
}

// int32 fh = 2;
inline void CreateResponseParams::clear_fh() {
  fh_ = 0;
}
inline ::google::protobuf::int32 CreateResponseParams::fh() const {
  // @@protoc_insertion_point(field_get:nfsFuse.CreateResponseParams.fh)
  return fh_;
}
inline void CreateResponseParams::set_fh(::google::protobuf::int32 value) {
  
  fh_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.CreateResponseParams.fh)
}

// uint32 oldfh = 3;
inline void CreateResponseParams::clear_oldfh() {
  oldfh_ = 0u;
}
inline ::google::protobuf::uint32 CreateResponseParams::oldfh() const {
  // @@protoc_insertion_point(field_get:nfsFuse.CreateResponseParams.oldfh)
  return oldfh_;
}
inline void CreateResponseParams::set_oldfh(::google::protobuf::uint32 value) {
  
  oldfh_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.CreateResponseParams.oldfh)
}

// uint64 lockowner = 4;
inline void CreateResponseParams::clear_lockowner() {
  lockowner_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CreateResponseParams::lockowner() const {
  // @@protoc_insertion_point(field_get:nfsFuse.CreateResponseParams.lockowner)
  return lockowner_;
}
inline void CreateResponseParams::set_lockowner(::google::protobuf::uint64 value) {
  
  lockowner_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.CreateResponseParams.lockowner)
}

// uint32 pollevent = 5;
inline void CreateResponseParams::clear_pollevent() {
  pollevent_ = 0u;
}
inline ::google::protobuf::uint32 CreateResponseParams::pollevent() const {
  // @@protoc_insertion_point(field_get:nfsFuse.CreateResponseParams.pollevent)
  return pollevent_;
}
inline void CreateResponseParams::set_pollevent(::google::protobuf::uint32 value) {
  
  pollevent_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.CreateResponseParams.pollevent)
}

// int32 err = 6;
inline void CreateResponseParams::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 CreateResponseParams::err() const {
  // @@protoc_insertion_point(field_get:nfsFuse.CreateResponseParams.err)
  return err_;
}
inline void CreateResponseParams::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.CreateResponseParams.err)
}

// -------------------------------------------------------------------

// RmDirRequestParams

// string path = 1;
inline void RmDirRequestParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RmDirRequestParams::path() const {
  // @@protoc_insertion_point(field_get:nfsFuse.RmDirRequestParams.path)
  return path_.GetNoArena();
}
inline void RmDirRequestParams::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.RmDirRequestParams.path)
}
#if LANG_CXX11
inline void RmDirRequestParams::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.RmDirRequestParams.path)
}
#endif
inline void RmDirRequestParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.RmDirRequestParams.path)
}
inline void RmDirRequestParams::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.RmDirRequestParams.path)
}
inline ::std::string* RmDirRequestParams::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.RmDirRequestParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RmDirRequestParams::release_path() {
  // @@protoc_insertion_point(field_release:nfsFuse.RmDirRequestParams.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RmDirRequestParams::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.RmDirRequestParams.path)
}

// int32 mode = 2;
inline void RmDirRequestParams::clear_mode() {
  mode_ = 0;
}
inline ::google::protobuf::int32 RmDirRequestParams::mode() const {
  // @@protoc_insertion_point(field_get:nfsFuse.RmDirRequestParams.mode)
  return mode_;
}
inline void RmDirRequestParams::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.RmDirRequestParams.mode)
}

// -------------------------------------------------------------------

// OpenRequestParams

// string path = 1;
inline void OpenRequestParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OpenRequestParams::path() const {
  // @@protoc_insertion_point(field_get:nfsFuse.OpenRequestParams.path)
  return path_.GetNoArena();
}
inline void OpenRequestParams::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.OpenRequestParams.path)
}
#if LANG_CXX11
inline void OpenRequestParams::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.OpenRequestParams.path)
}
#endif
inline void OpenRequestParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.OpenRequestParams.path)
}
inline void OpenRequestParams::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.OpenRequestParams.path)
}
inline ::std::string* OpenRequestParams::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.OpenRequestParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenRequestParams::release_path() {
  // @@protoc_insertion_point(field_release:nfsFuse.OpenRequestParams.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenRequestParams::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.OpenRequestParams.path)
}

// int32 flags = 2;
inline void OpenRequestParams::clear_flags() {
  flags_ = 0;
}
inline ::google::protobuf::int32 OpenRequestParams::flags() const {
  // @@protoc_insertion_point(field_get:nfsFuse.OpenRequestParams.flags)
  return flags_;
}
inline void OpenRequestParams::set_flags(::google::protobuf::int32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.OpenRequestParams.flags)
}

// int32 fh = 3;
inline void OpenRequestParams::clear_fh() {
  fh_ = 0;
}
inline ::google::protobuf::int32 OpenRequestParams::fh() const {
  // @@protoc_insertion_point(field_get:nfsFuse.OpenRequestParams.fh)
  return fh_;
}
inline void OpenRequestParams::set_fh(::google::protobuf::int32 value) {
  
  fh_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.OpenRequestParams.fh)
}

// uint32 oldfh = 4;
inline void OpenRequestParams::clear_oldfh() {
  oldfh_ = 0u;
}
inline ::google::protobuf::uint32 OpenRequestParams::oldfh() const {
  // @@protoc_insertion_point(field_get:nfsFuse.OpenRequestParams.oldfh)
  return oldfh_;
}
inline void OpenRequestParams::set_oldfh(::google::protobuf::uint32 value) {
  
  oldfh_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.OpenRequestParams.oldfh)
}

// uint64 lockowner = 5;
inline void OpenRequestParams::clear_lockowner() {
  lockowner_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 OpenRequestParams::lockowner() const {
  // @@protoc_insertion_point(field_get:nfsFuse.OpenRequestParams.lockowner)
  return lockowner_;
}
inline void OpenRequestParams::set_lockowner(::google::protobuf::uint64 value) {
  
  lockowner_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.OpenRequestParams.lockowner)
}

// uint32 pollevent = 6;
inline void OpenRequestParams::clear_pollevent() {
  pollevent_ = 0u;
}
inline ::google::protobuf::uint32 OpenRequestParams::pollevent() const {
  // @@protoc_insertion_point(field_get:nfsFuse.OpenRequestParams.pollevent)
  return pollevent_;
}
inline void OpenRequestParams::set_pollevent(::google::protobuf::uint32 value) {
  
  pollevent_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.OpenRequestParams.pollevent)
}

// int32 err = 7;
inline void OpenRequestParams::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 OpenRequestParams::err() const {
  // @@protoc_insertion_point(field_get:nfsFuse.OpenRequestParams.err)
  return err_;
}
inline void OpenRequestParams::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.OpenRequestParams.err)
}

// -------------------------------------------------------------------

// OpenResponseParams

// string path = 1;
inline void OpenResponseParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OpenResponseParams::path() const {
  // @@protoc_insertion_point(field_get:nfsFuse.OpenResponseParams.path)
  return path_.GetNoArena();
}
inline void OpenResponseParams::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.OpenResponseParams.path)
}
#if LANG_CXX11
inline void OpenResponseParams::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.OpenResponseParams.path)
}
#endif
inline void OpenResponseParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.OpenResponseParams.path)
}
inline void OpenResponseParams::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.OpenResponseParams.path)
}
inline ::std::string* OpenResponseParams::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.OpenResponseParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenResponseParams::release_path() {
  // @@protoc_insertion_point(field_release:nfsFuse.OpenResponseParams.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenResponseParams::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.OpenResponseParams.path)
}

// int32 flags = 2;
inline void OpenResponseParams::clear_flags() {
  flags_ = 0;
}
inline ::google::protobuf::int32 OpenResponseParams::flags() const {
  // @@protoc_insertion_point(field_get:nfsFuse.OpenResponseParams.flags)
  return flags_;
}
inline void OpenResponseParams::set_flags(::google::protobuf::int32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.OpenResponseParams.flags)
}

// int32 fh = 3;
inline void OpenResponseParams::clear_fh() {
  fh_ = 0;
}
inline ::google::protobuf::int32 OpenResponseParams::fh() const {
  // @@protoc_insertion_point(field_get:nfsFuse.OpenResponseParams.fh)
  return fh_;
}
inline void OpenResponseParams::set_fh(::google::protobuf::int32 value) {
  
  fh_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.OpenResponseParams.fh)
}

// uint32 oldfh = 4;
inline void OpenResponseParams::clear_oldfh() {
  oldfh_ = 0u;
}
inline ::google::protobuf::uint32 OpenResponseParams::oldfh() const {
  // @@protoc_insertion_point(field_get:nfsFuse.OpenResponseParams.oldfh)
  return oldfh_;
}
inline void OpenResponseParams::set_oldfh(::google::protobuf::uint32 value) {
  
  oldfh_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.OpenResponseParams.oldfh)
}

// uint64 lockowner = 5;
inline void OpenResponseParams::clear_lockowner() {
  lockowner_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 OpenResponseParams::lockowner() const {
  // @@protoc_insertion_point(field_get:nfsFuse.OpenResponseParams.lockowner)
  return lockowner_;
}
inline void OpenResponseParams::set_lockowner(::google::protobuf::uint64 value) {
  
  lockowner_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.OpenResponseParams.lockowner)
}

// uint32 pollevent = 6;
inline void OpenResponseParams::clear_pollevent() {
  pollevent_ = 0u;
}
inline ::google::protobuf::uint32 OpenResponseParams::pollevent() const {
  // @@protoc_insertion_point(field_get:nfsFuse.OpenResponseParams.pollevent)
  return pollevent_;
}
inline void OpenResponseParams::set_pollevent(::google::protobuf::uint32 value) {
  
  pollevent_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.OpenResponseParams.pollevent)
}

// int32 err = 7;
inline void OpenResponseParams::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 OpenResponseParams::err() const {
  // @@protoc_insertion_point(field_get:nfsFuse.OpenResponseParams.err)
  return err_;
}
inline void OpenResponseParams::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.OpenResponseParams.err)
}

// -------------------------------------------------------------------

// ReadRequestParams

// string path = 1;
inline void ReadRequestParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadRequestParams::path() const {
  // @@protoc_insertion_point(field_get:nfsFuse.ReadRequestParams.path)
  return path_.GetNoArena();
}
inline void ReadRequestParams::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.ReadRequestParams.path)
}
#if LANG_CXX11
inline void ReadRequestParams::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.ReadRequestParams.path)
}
#endif
inline void ReadRequestParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.ReadRequestParams.path)
}
inline void ReadRequestParams::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.ReadRequestParams.path)
}
inline ::std::string* ReadRequestParams::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.ReadRequestParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadRequestParams::release_path() {
  // @@protoc_insertion_point(field_release:nfsFuse.ReadRequestParams.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadRequestParams::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.ReadRequestParams.path)
}

// uint32 size = 2;
inline void ReadRequestParams::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 ReadRequestParams::size() const {
  // @@protoc_insertion_point(field_get:nfsFuse.ReadRequestParams.size)
  return size_;
}
inline void ReadRequestParams::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.ReadRequestParams.size)
}

// int64 offset = 3;
inline void ReadRequestParams::clear_offset() {
  offset_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 ReadRequestParams::offset() const {
  // @@protoc_insertion_point(field_get:nfsFuse.ReadRequestParams.offset)
  return offset_;
}
inline void ReadRequestParams::set_offset(::google::protobuf::int64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.ReadRequestParams.offset)
}

// -------------------------------------------------------------------

// ReadResponseParams

// bytes buffer = 1;
inline void ReadResponseParams::clear_buffer() {
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadResponseParams::buffer() const {
  // @@protoc_insertion_point(field_get:nfsFuse.ReadResponseParams.buffer)
  return buffer_.GetNoArena();
}
inline void ReadResponseParams::set_buffer(const ::std::string& value) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.ReadResponseParams.buffer)
}
#if LANG_CXX11
inline void ReadResponseParams::set_buffer(::std::string&& value) {
  
  buffer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.ReadResponseParams.buffer)
}
#endif
inline void ReadResponseParams::set_buffer(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.ReadResponseParams.buffer)
}
inline void ReadResponseParams::set_buffer(const void* value, size_t size) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.ReadResponseParams.buffer)
}
inline ::std::string* ReadResponseParams::mutable_buffer() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.ReadResponseParams.buffer)
  return buffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadResponseParams::release_buffer() {
  // @@protoc_insertion_point(field_release:nfsFuse.ReadResponseParams.buffer)
  
  return buffer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadResponseParams::set_allocated_buffer(::std::string* buffer) {
  if (buffer != nullptr) {
    
  } else {
    
  }
  buffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buffer);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.ReadResponseParams.buffer)
}

// int32 bufferlength = 2;
inline void ReadResponseParams::clear_bufferlength() {
  bufferlength_ = 0;
}
inline ::google::protobuf::int32 ReadResponseParams::bufferlength() const {
  // @@protoc_insertion_point(field_get:nfsFuse.ReadResponseParams.bufferlength)
  return bufferlength_;
}
inline void ReadResponseParams::set_bufferlength(::google::protobuf::int32 value) {
  
  bufferlength_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.ReadResponseParams.bufferlength)
}

// int32 err = 3;
inline void ReadResponseParams::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 ReadResponseParams::err() const {
  // @@protoc_insertion_point(field_get:nfsFuse.ReadResponseParams.err)
  return err_;
}
inline void ReadResponseParams::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.ReadResponseParams.err)
}

// -------------------------------------------------------------------

// WriteRequestParams

// bytes buffer = 1;
inline void WriteRequestParams::clear_buffer() {
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteRequestParams::buffer() const {
  // @@protoc_insertion_point(field_get:nfsFuse.WriteRequestParams.buffer)
  return buffer_.GetNoArena();
}
inline void WriteRequestParams::set_buffer(const ::std::string& value) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.WriteRequestParams.buffer)
}
#if LANG_CXX11
inline void WriteRequestParams::set_buffer(::std::string&& value) {
  
  buffer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.WriteRequestParams.buffer)
}
#endif
inline void WriteRequestParams::set_buffer(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.WriteRequestParams.buffer)
}
inline void WriteRequestParams::set_buffer(const void* value, size_t size) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.WriteRequestParams.buffer)
}
inline ::std::string* WriteRequestParams::mutable_buffer() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.WriteRequestParams.buffer)
  return buffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteRequestParams::release_buffer() {
  // @@protoc_insertion_point(field_release:nfsFuse.WriteRequestParams.buffer)
  
  return buffer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteRequestParams::set_allocated_buffer(::std::string* buffer) {
  if (buffer != nullptr) {
    
  } else {
    
  }
  buffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buffer);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.WriteRequestParams.buffer)
}

// string path = 2;
inline void WriteRequestParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteRequestParams::path() const {
  // @@protoc_insertion_point(field_get:nfsFuse.WriteRequestParams.path)
  return path_.GetNoArena();
}
inline void WriteRequestParams::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.WriteRequestParams.path)
}
#if LANG_CXX11
inline void WriteRequestParams::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.WriteRequestParams.path)
}
#endif
inline void WriteRequestParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.WriteRequestParams.path)
}
inline void WriteRequestParams::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.WriteRequestParams.path)
}
inline ::std::string* WriteRequestParams::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.WriteRequestParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteRequestParams::release_path() {
  // @@protoc_insertion_point(field_release:nfsFuse.WriteRequestParams.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteRequestParams::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.WriteRequestParams.path)
}

// uint32 bufferlength = 3;
inline void WriteRequestParams::clear_bufferlength() {
  bufferlength_ = 0u;
}
inline ::google::protobuf::uint32 WriteRequestParams::bufferlength() const {
  // @@protoc_insertion_point(field_get:nfsFuse.WriteRequestParams.bufferlength)
  return bufferlength_;
}
inline void WriteRequestParams::set_bufferlength(::google::protobuf::uint32 value) {
  
  bufferlength_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.WriteRequestParams.bufferlength)
}

// int32 offset = 4;
inline void WriteRequestParams::clear_offset() {
  offset_ = 0;
}
inline ::google::protobuf::int32 WriteRequestParams::offset() const {
  // @@protoc_insertion_point(field_get:nfsFuse.WriteRequestParams.offset)
  return offset_;
}
inline void WriteRequestParams::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.WriteRequestParams.offset)
}

// -------------------------------------------------------------------

// WriteResponseParams

// int32 bufferlength = 1;
inline void WriteResponseParams::clear_bufferlength() {
  bufferlength_ = 0;
}
inline ::google::protobuf::int32 WriteResponseParams::bufferlength() const {
  // @@protoc_insertion_point(field_get:nfsFuse.WriteResponseParams.bufferlength)
  return bufferlength_;
}
inline void WriteResponseParams::set_bufferlength(::google::protobuf::int32 value) {
  
  bufferlength_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.WriteResponseParams.bufferlength)
}

// int32 err = 2;
inline void WriteResponseParams::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 WriteResponseParams::err() const {
  // @@protoc_insertion_point(field_get:nfsFuse.WriteResponseParams.err)
  return err_;
}
inline void WriteResponseParams::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.WriteResponseParams.err)
}

// -------------------------------------------------------------------

// UnlinkRequestParams

// string path = 1;
inline void UnlinkRequestParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnlinkRequestParams::path() const {
  // @@protoc_insertion_point(field_get:nfsFuse.UnlinkRequestParams.path)
  return path_.GetNoArena();
}
inline void UnlinkRequestParams::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.UnlinkRequestParams.path)
}
#if LANG_CXX11
inline void UnlinkRequestParams::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.UnlinkRequestParams.path)
}
#endif
inline void UnlinkRequestParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.UnlinkRequestParams.path)
}
inline void UnlinkRequestParams::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.UnlinkRequestParams.path)
}
inline ::std::string* UnlinkRequestParams::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.UnlinkRequestParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnlinkRequestParams::release_path() {
  // @@protoc_insertion_point(field_release:nfsFuse.UnlinkRequestParams.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnlinkRequestParams::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.UnlinkRequestParams.path)
}

// -------------------------------------------------------------------

// RenameRequestParams

// string fp = 1;
inline void RenameRequestParams::clear_fp() {
  fp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RenameRequestParams::fp() const {
  // @@protoc_insertion_point(field_get:nfsFuse.RenameRequestParams.fp)
  return fp_.GetNoArena();
}
inline void RenameRequestParams::set_fp(const ::std::string& value) {
  
  fp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.RenameRequestParams.fp)
}
#if LANG_CXX11
inline void RenameRequestParams::set_fp(::std::string&& value) {
  
  fp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.RenameRequestParams.fp)
}
#endif
inline void RenameRequestParams::set_fp(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  fp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.RenameRequestParams.fp)
}
inline void RenameRequestParams::set_fp(const char* value, size_t size) {
  
  fp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.RenameRequestParams.fp)
}
inline ::std::string* RenameRequestParams::mutable_fp() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.RenameRequestParams.fp)
  return fp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RenameRequestParams::release_fp() {
  // @@protoc_insertion_point(field_release:nfsFuse.RenameRequestParams.fp)
  
  return fp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameRequestParams::set_allocated_fp(::std::string* fp) {
  if (fp != nullptr) {
    
  } else {
    
  }
  fp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fp);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.RenameRequestParams.fp)
}

// string tp = 2;
inline void RenameRequestParams::clear_tp() {
  tp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RenameRequestParams::tp() const {
  // @@protoc_insertion_point(field_get:nfsFuse.RenameRequestParams.tp)
  return tp_.GetNoArena();
}
inline void RenameRequestParams::set_tp(const ::std::string& value) {
  
  tp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.RenameRequestParams.tp)
}
#if LANG_CXX11
inline void RenameRequestParams::set_tp(::std::string&& value) {
  
  tp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.RenameRequestParams.tp)
}
#endif
inline void RenameRequestParams::set_tp(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.RenameRequestParams.tp)
}
inline void RenameRequestParams::set_tp(const char* value, size_t size) {
  
  tp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.RenameRequestParams.tp)
}
inline ::std::string* RenameRequestParams::mutable_tp() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.RenameRequestParams.tp)
  return tp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RenameRequestParams::release_tp() {
  // @@protoc_insertion_point(field_release:nfsFuse.RenameRequestParams.tp)
  
  return tp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameRequestParams::set_allocated_tp(::std::string* tp) {
  if (tp != nullptr) {
    
  } else {
    
  }
  tp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tp);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.RenameRequestParams.tp)
}

// uint32 flag = 3;
inline void RenameRequestParams::clear_flag() {
  flag_ = 0u;
}
inline ::google::protobuf::uint32 RenameRequestParams::flag() const {
  // @@protoc_insertion_point(field_get:nfsFuse.RenameRequestParams.flag)
  return flag_;
}
inline void RenameRequestParams::set_flag(::google::protobuf::uint32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.RenameRequestParams.flag)
}

// -------------------------------------------------------------------

// MknodRequestParams

// string path = 1;
inline void MknodRequestParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MknodRequestParams::path() const {
  // @@protoc_insertion_point(field_get:nfsFuse.MknodRequestParams.path)
  return path_.GetNoArena();
}
inline void MknodRequestParams::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.MknodRequestParams.path)
}
#if LANG_CXX11
inline void MknodRequestParams::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.MknodRequestParams.path)
}
#endif
inline void MknodRequestParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.MknodRequestParams.path)
}
inline void MknodRequestParams::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.MknodRequestParams.path)
}
inline ::std::string* MknodRequestParams::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.MknodRequestParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MknodRequestParams::release_path() {
  // @@protoc_insertion_point(field_release:nfsFuse.MknodRequestParams.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MknodRequestParams::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.MknodRequestParams.path)
}

// int32 mode = 2;
inline void MknodRequestParams::clear_mode() {
  mode_ = 0;
}
inline ::google::protobuf::int32 MknodRequestParams::mode() const {
  // @@protoc_insertion_point(field_get:nfsFuse.MknodRequestParams.mode)
  return mode_;
}
inline void MknodRequestParams::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.MknodRequestParams.mode)
}

// uint32 rdev = 3;
inline void MknodRequestParams::clear_rdev() {
  rdev_ = 0u;
}
inline ::google::protobuf::uint32 MknodRequestParams::rdev() const {
  // @@protoc_insertion_point(field_get:nfsFuse.MknodRequestParams.rdev)
  return rdev_;
}
inline void MknodRequestParams::set_rdev(::google::protobuf::uint32 value) {
  
  rdev_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.MknodRequestParams.rdev)
}

// -------------------------------------------------------------------

// UtimensRequestParams

// string path = 1;
inline void UtimensRequestParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UtimensRequestParams::path() const {
  // @@protoc_insertion_point(field_get:nfsFuse.UtimensRequestParams.path)
  return path_.GetNoArena();
}
inline void UtimensRequestParams::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfsFuse.UtimensRequestParams.path)
}
#if LANG_CXX11
inline void UtimensRequestParams::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfsFuse.UtimensRequestParams.path)
}
#endif
inline void UtimensRequestParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfsFuse.UtimensRequestParams.path)
}
inline void UtimensRequestParams::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfsFuse.UtimensRequestParams.path)
}
inline ::std::string* UtimensRequestParams::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfsFuse.UtimensRequestParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UtimensRequestParams::release_path() {
  // @@protoc_insertion_point(field_release:nfsFuse.UtimensRequestParams.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UtimensRequestParams::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfsFuse.UtimensRequestParams.path)
}

// int32 sec = 2;
inline void UtimensRequestParams::clear_sec() {
  sec_ = 0;
}
inline ::google::protobuf::int32 UtimensRequestParams::sec() const {
  // @@protoc_insertion_point(field_get:nfsFuse.UtimensRequestParams.sec)
  return sec_;
}
inline void UtimensRequestParams::set_sec(::google::protobuf::int32 value) {
  
  sec_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.UtimensRequestParams.sec)
}

// int64 nsec = 3;
inline void UtimensRequestParams::clear_nsec() {
  nsec_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 UtimensRequestParams::nsec() const {
  // @@protoc_insertion_point(field_get:nfsFuse.UtimensRequestParams.nsec)
  return nsec_;
}
inline void UtimensRequestParams::set_nsec(::google::protobuf::int64 value) {
  
  nsec_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.UtimensRequestParams.nsec)
}

// int32 sec2 = 4;
inline void UtimensRequestParams::clear_sec2() {
  sec2_ = 0;
}
inline ::google::protobuf::int32 UtimensRequestParams::sec2() const {
  // @@protoc_insertion_point(field_get:nfsFuse.UtimensRequestParams.sec2)
  return sec2_;
}
inline void UtimensRequestParams::set_sec2(::google::protobuf::int32 value) {
  
  sec2_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.UtimensRequestParams.sec2)
}

// int64 nsec2 = 5;
inline void UtimensRequestParams::clear_nsec2() {
  nsec2_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 UtimensRequestParams::nsec2() const {
  // @@protoc_insertion_point(field_get:nfsFuse.UtimensRequestParams.nsec2)
  return nsec2_;
}
inline void UtimensRequestParams::set_nsec2(::google::protobuf::int64 value) {
  
  nsec2_ = value;
  // @@protoc_insertion_point(field_set:nfsFuse.UtimensRequestParams.nsec2)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace nfsFuse

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_nfsFuse_2eproto
